0	movie_platform||lists||user_id: user id. ID related to the user who created the list.
1	movie_platform||lists||list_id: list id. ID of the list on Mubi
2	movie_platform||lists||list_title: list title. Name of the list
3	movie_platform||lists||list_movie_number: list movie number. Number of movies added to the list
4	movie_platform||lists||list_update_timestamp_utc: list update timestamp utc. Last update timestamp for the list. ['2020-04-27 06:04:22']
5	movie_platform||lists||list_creation_timestamp_utc: list creation timestamp utc. Creation timestamp for the list. ['2011-06-27 22:03:49']
6	movie_platform||lists||list_followers: list followers. Number of followers on the list
7	movie_platform||lists||list_url: list url. URL to the list page on Mubi
8	movie_platform||lists||list_comments: list comments. Number of comments on the list
9	movie_platform||lists||list_description: list description. List description made by the user
10	movie_platform||lists||list_cover_image_url: list cover image url. 
11	movie_platform||lists||list_first_image_url: list first image url. 
12	movie_platform||lists||list_second_image_url: list second image url. 
13	movie_platform||lists||list_third_image_url: list third image url. 
14	movie_platform||movies||movie_id: movie id. ID related to the movie on Mubi
15	movie_platform||movies||movie_title: movie title. Name of the movie
16	movie_platform||movies||movie_release_year: movie release year. Release year of the movie
17	movie_platform||movies||movie_url: movie url. URL to the movie page on Mubi
18	movie_platform||movies||movie_title_language: movie title language. By default, the title is in English.. ['en']. Only contains one value which is 'en'
19	movie_platform||movies||movie_popularity: movie popularity. Number of Mubi users who love this movie
20	movie_platform||movies||movie_image_url: movie image url. Image URL to the movie on Mubi
21	movie_platform||movies||director_id: director id. ID related to the movie director on Mubi
22	movie_platform||movies||director_name: director name. Full Name of the movie director
23	movie_platform||movies||director_url: director url. URL to the movie director page on Mubi
24	movie_platform||ratings_users||user_id: user id. ID related to the user rating the movie
25	movie_platform||ratings_users||rating_date_utc: rating date utc. Rating date for the movie rating.. ['2019-01-24']. YYYY-MM-DD
26	movie_platform||ratings_users||user_trialist: user trialist. whether the user was a trialist when he rated the movie. [None, 0, 1]. 1 = the user was a trialist when he rated the movie  0 = the user was not a trialist when he rated the movie
27	movie_platform||ratings_users||user_subscriber: user subscriber. whether the user was a subscriber when he rated the movie. [None, 0, 1]. 1 = the user was a subscriber when he rated the movie  0 = the user was not a subscriber when he rated the movie
28	movie_platform||ratings_users||user_avatar_image_url: user avatar image url. URL to the user profile image on Mubi
29	movie_platform||ratings_users||user_cover_image_url: user cover image url. URL to the user profile cover image on Mubi
30	movie_platform||ratings_users||user_eligible_for_trial: user eligible for trial. whether the user was eligible for trial when he rated the movie. [None, 1, 0]. 1 = the user was eligible for trial when he rated the movie  0 = the user was not eligible for trial when he rated the movie
31	movie_platform||ratings_users||user_has_payment_method: user has payment method. whether the user was a paying subscriber when he rated the movie. [None, 0, 1]. 1 = the user was a paying subscriber when he rated the movie  0 = the user was not a paying subscriber when he rated
32	movie_platform||lists_users||user_id: user id. ID related to the user who created the list.
33	movie_platform||lists_users||list_id: list id. ID of the list on Mubi
34	movie_platform||lists_users||list_update_date_utc: list update date utc. Last update date for the list. ['2020-04-27']. YYYY-MM-DD
35	movie_platform||lists_users||list_creation_date_utc: list creation date utc. Creation date for the list. ['2016-01-03']. YYYY-MM-DD
36	movie_platform||lists_users||user_trialist: user trialist. whether the user was a tralist when he created the list. [0, 1]. 1 = the user was a trialist when he created the list  0 = the user was not a trialist when he created the list
37	movie_platform||lists_users||user_subscriber: user subscriber. whether the user was a subscriber when he created the list. [0, 1]. 1 = the user was a subscriber when he created the list  0 = the user was not a subscriber when he created the list
38	movie_platform||lists_users||user_avatar_image_url: user avatar image url. User profile image URL on Mubi
39	movie_platform||lists_users||user_cover_image_url: user cover image url. User profile cover image URL on Mubi
40	movie_platform||lists_users||user_eligible_for_trial: user eligible for trial. whether the user was eligible for trial when he created the list. ['1', '0']. 1 = the user was eligible for trial when he created the list  0 = the user was not eligible for trial when he created the list
41	movie_platform||lists_users||user_has_payment_method: user has payment method. whether the user was a paying subscriber when he created the list. ['0', '1']. 1 = the user was a paying subscriber when he created the list  0 = the user was not a paying subscriber when he created the list
42	movie_platform||ratings||movie_id: movie id. Movie ID related to the rating
43	movie_platform||ratings||rating_id: rating id. Rating ID on Mubi
44	movie_platform||ratings||rating_url: rating url. URL to the rating on Mubi
45	movie_platform||ratings||rating_score: rating score. Rating score ranging from 1 (lowest) to 5 (highest). [None, 4, 3, 5, 2, 1]. commonsense evidence: The score is proportional to the user's liking. The higher the score is, the more the user likes the movie
46	movie_platform||ratings||rating_timestamp_utc: rating timestamp utc. Timestamp for the movie rating made by the user on Mubi. ['2019-07-22 11:34:51']
47	"movie_platform||ratings||critic: Critic made by the user rating the movie.. If value = ""None"", the user did not write a critic when rating the movie."
48	movie_platform||ratings||critic_likes: critic likes. Number of likes related to the critic made by the user rating the movie
49	movie_platform||ratings||critic_comments: critic comments. Number of comments related to the critic made by the user rating the movie
50	movie_platform||ratings||user_id: user id. ID related to the user rating the movie
51	movie_platform||ratings||user_trialist: user trialist. whether user was a tralist when he rated the movie. [None, 0, 1]. 1 = the user was a trialist when he rated the movie  0 = the user was not a trialist when he rated the movie
52	movie_platform||ratings||user_subscriber: user subscriber. . [None, 0, 1]
53	movie_platform||ratings||user_eligible_for_trial: user eligible for trial. . [None, 1, 0]
54	movie_platform||ratings||user_has_payment_method: user has payment method. . [None, 0, 1]
55	book_publishing_company||authors||au_id: author id. unique number identifying authors. ['172-32-1176', '213-46-8915', '238-95-7766', '267-41-2394', '274-80-9391']
56	book_publishing_company||authors||au_lname: author last name. ['Ringer', 'del Castillo', 'Yokomoto', 'White', 'Stringer']
57	book_publishing_company||authors||au_fname: author first name. ['Sylvia', 'Stearns', 'Sheryl', 'Reginald', 'Morningstar']
58	book_publishing_company||authors||phone: phone number. ['801 826-0752', '415 836-7128', '913 843-0462', '707 938-6445', '707 448-4982']
59	book_publishing_company||authors||address: ['67 Seventh Av.', '3410 Blonde St.', 'PO Box 792', '6223 Bateman St.', '589 Darwin Ln.']
60	book_publishing_company||authors||city: ['Oakland', 'Salt Lake City', 'Palo Alto', 'Berkeley', 'Walnut Creek']
61	book_publishing_company||authors||state: ['CA', 'UT', 'TN', 'OR', 'MI']
62	book_publishing_company||authors||zip: zip code. ['94609', '94705', '94301', '84152', '97330']
63	book_publishing_company||authors||contract: contract status. ['0']. commonsense evidence: 0: not on the contract 1: on the contract
64	book_publishing_company||jobs||job_id: job id. unique id number identifying the jobs
65	book_publishing_company||jobs||job_desc: job description. ['Sales Representative', 'Publisher', 'Public Relations Manager', 'Productions Manager', 'Operations Manager']. commonsense evidence: staff should be mentioned
66	book_publishing_company||jobs||min_lvl: min level. min job level. [75, 25, 175, 200, 150]
67	book_publishing_company||jobs||max_lvl: max level. max job level. [250, 100, 225, 175, 200]. commonsense evidence: level range for jobs mentioned in job_desc is (min_lvl, max_lvl)
68	book_publishing_company||publishers||pub_id: publisher id. unique id number identifying publisher. ['0736', '0877', '1389', '1622', '1756']
69	book_publishing_company||publishers||pub_name: publisher name. ['Scootney Books', 'Ramona Publishers', 'New Moon Books', 'Lucerne Publishing', 'GGG&G']
70	book_publishing_company||publishers||city: ['Washington', 'Paris', 'New York', 'M\x81nchen', 'Dallas']
71	book_publishing_company||publishers||state: [None, 'TX', 'NY', 'MA', 'IL', 'DC']
72	book_publishing_company||publishers||country: ['USA', 'Germany', 'France']
73	book_publishing_company||employee||emp_id: employee id. unique number identifying employees. ['A-C71970F', 'A-R89858F', 'AMD15433F', 'ARD36773F', 'CFH28514M']
74	book_publishing_company||employee||fname: first name. first name of employees. ['Maria', 'Yoshi', 'Victoria', 'Timothy', 'Sven']
75	book_publishing_company||employee||minit: middle name. ['A', 'M', 'F', 'S', 'P']
76	book_publishing_company||employee||lname: last name. ['Tonini', 'Thomas', 'Sommer', 'Snyder', 'Smith']
77	book_publishing_company||employee||job_id: job id. number identifying jobs
78	book_publishing_company||employee||job_lvl: job level. commonsense evidence: higher value means job level is higher
79	book_publishing_company||employee||pub_id: publisher id. id number identifying publishers. ['1389', '0877', '0736', '9999', '9952']
80	book_publishing_company||employee||hire_date: hire date. ['1994-05-01 00:00:00.0']
81	book_publishing_company||pub_info||pub_id: publication id. unique id number identifying publications. ['0877', '1389', '1622', '1756', '9901']
82	book_publishing_company||pub_info||logo: logo of publications
83	book_publishing_company||pub_info||pr_info: publisher's information
84	book_publishing_company||stores||stor_id: store id. unique id number of stores. ['6380', '7066', '7067', '7131', '7896']
85	book_publishing_company||stores||stor_name: store name. . ['News & Brews', 'Fricative Bookshop', 'Eric the Read Books', 'Doc-U-Mat: Quality Laundry and Books', 'Bookbeat']
86	book_publishing_company||stores||stor_address: store address. . ['89 Madison St.', '788 Catamaugus Ave.', '679 Carson St.', '577 First St.', '567 Pasadena Ave.']
87	book_publishing_company||stores||city: city name. ['Tustin', 'Seattle', 'Remulade', 'Portland', 'Los Gatos']
88	book_publishing_company||stores||state: state code. ['CA', 'WA', 'OR']
89	book_publishing_company||stores||zip: zip code. ['98056', '98014', '96745', '92789', '90019']
90	book_publishing_company||discounts||discounttype: discount type. ['Volume Discount', 'Initial Customer', 'Customer Discount']
91	book_publishing_company||discounts||stor_id: store id. [None, '8042']
92	book_publishing_company||discounts||lowqty: low quantity. low quantity (quantity floor). [None, 100]. commonsense evidence:  The minimum quantity to enjoy the discount
93	book_publishing_company||discounts||highqty: high quantity. high quantity (max quantity). [None, 1000]. commonsense evidence:  The maximum quantity to enjoy the discount
94	book_publishing_company||discounts||discount: [10.5, 6.7, 5.0]
95	book_publishing_company||titles||title_id: title id. ['BU1032', 'BU1111', 'BU2075', 'BU7832', 'MC2222']
96	book_publishing_company||titles||title: 
97	book_publishing_company||titles||type: type of titles. ['psychology', 'business', 'trad_cook', 'popular_comp', 'mod_cook']
98	book_publishing_company||titles||pub_id: publisher id. ['0877', '1389', '0736']
99	book_publishing_company||titles||price: 
100	book_publishing_company||titles||advance: pre-paid amount
101	book_publishing_company||titles||royalty: [None, 10, 24, 12, 16, 14]
102	book_publishing_company||titles||ytd_sales: year to date sales
103	book_publishing_company||titles||notes: notes if any. commonsense evidence: had better understand notes contents and put some of them into questions if any
104	book_publishing_company||titles||pubdate: publication date. ['1991-06-12 00:00:00.0']
105	book_publishing_company||roysched||title_id: title id. unique id number identifying title. ['TC3218', 'MC3021', 'BU7832', 'BU2075', 'BU1111']
106	book_publishing_company||roysched||lorange: low range
107	book_publishing_company||roysched||hirange: high range
108	book_publishing_company||roysched||royalty: [12, 10, 14, 16, 18]
109	book_publishing_company||sales||stor_id: store id. id number identifying stores. ['7131', '7067', '8042', '7896', '6380']
110	book_publishing_company||sales||ord_num: order number. id number identifying the orders. ['P3087a', 'P2121', 'X999', 'TQ456', 'QQ2299']
111	book_publishing_company||sales||ord_date: order date. the date of the order. ['1994-09-14 00:00:00.0']
112	book_publishing_company||sales||qty: quantity. quantity of sales
113	book_publishing_company||sales||payterms: payments. ['Net 60', 'Net 30', 'ON invoice']
114	book_publishing_company||sales||title_id: title id. id number identifying titles. ['PS2091', 'MC3021', 'BU1032', 'TC7777', 'TC4203']
115	book_publishing_company||titleauthor||au_id: author id. ['213-46-8915', '267-41-2394', '486-29-1786', '724-80-9391', '899-46-2035']
116	book_publishing_company||titleauthor||title_id: title id. ['TC7777', 'PS2091', 'PS1372', 'PC8888', 'MC3021']
117	book_publishing_company||titleauthor||au_ord: author ordering. [1, 2, 3]
118	book_publishing_company||titleauthor||royaltyper: [100, 50, 40, 75, 60]
119	retail_complains||state||StateCode: . ['AL', 'AR', 'AZ', 'CA', 'CO']
120	retail_complains||state||State: . ['Wyoming', 'Wisconsin', 'Washington', 'Virginia', 'Utah']
121	retail_complains||state||Region: . ['South', 'West', 'Midwest', 'Northeast']
122	retail_complains||callcenterlogs||Date received: complaint date. ['2015-05-11']
123	retail_complains||callcenterlogs||Complaint ID: unique id number representing each complaint. [None, 'CR0000072', 'CR0000084', 'CR0000175', 'CR0000298', 'CR0000895']
124	retail_complains||callcenterlogs||rand client: client id. [None, 'C00002447', 'C00001016', 'C00008287', 'C00006114', 'C00002371']
125	retail_complains||callcenterlogs||phonefinal: phone final. final phone number. ['259-090-1827', '436-341-7372', '837-195-8937', '726-281-9507', '610-520-7079']
126	retail_complains||callcenterlogs||vru+line: voice response unit line. [None, 'AA0213', 'AA0106', 'AA0109', 'AA0101', 'AA0202']
127	retail_complains||callcenterlogs||call_id: call id. id number identifying the call
128	retail_complains||callcenterlogs||priority: priority of the complaint. [None, 0, 2, 1]. 0, 1, 2,  null: not available, higher: -> higher priority, -> more serious/urgent complaint
129	retail_complains||callcenterlogs||type: type of complaint. [None, 'PS', 'NW', 'NE', 'TT', 'IN']
130	retail_complains||callcenterlogs||outcome: the outcome of processing of complaints. [None, 'AGENT', 'HANG', 'PHANTOM']
131	retail_complains||callcenterlogs||server: [None, 'NO_SERVER', 'KAZAV', 'TOVA', 'IDIT', 'SHARON']
132	retail_complains||callcenterlogs||ser_start: server start. server start time. ['15:54:21', '12:46:34', '14:32:36', '14:00:11', '13:59:20']. HH:MM:SS
133	retail_complains||callcenterlogs||ser_exit: server exit. server exit time. ['11:00:43', '16:49:41', '15:55:27', '15:54:50', '15:09:58']
134	retail_complains||callcenterlogs||ser_time: server time. ['00:00:04', '00:00:05', '00:00:03', '00:00:02', '00:00:01']. commonsense evidence: longer server time referring to more verbose/longer complaint
135	retail_complains||client||client_id: client id. unique id client number. ['C00000001', 'C00000002', 'C00000003', 'C00000004', 'C00000005']
136	retail_complains||client||sex: sex of client. ['Male', 'Female']
137	retail_complains||client||day: day of the birthday
138	retail_complains||client||month: month of the birthday
139	retail_complains||client||year: year when is born
140	retail_complains||client||age: teenager: 13-19 adult: 19-65 elder: > 65
141	retail_complains||client||social: social number. ['999-93-5337', '999-77-1634', '999-14-7585', '998-86-6838', '998-80-4039']. ssn: us id number for each person
142	retail_complains||client||first: first name. ['Aubrey', 'Addison', 'Harper', 'Brooklyn', 'Avery']
143	retail_complains||client||middle: middle name. ['Sawyer', 'Parker', 'Jordan', 'Blake', 'Angel']
144	retail_complains||client||last: last name. ['Martinez', 'White', 'Thompson', 'Thomas', 'Taylor']
145	retail_complains||client||phone: phone number. ['999-739-0333', '999-572-7626', '999-197-1885', '999-001-2485', '998-060-8032']
146	retail_complains||client||email: commonsense evidence: google email / account: @gamil.com microsoft email / account: xxx@outlook.com
147	retail_complains||client||address_1: address 1. ['96 Swanson Dr.', '7 Tarkiln Hill Dr.', '41 Joy Ridge St.', '19 Yukon St.', '9995 Addison St.']
148	retail_complains||client||address_2: address 2. [None, 'Unit 1B', 'Unit 81', 'Unit 80', 'Unit 8', 'Unit 77']. entire address = (address_1, address_2)
149	retail_complains||client||city: ['New York City', 'Chicago', 'Los Angeles', 'Houston', 'Charleston']
150	retail_complains||client||state: state code. ['NY', 'MA', 'CT', 'CA', 'RI']
151	retail_complains||client||zipcode: 
152	retail_complains||client||district_id: district id. district id number
153	retail_complains||district||district_id: district id. unique id number representing district
154	retail_complains||district||city: ['Portland', 'Charleston', 'Yonkers', 'Worcester', 'Wilmington']
155	retail_complains||district||state_abbrev: state abbrev. state abbreviated code. ['MA', 'CT', 'NY', 'RI', 'TX']
156	retail_complains||district||division: ['New England', 'South Atlantic', 'Mountain', 'West North Central', 'Middle Atlantic']
157	retail_complains||events||Date received: ['2012-06-19']
158	retail_complains||events||Product: complaining about which product. ['Bank account or service', 'Credit card']
159	retail_complains||events||Sub-product: sub product if exists. [None, 'Checking account', 'Other bank product/service', 'Savings account', '(CD) Certificate of deposit', 'Cashing a check without an account']. commonsense evidence: detailed product
160	retail_complains||events||Issue: problems leading to this complaints. ['Account opening, closing, or management', 'Deposits and withdrawals', 'Problems caused by my funds being low', 'Billing disputes', 'Making/receiving payments, sending money']
161	retail_complains||events||Sub-issue: sub problems leading to this complaints if exists. commonsense evidence: more detailed issue
162	retail_complains||events||Consumer complaint narrative: 
163	retail_complains||events||Tags: tags of client. [None, 'Older American', 'Servicemember', 'Older American, Servicemember']
164	retail_complains||events||Consumer consent provided?: Tags Consumer consent provided?. whether the tags labeled under permission of the clients. [None, 'N/A', 'Consent provided', 'Consent not provided', 'Other']. commonsense evidence:  null, 'N/A' or empty value: indicating that the company didn't get the permission of consent.  if the value is not empty: customers provide the consent for this tag.
165	retail_complains||events||Submitted via: ['Web', 'Referral', 'Phone', 'Postal mail', 'Fax']
166	retail_complains||events||Date sent to company: ['2012-06-21']. commonsense evidence: delay of the complaints = 'Date sent to company'
167	retail_complains||events||Company response to consumer: ['Closed with explanation', 'Closed with monetary relief', 'Closed with non-monetary relief', 'Closed with relief', 'Closed without relief']
168	retail_complains||events||Timely response?: whether the response of the company is timely. ['Yes', 'No']
169	retail_complains||events||Consumer disputed?: whether the consumer dispute about the response from the company.. [None, 'No', 'Yes']
170	retail_complains||events||Complaint ID: id number indicating which complaint. ['CR0000072', 'CR0000084', 'CR0000140', 'CR0000175', 'CR0000193']
171	retail_complains||events||Client_ID: Client ID. id number indicating which client. ['C00004400', 'C00003954', 'C00011943', 'C00008726', 'C00002762']
172	retail_complains||reviews||Date: . ['2013-02-04']
173	retail_complains||reviews||Stars: . [5, 1, 2]
174	retail_complains||reviews||Reviews: 
175	retail_complains||reviews||Product: . ['Eagle National Mortgage', 'Eagle National Bank', 'Eagle Capital']
176	retail_complains||reviews||district_id: district id. 
177	movies_4||country||country_id: country id. the unique identifier of the country
178	movies_4||country||country_iso_code: country iso code. the ISO code. ['ZA', 'US', 'UA', 'TW', 'TR']. commonsense evidence: ISO codes are typically used to identify countries and their subdivisions, and there are different types of ISO codes depending on the specific application. Here we use ISO 3166 code to identify countries.
179	movies_4||country||country_name: country name. the name of the country. ['United States of America', 'United Kingdom', 'United Arab Emirates', 'Ukraine', 'Turkey']
180	movies_4||department||department_id: department id. the unique identifier of the department
181	movies_4||department||department_name: department name. the name of the department. ['Writing', 'Visual Effects', 'Sound', 'Production', 'Lighting']
182	movies_4||gender||gender_id: gender id. the unique identifier of the gender. [0, 1, 2]
183	movies_4||gender||gender: the gender. ['Unspecified', 'Male', 'Female']. commonsense evidence: female/ male/ unspecified
184	movies_4||genre||genre_id: genre id. the unique identifier of the genre
185	movies_4||genre||genre_name: genre name. the genre. ['Western', 'War', 'Thriller', 'TV Movie', 'Science Fiction']
186	movies_4||keyword||keyword_id: keyword id. the unique identifier of the keyword
187	movies_4||keyword||keyword_name: keyword name. the keyword. ['zurich', 'zookeeper', 'zoo', 'zombification', 'zombie apocalypse']
188	movies_4||language||language_id: language id. the unique identifier of the language
189	movies_4||language||language_code: language code. the code of the language. ['zu', 'zh', 'yi', 'xx', 'xh']. commonsense evidence: Here we use ISO 639 codes to identify the language.
190	movies_4||language||language_name: language name. the language name
191	movies_4||language_role||role_id: role id. the unique identifier of the language id. [1, 2]
192	"movies_4||language_role||language_role: language role. the language role. ['Spoken', 'Original']. commonsense evidence: In the context of language roles in a movie or other audio-visual production, ""original"" and ""spoken"" refer to the languages in which the movie was originally produced, and the languages spoken by the characters in the movie, respectively."
193	movies_4||movie||movie_id: movie id. the unique identifier of the movie
194	movies_4||movie||title: the title of the movie
195	movies_4||movie||budget: the budget for the movie. commonsense evidence: If a movie has higher popularity, it means that it is well-liked by a large number of people. This can be determined by looking at the movie's ratings and reviews, as well as the box office performance and overall buzz surrounding the film. Higher popularity often translates to more success for the movie, both financially and critically.
196	movies_4||movie||homepage: the homepage of the movie
197	movies_4||movie||overview: the overview of the movie
198	movies_4||movie||popularity: the popularity of the movie. commonsense evidence: If a movie has higher popularity, it means that it is well-liked by a large number of people. This can be determined by looking at the movie's ratings and reviews, as well as the box office performance and overall buzz surrounding the film. Higher popularity often translates to more success for the movie, both financially and critically.
199	movies_4||movie||release_date: release date. the release date of the movie. ['2006-01-01']
200	movies_4||movie||revenue: the revenue of the movie. commonsense evidence: A higher vote average indicates that a greater proportion of people who have seen the movie have given it positive ratings.
201	movies_4||movie||runtime: the runtime of the movie
202	movies_4||movie||movie_status: movie status. the status of the movie The only value of this column is 'Released'.. ['Released', 'Rumored', 'Post Production']
203	movies_4||movie||tagline: the tagline of the movie
204	movies_4||movie||vote_average: vote average. the average vote for the movie. commonsense evidence: A higher vote average indicates that a greater proportion of people who have seen the movie have given it positive ratings.
205	movies_4||movie||vote_count: vote count. the vote count for the movie. commonsense evidence: If a movie has a higher vote average and vote count, it means that it has been well-received by audiences and critics. A higher vote count means that more people have rated the movie, which can indicate a greater level of interest in the film.
206	movies_4||movie_genres||movie_id: movie id. the id of the movie  Maps to movie(movie_id)
207	movies_4||movie_genres||genre_id: genre id. the id of the movie genre Maps to genre(genre_id)
208	movies_4||movie_languages||movie_id: movie id. the id of the movie  Maps to movie(movie_id)
209	movies_4||movie_languages||language_id: language id. the id of the movie language Maps to language(language_id)
210	movies_4||movie_languages||language_role_id: language role id. the id of the role's language. [2, 1]
211	movies_4||person||person_id: person id. the unique identifier of the person
212	movies_4||person||person_name: person name. the name of the person
213	movies_4||movie_crew||movie_id: movie id. the id of the movie that the crew worked for Maps to movie(movie_id)
214	movies_4||movie_crew||person_id: person id. the id of the crew Maps to person(person_id)
215	movies_4||movie_crew||department_id: department id. the id of the crew's department Maps to department(department_id)
216	movies_4||movie_crew||job: the job of the crew. commonsense evidence: A movie may involve several crews with the same job title.
217	movies_4||production_company||company_id: company id. the unique identifier of the company
218	movies_4||production_company||company_name: company name. the name of the company
219	movies_4||production_country||movie_id: mivie id. the unique identifier of the movie
220	movies_4||production_country||country_id: country id. the id of the country
221	movies_4||movie_cast||movie_id: movie id. the id of the movie Maps to movie(movie_id)
222	movies_4||movie_cast||person_id: person id. the id of the person Maps to person(person_id)
223	movies_4||movie_cast||character_name: character name. the character name
224	movies_4||movie_cast||gender_id: gender id. the id of the cast's gender Maps to gender(gender_id). [2, 0, 1]
225	movies_4||movie_cast||cast_order: cast order. the cast order of the cast. commonsense evidence: The cast order of a movie or television show refers to the sequence in which the actors and actresses are listed in the credits. This order is typically determined by the relative importance of each actor's role in the production, with the main actors and actresses appearing first, followed by the supporting cast and extras.
226	movies_4||movie_keywords||movie_id: movie id. the id of the movie  Maps to movie(movie_id)
227	movies_4||movie_keywords||keyword_id: keyword id. the id of the movie keyword Maps to keyword(keyword_id). commonsense evidence: A movie may have many keywords. Audience could get the genre of the movie according to the movie keywords.
228	movies_4||movie_company||movie_id: movie id. the id of the movie  Maps to movie(movie_id)
229	movies_4||movie_company||company_id: company id. the id of the company that produced the movie Maps to production_company(company_id). commonsense evidence: If movies with different movie_id have the same company_id, it means these movies were made by the same company.
230	codebase_comments||Method||Id: unique id number  that identifies methods
231	"codebase_comments||Method||Name: name of methods. the second part is the task of this method  delimited by ""."""
232	codebase_comments||Method||FullComment: Full Comment. full comment of this method
233	codebase_comments||Method||Summary: summary of the method
234	codebase_comments||Method||ApiCalls: Api Calls. linearized sequenced of API calls
235	codebase_comments||Method||CommentIsXml: CommentIs Xml. whether the comment is XML format or not. [1, 0]. commonsense evidence:    0: the comment for this method is not XML format.  1: the comment for this method is XML format.
236	codebase_comments||Method||SampledAt: Sampled At. the time of sampling
237	codebase_comments||Method||SolutionId: Solution Id. id number of solutions
238	codebase_comments||Method||Lang: Language. language code of method. [None, 'en', 'zh-cn', 'ko', 'it', 'ca']
239	codebase_comments||Method||NameTokenized: Name Tokenized. tokenized name
240	codebase_comments||MethodParameter||Id: unique id number identifying method parameters
241	codebase_comments||MethodParameter||MethodId: Method Id. . ['2252607', '503367', '4956764', '3204674', '4960086']
242	codebase_comments||MethodParameter||Type: type of the method
243	"codebase_comments||MethodParameter||Name: name of the method. commonsense evidence:  if the name is not a word like ""H"", ""z"", it means this method is not well-discriminative."
244	codebase_comments||Repo||Id: unique id to identify repositories
245	codebase_comments||Repo||Url: github address of repository
246	codebase_comments||Repo||Stars: stars this repository has received
247	codebase_comments||Repo||Forks: forks that the repository has received
248	codebase_comments||Repo||Watchers: how many watchers of this repository
249	codebase_comments||Repo||ProcessedTime: Processed Time. how much processed time of downloading this repository
250	codebase_comments||Solution||Id: unique id to identify this solution
251	codebase_comments||Solution||RepoId: Repository Id. id of repository
252	codebase_comments||Solution||Path: path of this solution
253	codebase_comments||Solution||ProcessedTime: Processed Time. processed time
254	codebase_comments||Solution||WasCompiled: Was Compiled. whether this solution needs to be compiled or not. [0, 1]. commonsense evidence: 0: this solution needs to be compiled if user wants to implement it. 1: this solution can be implemented without needs of compilation
255	trains||cars||id: the unique id number representing the cars
256	trains||cars||train_id: train id. the counterpart id for trains that the cars belong to
257	trains||cars||position: postion id of cars in the trains. [2, 1, 3, 4]. 1-4: commonsense evidence: 1: head car 4: tail car
258	trains||cars||shape: shape of the cars. ['rectangle', 'u_shaped', 'bucket', 'hexagon', 'ellipse']. â¢ rectangle â¢ bucket â¢ u_shaped â¢ hexagon â¢ elipse commonsense evidence: regular shape:  rectangle, u_shaped, hexagon
259	trains||cars||len: length. length of the cars. ['short', 'long']. â¢ short  â¢ long
260	trains||cars||sides: sides of the cars. ['not_double', 'double']. â¢ not_double â¢ double
261	trains||cars||roof: roof of the cars. ['none', 'flat', 'jagged', 'peaked', 'arc']. commonsense evidence: â¢ none: the roof is open â¢ peaked â¢ flat â¢ arc â¢ jagged
262	trains||cars||wheels: wheels of the cars. [2, 3]. â¢ 2: â¢ 3:
263	trains||cars||load_shape: load shape. ['rectangle', 'triangle', 'circle', 'hexagon', 'diamond']. â¢ circle â¢ hexagon â¢ triangle â¢ rectangle  â¢ diamond
264	trains||cars||load_num: load number. [1, 3, 0, 2]. 0-3: commonsense evidence: â¢ 0: empty load â¢ 3: full load
265	trains||trains||id: the unique id representing the trains
266	trains||trains||direction: the direction of trains that are running. ['west', 'east']. â¢ east; â¢ west;
267	movie||actor||ActorID: actor id. the unique id for the actor
268	movie||actor||Name: actor's name. [None, 'Skeet Ulrich', 'Charlize Theron', 'Zooey Deschanel', 'Zoey Vargas', 'Zoe Saldana']
269	movie||actor||Date of Birth: date of birth. actor's birth date. [None, '1963-0-0', '1970-0-0', '1966-06-30', '1965-10-08', '1965-0-0']
270	movie||actor||Birth City: birth city. actor's birth city. [None, 'New York City', 'Los Angeles', 'Chicago', 'London', 'Brooklyn']
271	movie||actor||Birth Country: birth country. actor's birth country. [None, 'USA', 'UK', 'Canada', 'Australia', 'Ireland']
272	movie||actor||Height (Inches): height inches. actor's height. the unit is inch
273	movie||actor||Biography: actor's biography
274	movie||actor||Gender: actor's gender. [None, 'Male', 'Female']
275	movie||actor||Ethnicity: actor's ethnicity. [None, 'White', 'African American', 'Native American', 'Latino', 'South African']
276	movie||actor||NetWorth: actor's networth. [None, '$10,000,000.00', '$5,000,000.00', '$3,000,000.00', '$4,000,000.00', '$8,000,000.00']. commonsense evidence: The actor with more networth is richer.
277	movie||movie||MovieID: movie id. the unique id for the movie
278	movie||movie||Title: the title of the movie
279	movie||movie||MPAA Rating: motion picture association of america rating. MPAA rating of the movie. ['PG-13', 'PG', 'R', 'G']. commonsense evidence: MPAA rating is the movie rating for parents to use as a guide to determine the appropriateness of a film's content for children and teenagers.   rated G: General audiences  All ages admitted  rated PG: Parental guidance suggested  Some material may not be suitable for pre-teenagers  rated R: Restricted  Under 17 requires accompanying parent or adult guardian  rated X: No one under 17 admitted
280	movie||movie||Budget: the budget of the movie. the unit is dollar
281	movie||movie||Gross: the gross of the movie
282	movie||movie||Release Date: release date. ['2018-05-10']. yyyy-mm-dd
283	movie||movie||Genre: the genre of the movie. ['Action', 'Comedy', 'Animation', 'Drama', 'Thriller']
284	movie||movie||Runtime: the runtime of the movie
285	movie||movie||Rating: the rating of the movie. 0.0 - 10.0 commonsense evidence: Higher ratings mean higher quality and better response.
286	movie||movie||Rating Count: rating count. the number of the ratings
287	movie||movie||Summary: the summary of the movie
288	movie||characters||MovieID: movie id. the unique id for the movie
289	movie||characters||ActorID: actor id. the unique id for the actor
290	movie||characters||Character Name: character name. the name of the character. ['Phil', 'Harry Potter', 'Sam', 'Mike', 'M']
291	movie||characters||creditOrder: credit order. order of the character in the credit list. [5, 4, 3, 2, 7]
292	movie||characters||pay: the salary of the character. [None, '$75,000,000.00', '$70,000,000.00', '$68,000,000.00', '$65,000,000.00', '$60,000,000.00']
293	movie||characters||screentime: the screentime of the character. [None, '0:32:30', '0:32:15', '0:29:00', '0:08:45', '0:04:30']. commonsense evidence: Screentime is directly proportional to the importance of the characters.
294	social_media||location||LocationID: location id. unique id of the location
295	social_media||location||Country: the country. [None, 'United States', 'United Kingdom', 'France', 'Germany', 'Spain']
296	social_media||location||State: the state. [None, 'California', 'Texas', 'Florida', 'New York', 'Pennsylvania']
297	social_media||location||StateCode: state code. [None, 'US-CA', 'FR', 'DE', 'ES', 'BR']
298	social_media||location||City: the city. [None, 'Springfield', 'London', 'Kingston', 'Brentwood', 'Windsor']
299	social_media||user||UserID: user id. the unique id of the user. ['\x1anknow531394', 'tw-10000632', 'tw-100012605', 'tw-1000137907', 'tw-1000155049']
300	social_media||user||Gender: user's gender. ['Male', 'Unknown', 'Female', 'Unisex']. Male / Female / Unknown
301	social_media||twitter||TweetID: tweet id. the unique id of the tweet. [None, 'tw-682712873332805633', 'tw-682713045357998080', 'tw-682713219375476736', 'tw-682713436967579648', 'tw-682714048199311366']
302	social_media||twitter||Weekday: the weekday that the tweet has been posted. [None, 'Tuesday', 'Thursday', 'Wednesday', 'Monday', 'Friday']
303	social_media||twitter||Hour: the hour that the tweet has been posted
304	social_media||twitter||Day: the day that the tweet has been posted
305	social_media||twitter||Lang: language. the language of the tweet. [None, 'en', 'es', 'fr', 'tr', '_u']
306	"social_media||twitter||IsReshare: is reshare. whether the tweet is reshared. [None, 'FALSE', 'TRUE']. commonsense evidence:  A reshared tweet is when someone reshares or forwards a post to their own Twitter   	true: the tweet is reshared  	false: the tweet isn't reshared"
307	social_media||twitter||Reach: the reach of the tweet. commonsense evidence:  reach counts the number of unique users who have seen your tweet
308	social_media||twitter||RetweetCount: retweet count. the retweet count
309	social_media||twitter||Likes: the number of likes
310	social_media||twitter||Klout: the klout of the tweet
311	"social_media||twitter||Sentiment: the sentiment of the tweet. commonsense evidence:  	>0: the sentiment of the tweet is positive.   	=0: the sentiment of the tweet is neutral.  	<0: the sentiment of the tweet is negative."
312	social_media||twitter||text: the text of the tweet
313	social_media||twitter||LocationID: location id. the location id of the poster
314	social_media||twitter||UserID: user id. the user id of the poster. [None, 'tw-66780587', 'tw-4719527682', 'tw-105163529', 'tw-586887461', 'tw-3316009302']
315	cs_semester||course||course_id: course id. unique id representing the course
316	cs_semester||course||name: name of the course. ['Statistical learning', 'Natural Language Processing', 'Machine Learning Theory', 'Intro to Database 2', 'Intro to Database 1']
317	cs_semester||course||credit: credit of the course. [3, 2]. commonsense evidence:  higher means more important
318	cs_semester||course||diff: difficulty. difficulty of the course. [4, 3, 1, 5, 2]. commonsense evidence:  higher --> more difficult  smaller --> less difficult
319	cs_semester||prof||prof_id: professor id. unique id for professors. [1, 2, 3, 4, 5]
320	cs_semester||prof||gender: gender of the professor. ['Male', 'Female']
321	cs_semester||prof||first_name: first name. the first name of the professor. ['Zhihua', 'Sauveur', 'Rosamond', 'Ogdon', 'Nathaniel']
322	cs_semester||prof||last_name: last name. the last name of the professor. ['Zywicki', 'Zhou', 'Smythin', 'Skyme', 'Pigford']. commonsense evidence:  full name: first name, last name
323	cs_semester||prof||email: email of the professor
324	cs_semester||prof||popularity: popularity of the professor. [3, 2]. commonsense evidence:  higher --> more popular
325	cs_semester||prof||teachingability: teaching ability. the teaching ability of the professor. [5, 1, 4, 3, 2]. commonsense evidence:  higher --> more teaching ability, his / her lectures may have better quality
326	cs_semester||prof||graduate_from: graduate from. the school where the professor graduated from. ['University of Washington', 'University of Pennsylvania', 'University of Boston', 'Princeton University', 'Mount Aloysius College']
327	cs_semester||RA||student_id: student id. the id numbe representing each student
328	cs_semester||RA||capability: the capability of student on research (Evaluated by the professor). [3, 5, 4, 2]. higher --> higher research ability / capability
329	cs_semester||RA||prof_id: professor id. professor who advises this student. this value may be repetitive since one professor may advise many students in this semester commonsense evidence: if a professor advise > 2 students in this semester, it means this professor's research work is heavy or: this professor's popularity on research is higher
330	cs_semester||RA||salary: the salary of this student.. ['high', 'med', 'low', 'free']. med: average salary high: higher salary than others low: lower salary free: unpaid RA
331	cs_semester||registration||course_id: course id. the id of courses
332	cs_semester||registration||student_id: student id. the id of students
333	cs_semester||registration||grade: the grades that the students acquire in this course. [None, 'A', 'B', 'C', 'D']. commonsense evidence:  A: excellent -- 4  B: good -- 3  C: fair -- 2  D: poorly pass -- 1  null or empty: this student fails to pass this course  gpa of students for this semester = sum (credits x grade) / sum (credits)
334	cs_semester||registration||sat: satisfying degree. student satisfaction with the course. [5, 4, 2, 3, 1]
335	cs_semester||student||student_id: student id. the unique id to identify students
336	cs_semester||student||f_name: first name. the first name of the student. ['Willie', 'Silvano', 'Robenia', 'Rik', 'Phil']
337	cs_semester||student||l_name: last name. the last name of the student. ['Mallinar', 'Wolton', 'Wellings', 'Waltho', 'Unsworth']. commonsense evidence: full name: f_name, l_name
338	cs_semester||student||phone_number: phone number. ['(996) 8465427', '(918) 8721602', '(909) 5089490', '(893) 5102637', '(891) 6340598']
339	cs_semester||student||email: 
340	cs_semester||student||intelligence: intelligence of the student. [5, 2, 3, 1, 4]. higher --> more intelligent
341	cs_semester||student||gpa: graduate point average
342	cs_semester||student||type: type of the student. ['TPG', 'UG', 'RPG'].  TPG: taught postgraduate student(master)  RPG: research postgraduate student (master)  UG: undergraduate student(bachelor) commonsense evidence: both TPG and RPG are students pursuing a masters degree; UG are students pursuing the bachelor degree
343	computer_student||course||course_id: course id. unique id number identifying courses
344	computer_student||course||courseLevel: course level. ['Level_500', 'Level_400', 'Level_300']. commonsense evidence:  Level_300: basic or medium undergraduate courses.  Level_400: high-level or harder undergraduate course.  Level_500: professional or master/graduate courses
345	computer_student||person||p_id: person ID. the unique number identifying each person
346	computer_student||person||professor: whether the person is a professor. [0, 1]. 0: professor 1: student
347	computer_student||person||student: whether the person is a student. [1, 0]. 0: professor 1: student
348	computer_student||person||hasPosition: has position. whether the person has a position in the faculty. ['0', 'Faculty', 'Faculty_adj', 'Faculty_eme', 'Faculty_aff']. 0: the person is not a faculty member Common Sense evidence: faculty_aff: affiliated faculty faculty_eme: faculty employee
349	computer_student||person||inPhase: in phase. the phase of qualification the person is undergoing. ['0', 'Post_Generals', 'Post_Quals', 'Pre_Quals']. 0: the person is not undergoing the phase of qualification
350	computer_student||person||yearsInProgram: years in program. the year of the program the person is at. ['0', 'Year_5', 'Year_4', 'Year_3', 'Year_1']. 0: the person is not in any programs Common Sense evidence: yearX means the person is on the Xth year of the program
351	computer_student||advisedBy||p_id: person id. id number identifying each person
352	computer_student||advisedBy||p_id_dummy: person id dummy. the id number identifying the advisor
353	computer_student||taughtBy||course_id: course ID. the identification number identifying each course
354	computer_student||taughtBy||p_id: person ID. the identification number identifying each person
355	talkingdata||app_all||app_id: app id. 
356	talkingdata||app_events||event_id: event id. the id of events
357	talkingdata||app_events||app_id: app id. the id of app users. each app_id represents for an user
358	talkingdata||app_events||is_installed: is installed. whether this app is installed or not. [1].  0: no  1: yes: installed
359	talkingdata||app_events||is_active: is active. whether this user is active or not. [0, 1]
360	talkingdata||app_events_relevant||event_id: event id. 
361	talkingdata||app_events_relevant||app_id: app id. 
362	talkingdata||app_events_relevant||is_installed: is installed. . [1]
363	talkingdata||app_events_relevant||is_active: is active. . [0, 1]
364	talkingdata||app_labels||app_id: app id. id of the app user
365	talkingdata||app_labels||label_id: label id. id of labels represents which behavior category that each user belongs to
366	talkingdata||events||event_id: event id. unique id number referring to the event
367	talkingdata||events||device_id: device id. id number referring the device
368	talkingdata||events||timestamp: the time of the event. ['2016-05-03 10:00:03.0']
369	talkingdata||events||longitude: commonsense evidence: the location / coordinate = (longitude, latitude)
370	talkingdata||events||latitude: 
371	talkingdata||events_relevant||event_id: event id. 
372	talkingdata||events_relevant||device_id: device id. 
373	talkingdata||events_relevant||timestamp: . [-8504475857937456387, -8678568584846099664, -5472633337921616096, -6793861127573349654, -8942695423876075857]
374	talkingdata||events_relevant||longitude: . [1.0]
375	talkingdata||events_relevant||latitude: . [1.0, 0.0]
376	talkingdata||gender_age||device_id: device id. unique number of devices
377	talkingdata||gender_age||gender: gender of the user who uses this device. [None, 'M', 'F']
378	talkingdata||gender_age||age: age of the user who uses this device.  M: male;  F: female
379	talkingdata||gender_age||group: group of the ages. [None, 'M23-26', 'M32-38', 'M39+', 'M22-', 'M29-31']
380	talkingdata||gender_age_test||device_id: device id. 
381	talkingdata||gender_age_train||device_id: device id. 
382	talkingdata||gender_age_train||gender: . ['M', 'F']
383	talkingdata||gender_age_train||age: 
384	talkingdata||gender_age_train||group: . ['M23-26', 'M32-38', 'M39+', 'M22-', 'M29-31']
385	talkingdata||label_categories||label_id: label id. unique id of label
386	talkingdata||label_categories||category: category of the label
387	talkingdata||phone_brand_device_model2||device_id: device id. the id number of the device
388	talkingdata||phone_brand_device_model2||phone_brand: phone brand. ['小米', '三星', '华为', 'vivo', 'OPPO']. commonsense evidence: phone_brand has duplicated values since some device models belong to the same brand
389	talkingdata||phone_brand_device_model2||device_model: device model. ['红米note', 'MI 3', 'MI 2S', 'Galaxy Note 3', 'MI 4']. commonsense evidence: phone_brand has duplicated values since some device models belong to the same brand
390	talkingdata||sample_submission||device_id: device id. 
391	talkingdata||sample_submission||F23-: . [0.0833]
392	talkingdata||sample_submission||F24-26: . [0.0833]
393	talkingdata||sample_submission||F27-28: . [0.0833]
394	talkingdata||sample_submission||F29-32: . [0.0833]
395	talkingdata||sample_submission||F33-42: . [0.0833]
396	talkingdata||sample_submission||F43+: . [0.0833]
397	talkingdata||sample_submission||M22-: . [0.0833]
398	talkingdata||sample_submission||M23-26: . [0.0833]
399	talkingdata||sample_submission||M27-28: . [0.0833]
400	talkingdata||sample_submission||M29-31: . [0.0833]
401	talkingdata||sample_submission||M32-38: . [0.0833]
402	talkingdata||sample_submission||M39+: . [0.0833]
403	law_episode||Episode||episode_id: episode id. the unique identifier of the episode. ['tt0629146', 'tt0629149', 'tt0629153', 'tt0629170', 'tt0629204']
404	law_episode||Episode||series: the name of the series. ['Law and Order']
405	law_episode||Episode||season: a number indicating the season of the episode. [9]
406	law_episode||Episode||episode: the sequential number of the episode within a specific season
407	law_episode||Episode||number_in_series: number in series. the overall sequence number of episode in the entire series
408	law_episode||Episode||title: the title of the episode. ['Venom', 'True North', 'Tabula Rasa', 'Sideshow', 'Shield']
409	law_episode||Episode||summary: a brief description of what happens in the episode
410	law_episode||Episode||air_date: air date. the date the episode was initially broadcast in the United States. ['1999-05-26']
411	law_episode||Episode||episode_image: episode image. a link to an image from the episode
412	law_episode||Episode||rating: the weighted average of the votes received for the episode. commonsense evidence: The higher rating means the episode has more positive viewer comments.
413	law_episode||Episode||votes: the total number of rating votes for the episode
414	law_episode||Keyword||episode_id: episode id. the id of the episode. ['tt0629397', 'tt0629420', 'tt0629239']
415	law_episode||Keyword||keyword: the keyword that is relevant for the episode. ['witnessing', 'witness to murder', 'witness to a crime', 'witness tampering', 'witness protection']
416	law_episode||Person||person_id: person id. the unique identifier for the person. ['nm0000210', 'nm0000973', 'nm0001346', 'nm0001583', 'nm0001832']
417	law_episode||Person||name: the name of the person. ['Zoe Saldana', 'Zhana Londoner', 'Zeljko Ivanek', 'Yolande Bavan', 'William Youmans']
418	law_episode||Person||birthdate: birth date. the date the person was born. [None, '1968-08-25']. if null, it means this birthdate of the person is not available
419	law_episode||Person||birth_name: birth name. the name parents gave to the person shortly after birth. [None, 'Zoë Yadira Saldaña Nazario', 'Zeljko Simic-Ivanek', 'William Russell Bogert III', 'William M. Nicholson', 'William Hendrickson Moor III']
420	law_episode||Person||birth_place: birth place. the place where a person was born.. [None, 'New York City', 'Brooklyn', 'Philadelphia', 'Chicago', 'Washington']. commonsense evidence: the birth place info is integrate if birth_name, birth_place, birth_region don't contain null value the full birth place = birth_country +birth_region +birth_place
421	law_episode||Person||birth_region: birth region. the geographical area describing where a person was born that is larger than the birth place. [None, 'New York', 'Pennsylvania', 'New Jersey', 'Massachusetts', 'California']
422	law_episode||Person||birth_country: birth country. the name of the country where the person was born. [None, 'USA', 'Canada', 'England', 'USSR', 'Turkey']. commonsense evidence: can ask questions about its corresponding continent: e.g.:  USA --> North America
423	law_episode||Person||height_meters: height meters. how tall the person is in meters
424	law_episode||Person||nickname: the nickname the person goes by. [None, 'Valcin', 'Tucci', 'Tom Conway', 'The History Channel Guy', 'The Belz']
425	law_episode||Award||award_id: award id. the unique identifier for the award nomination
426	law_episode||Award||organization: the name of the organization that grants the award
427	law_episode||Award||year: the year of the nomination for  the award. [1999, 2000]
428	law_episode||Award||award_category: award category. the class of the award. ['Primetime Emmy', 'Silver Gavel Award', 'Monitor', 'Edgar']
429	law_episode||Award||award: the specific award
430	law_episode||Award||series: the name of the Law & Order series that has been nominated. ['Law and Order']
431	law_episode||Award||episode_id: episode id. the id of the episode that has been nominated. ['tt0629248', 'tt0629149', 'tt0629291', 'tt0629228', 'tt0629422']
432	law_episode||Award||person_id: person id. the id of the person that has been nominated. ['nm0049569', 'nm0538744', 'nm0792309', 'nm0937725', 'nm0902683']
433	law_episode||Award||role: the role that has been nominated. [None, 'writer', 'teleplay', 're-recording mixer', 'director', 'teleplay, story']
434	law_episode||Award||result: the nomination result. ['Winner', 'Nominee']. Nominee / Winner commonsense evidence: 'Winner' means that the award was actually received.
435	law_episode||Credit||episode_id: episode id. the id of the episode to which the credit information pertains. ['tt0629228', 'tt0629422', 'tt0629170', 'tt0629306', 'tt0629394']
436	law_episode||Credit||person_id: person id. the id of the person to which the credit information pertains. ['nm6214567', 'nm4103116', 'nm3102834', 'nm2190130', 'nm1568876']
437	law_episode||Credit||category: the kind of credit being recognized. ['Cast', 'Produced by', 'Additional Crew', 'General', 'Art Department']
438	law_episode||Credit||role: the role for which the person is being recognized. ['set dresser', 'executive producer', 'production accountant', 'co-producer', 'producer']. If the credit is for an actor, this is the name of the character he or she portrayed (Dan Florek plays Donald Craven). Otherwise, this is the production role (producer, sound editor).
439	"law_episode||Credit||credited: whether the credit was displayed in the credits at the end of the episode. ['true', 'false']. commonsense evidence: A person may fill a role in an episode, but not show up in the on-screen credits. In this case, the work is said to be ""uncredited."""
440	law_episode||Vote||episode_id: episode id. the id of the episode. ['tt0629487', 'tt0629477', 'tt0629448', 'tt0629422', 'tt0629420']
441	law_episode||Vote||stars: a number between 1 and 10 indicating how much the viewer enjoyed the episode. [10, 9, 8, 7, 6]. commonsense evidence: The higher the number, the more the episode was enjoyed
442	"law_episode||Vote||votes: The total number of viewers that gave the specific episode the number of stars indicated in the ""stars"" column"
443	"law_episode||Vote||percent: The percent of viewers that gave the specific episode the number of stars indicated in the ""stars"" column"
444	synthea||all_prevalences||ITEM: the prevalent disease
445	synthea||all_prevalences||POPULATION TYPE: population type. the population type - LIVING. ['LIVING']
446	synthea||all_prevalences||OCCURRENCES: the number of occurrences
447	synthea||all_prevalences||POPULATION COUNT: population count. the number of the counted populations. [1000]
448	synthea||all_prevalences||PREVALENCE RATE: prevalence rate. the prevalence rate. commonsense evidence: prevalence rate = occurrences / population_count
449	synthea||all_prevalences||PREVALENCE PERCENTAGE: prevalence percentage. the prevalence percentage. commonsense evidence: prevalence rate = occurrences / population_count * 100
450	synthea||patients||patient: the unique id for the patient. ['00269bb7-e3ab-43a9-9cdf-cdf9b6e3b2b3', '00341a88-1cc1-4b39-b0f9-05b0531991a0', '004a5922-7c4d-40cc-a0f8-68f607044c99', '00630ce3-e8eb-4ed4-889b-2c0ac257cbf4', '007cbcc1-7333-4c79-b5e9-ffa93822fa11']
451	synthea||patients||birthdate: birth date. the birth date of the patient. ['2011-03-14']
452	synthea||patients||deathdate: death date. the death date of the patient. [None, '2006-02-12']. commonsense evidence:   the age of the patient = death year - birth year   if null, it means this patient is still alive
453	synthea||patients||ssn: social security number. the social security number of the patient. ['999-92-1074', '999-82-1438', '999-99-9565', '999-99-9076', '999-99-8497']
454	synthea||patients||drivers: the driver number of the patient. [None, 'S99995948', 'S99953881', 'S99952696', 'S99947861', 'S99942960']. commonsense evidence: if not, this patient doesn't have driving license
455	synthea||patients||passport: the passport number. [None, 'FALSE', 'X99970706X', 'X99706740X', 'X99662583X', 'X99617624X']. commonsense evidence: if not, this patient cannot go abroad, vice versa
456	synthea||patients||prefix: the prefix. [None, 'Mr.', 'Mrs.', 'Ms.']
457	synthea||patients||first: the first name. ['Sonny', 'Luther', 'Julian', 'Dexter', 'Dean']
458	synthea||patients||last: the last name. ['Tromp', 'Ondricka', 'Simonis', 'Schroeder', 'Nicolas']. commonsense evidence: full name = first + last
459	synthea||patients||suffix: the suffix of the patient. [None, 'PhD', 'MD', 'JD']. commonsense evidence: if suffix = PhD, JD, MD, it means this patient has doctoral degree. Otherwise, this patient is not.
460	synthea||patients||maiden: the maiden name of the patient. [None, 'Douglas', 'Brekke', 'Schowalter', 'Schmeler', 'Runte']. commonsense evidence: Only married women have the maiden name
461	synthea||patients||marital: the marital status of the patient. [None, 'M', 'S']. commonsense evidence:   M: married   S: single
462	synthea||patients||race: the race of the patient. ['white', 'hispanic', 'black', 'asian']
463	synthea||patients||ethnicity: the ethnicity of the patient. ['irish', 'italian', 'english', 'puerto_rican', 'german']
464	synthea||patients||gender: the gender of the patient. ['M', 'F']
465	synthea||patients||birthplace: birth place. the birth place. ['Boston MA US', 'Springfield MA US', 'Brockton MA US', 'Worcester MA US', 'Lowell MA US']
466	synthea||patients||address: the specific address
467	synthea||encounters||ID: the unique id of the encounter. ['000c20ea-5c3d-43a3-9608-bd37c22f13c8', '0013c51f-c315-4112-ad5e-466b604a05ed', '001bd1c7-96fe-4410-af52-5afe5f869087', '0026aae8-4ab9-459d-87eb-6514a90c795f', '0026e99a-ca36-4303-8328-ae8a2c0b6302']
468	synthea||encounters||DATE: the date of the encounter. ['2010-03-20']. yyyy-mm-dd
469	synthea||encounters||PATIENT: the patient id. ['f4a8bb95-c09a-498b-8915-beb35ac15290', 'e05b7410-ca77-4589-966b-7b8b47aedcca', '4bb1c058-5218-42e0-b53e-07c1f5899ad1', '98425d79-f1fd-4777-9733-fffb6e412b58', '23373822-718a-428f-aa11-e65d10947576']
470	synthea||encounters||CODE: the code of the care plan
471	synthea||encounters||DESCRIPTION: the description of the care plan
472	synthea||encounters||REASONCODE: the reason code
473	synthea||encounters||REASONDESCRIPTION: reason description. the description of the reason why the patient needs the care plan
474	synthea||allergies||START: the start date of the allergy. ['10/11/09', '7/10/06', '6/4/04', '5/8/04', '2/9/12']. mm/dd/yy
475	synthea||allergies||STOP: the stop date of the allergy. [None, '3/17/10', '12/22/14', '12/7/14', '8/31/14', '7/18/14']. mm/dd/yy  commonsense evidence: allergy period = stop - start
476	synthea||allergies||PATIENT: the patient id. ['d5878502-b66a-4bab-933a-d0eb217469bb', '7e5ec0c2-f269-48ad-b057-3338744d6290', '8da9b8ed-4b32-471a-abc3-030fa75dd0e5', '9ec3c4fc-2b10-46dc-a766-8c4fe82c2332', 'a31319a7-7502-4c1c-adfa-cb957fb71d11']
477	synthea||allergies||ENCOUNTER: the medical encounter id. ['23268c4e-d49c-4176-976d-34dd2a06db5d', 'e37cde8e-8c21-4359-9948-c6f0126cced8', 'cb7a82c2-f743-445e-81a1-f1330aa5f31a', 'c3a8c1b0-7961-4f5d-b183-3f3f36c6a5de', '1a7fb6a8-de8c-4dd9-a3f6-ab406f8613bf']
478	synthea||allergies||CODE: the code of the allergy
479	synthea||allergies||DESCRIPTION: the description of the allergy. ['Allergy to mould', 'Dander (animal) allergy', 'House dust mite allergy', 'Allergy to grass pollen', 'Allergy to tree pollen']
480	synthea||careplans||ID: the unique id of the care plan. ['ff40a4bc-fd57-4ef9-a57e-5ee7de50354a', 'fe1542a6-957a-4998-b571-b54b9dfc28d9', 'fd5a1976-40a7-4162-be69-2a33bdfb7b77', 'fd1576a3-c30a-40df-9060-8c4da3ab19b1', 'fbe18701-65fd-4ecf-a00d-ad5440768f65']
481	synthea||careplans||START: the start date of the care plan. ['2012-01-07']. yyyy-mm-dd
482	synthea||careplans||STOP: the stop date of the care plan. [None, '2012-03-10']. yyyy-mm-dd commonsense evidence: care plan period: stop - start
483	synthea||careplans||PATIENT: the patient id. ['e2e1f0ea-7d03-41d6-ac83-d1d501bf44b2', '5e8a81d8-e7f2-416b-afdd-c2f8faca1bb5', '07092071-fbf1-4e30-a37d-f379ca7e2068', 'c0cb1ff4-8fbe-4f93-990d-abf62284cb4d', 'a94327b7-a1ca-468c-8202-4fbf165f629c']
484	synthea||careplans||ENCOUNTER: the medical encounter id. ['e0aced64-1c08-4fc8-8491-197376d9ea83', '2630f9f8-ddc2-43af-a42c-ad0c3d6a2d03', 'e32aab61-de95-4c5b-98b8-265a0d2a52b7', '8a9e3e14-3479-415b-be09-cb09671dd211', '648b777a-266a-4e8a-b51c-962558c6dde0']
485	synthea||careplans||CODE: the code of the care plan
486	synthea||careplans||DESCRIPTION: the description of the care plan
487	synthea||careplans||REASONCODE: the reason code
488	synthea||careplans||REASONDESCRIPTION: reason description. the description of the reason why the patient needs the care plan
489	synthea||conditions||START: the start date of the allergy. ['2012-11-28']. mm/dd/yy
490	synthea||conditions||STOP: the stop date of the allergy. [None, '2017-06-08']. mm/dd/yy
491	synthea||conditions||PATIENT: the patient id. ['bc6fbe62-116e-424f-943c-bae29fa9f319', 'e2e1f0ea-7d03-41d6-ac83-d1d501bf44b2', 'd4841577-f9ac-4cc8-ad03-f80131552fc9', '571853a3-4710-469a-9cad-57f0e5d2f977', 'f37ed933-9ad2-45b4-969d-a782cf676a40']
492	synthea||conditions||ENCOUNTER: the medical encounter id. ['7a26cfc6-190b-477a-aa67-254bca6f6c05', 'e0aced64-1c08-4fc8-8491-197376d9ea83', '0ce70b3c-1546-409b-ba67-b3630e8e0751', '3d11f35d-7d0a-439c-87cd-3109b2586ea9', '8e518461-8eb1-4346-8c7b-f905d7f80e68']
493	synthea||conditions||CODE: the code of the condition
494	synthea||conditions||DESCRIPTION: the description of the patient condition
495	synthea||immunizations||DATE: the date of the immunization. ['2016-05-24']. yyyy-mm-dd
496	synthea||immunizations||PATIENT: the patient id. ['adf999bf-21ae-4d32-b5c2-83e7095b774e', '69c16bda-f9a1-4b8a-93f9-c4af43632d97', '4b20abe1-4248-4c59-951b-fb2eb6587a3b', '28b4e442-afe8-416c-b1a3-11a1e64bf82b', '1b74791c-4223-4c9c-81ab-c8427e07484e']
497	synthea||immunizations||ENCOUNTER: the medical encounter id. ['244309d0-2d5b-4689-8309-7125a461e8cd', '7c906abb-b4c4-4db5-86b8-98d2f7dfffb8', 'f3bc5b6b-1aa0-4c93-aa63-2786ecef4850', 'abd34f96-bd0a-49fa-b041-85b61f516543', '8eef56f1-7b74-4ab5-8ebb-116d9db335da']
498	synthea||immunizations||CODE: the code of the immunization
499	synthea||immunizations||DESCRIPTION: the description of the immunization. ['Influenza  seasonal  injectable  preservative free', 'Td (adult) preservative free', 'DTaP', 'Pneumococcal conjugate PCV 13', 'IPV']
500	synthea||medications||START: the start date of the care plan. ['2017-06-28']. yyyy-mm-dd
501	synthea||medications||STOP: the stop date of the care plan. [None, '2010-10-23']. yyyy-mm-dd commonsense evidence: Time of taking medicine
502	synthea||medications||PATIENT: the patient id. ['44c77449-072b-4559-8608-dc28f4647379', '95bb9d1a-99a3-4442-bf55-e5aa3db08122', '045e2f8e-5bbd-4776-9a84-43ba02cea3ba', '8a4c76ce-1710-4632-ac34-7eaedcba5595', '936bc523-a5bb-479c-a347-6bf2de9c9413']
503	synthea||medications||ENCOUNTER: the medical encounter id. ['88b5567d-a829-4413-8716-c4de4de3557b', '0d68388a-06e8-4c7d-a0fe-e0b37190609d', '94cb0aa0-aa5f-4136-81cd-1cd5d027fc36', 'feb9e2d1-5960-4e5b-a372-5fd23e2436ff', 'e5a3ee50-6918-452a-8bee-c8824532ce36']
504	synthea||medications||CODE: the code of the medication
505	synthea||medications||DESCRIPTION: the description of the medication
506	synthea||medications||REASONCODE: the reason code
507	synthea||medications||REASONDESCRIPTION: reason description. the description of the reason why the patient take the medication
508	synthea||observations||DATE: the date of the observation. ['2017-10-31']. yyyy-mm-dd
509	synthea||observations||PATIENT: the patient id. ['0645f237-3878-4175-aab9-b60713d24342', 'e8db300b-850e-45be-865d-77982737cb9e', 'df3b048d-2a51-4219-bb34-a8ee058137d0', '32342351-2ce8-4fd3-a721-fbcd033cd3a9', '96b24072-e1fe-49cd-a22a-6dfb92c3994c']
510	synthea||observations||ENCOUNTER: the medical encounter id. [None, '244309d0-2d5b-4689-8309-7125a461e8cd', 'abd34f96-bd0a-49fa-b041-85b61f516543', 'f567fb00-871f-4ce6-8f43-30a364dc8c4d', '1068e3ac-bf66-4be7-af8d-825c569c8b37', '0d68388a-06e8-4c7d-a0fe-e0b37190609d']
511	synthea||observations||CODE: the code of the observation type. ['8480-6', '8462-4', '8302-2', '29463-7', '39156-5']
512	synthea||observations||DESCRIPTION: the description of the observation
513	synthea||observations||VALUE: the observation value
514	synthea||observations||UNITS: the units of the observation value. [None, 'mmHg', 'mg/dL', 'mmol/L', 'kg', 'cm']. commonsense evidence: DESCRIPTION + VALUE + UNITS could be a fact: e.g.: body height of patient xxx is 166.03 cm: body height is in DESCRIPTION  166.03 is in VALUE  cm is in UNITS
515	synthea||procedures||DATE: the date of the procedure. ['2012-12-05']. yyyy-mm-dd
516	synthea||procedures||PATIENT: the patient id. ['f4a8bb95-c09a-498b-8915-beb35ac15290', 'e05b7410-ca77-4589-966b-7b8b47aedcca', '23373822-718a-428f-aa11-e65d10947576', '4bb1c058-5218-42e0-b53e-07c1f5899ad1', '98425d79-f1fd-4777-9733-fffb6e412b58']
517	synthea||procedures||ENCOUNTER: the medical encounter id. ['7c906abb-b4c4-4db5-86b8-98d2f7dfffb8', '88b5567d-a829-4413-8716-c4de4de3557b', '0d68388a-06e8-4c7d-a0fe-e0b37190609d', '12d4034c-1c4a-4bcf-8198-9f5164b0fad8', '9e148b3a-c916-4355-a9c7-157efa2ba181']
518	synthea||procedures||CODE: the code of the procedure
519	synthea||procedures||DESCRIPTION: the description of the procedure
520	synthea||procedures||REASONCODE: reason code. the code of the reason
521	synthea||procedures||REASONDESCRIPTION: reason description. the description of the reason why the patient take the procedure
522	synthea||claims||ID: the unique id of the claim. ['0004caaf-fd7a-4f64-bda6-dce5ebd1196c', '000acf3a-fcac-4cab-ac41-0153802bfd8c', '000be1d5-e5ab-442a-86ef-0b9eed00cb6a', '0013b610-05ef-45b1-9aaf-2e3f71118fe4', '001428ff-073f-4b1e-ae57-c59a179aadfd']
523	synthea||claims||PATIENT: the patient id. ['f4a8bb95-c09a-498b-8915-beb35ac15290', 'e05b7410-ca77-4589-966b-7b8b47aedcca', '4bb1c058-5218-42e0-b53e-07c1f5899ad1', '98425d79-f1fd-4777-9733-fffb6e412b58', '23373822-718a-428f-aa11-e65d10947576']
524	synthea||claims||BILLABLEPERIOD: billable period. the start date of the billable. ['2010-03-20']. yyyy-mm-dd
525	synthea||claims||ORGANIZATION: the claim organization. ['temp organization']
526	synthea||claims||ENCOUNTER: the medical encounter id. ['f4a8bb95-c09a-498b-8915-beb35ac15290', 'e05b7410-ca77-4589-966b-7b8b47aedcca', '4bb1c058-5218-42e0-b53e-07c1f5899ad1', '98425d79-f1fd-4777-9733-fffb6e412b58', '23373822-718a-428f-aa11-e65d10947576']
527	synthea||claims||DIAGNOSIS: the diagnosis
528	synthea||claims||TOTAL: the length of the billable period. [100]
529	car_retails||offices||officeCode: office code. unique ID of the office. ['1', '2', '3', '4', '5']. unique ID of the office
530	car_retails||offices||city: . ['Tokyo', 'Sydney', 'San Francisco', 'Paris', 'NYC']
531	car_retails||offices||phone: phone number. ['+81 33 224 5000', '+61 2 9264 2451', '+44 20 7877 2041', '+33 14 723 4404', '+1 650 219 4782']
532	"car_retails||offices||addressLine1: ['523 East 53rd Street', '5-11 Wentworth Avenue', ""43 Rue Jouffroy D'abbans"", '4-1 Kioicho', '25 Old Broad Street']"
533	car_retails||offices||addressLine2: [None, 'apt. 5A', 'Suite 300', 'Suite 102', 'Level 7', 'Floor #2']. commonsense evidence:  addressLine1 + addressLine2 = entire address
534	car_retails||offices||state: . [None, 'NY', 'MA', 'Chiyoda-Ku', 'CA']
535	car_retails||offices||country: ['USA', 'UK', 'Japan', 'France', 'Australia']
536	car_retails||offices||postalCode: ['NSW 2010', 'EC2N 1HN', '94080', '75017', '102-8578']
537	car_retails||offices||territory: ['NA', 'EMEA', 'Japan', 'APAC']
538	car_retails||employees||employeeNumber: Employee Number. unique string ID of the employees
539	car_retails||employees||lastName: last name. last name of employees. ['Patterson', 'Firrelli', 'Bondur', 'Vanauf', 'Tseng']
540	car_retails||employees||firstName: first name. first name of employees. ['Leslie', 'Gerard', 'Yoshimi', 'William', 'Tom']
541	car_retails||employees||extension: extension number. ['x102', 'x101', 'x9273', 'x6493', 'x5800']
542	car_retails||employees||email: 
543	car_retails||employees||officeCode: office code. office code of the employees. ['1', '4', '6', '7', '5']
544	"car_retails||employees||reportsTo: reports to. represents for organization structure such as who reports to whom. [None, 1143, 1102, 1056, 1088, 1002]. commonsense evidence:  ""reportsTO"" is the leader of the ""employeeNumber"""
545	car_retails||employees||jobTitle: job title. ['Sales Rep', 'VP Sales', 'VP Marketing', 'Sales Manager (NA)', 'Sales Manager (APAC)']
546	car_retails||customers||customerNumber: customer number. unique id number of customer
547	car_retails||customers||customerName: customer name. the name when the customer registered. ['giftsbymail.co.uk', 'West Coast Collectables Co.', 'Warburg Exchange', 'Volvo Model Replicas, Co', 'Vitachrome Inc.']
548	car_retails||customers||contactLastName: contact last name. ['Young', 'Frick', 'Brown', 'Thompson', 'Taylor']
549	car_retails||customers||contactFirstName: contact first name. ['Julie', 'Valarie', 'Sue', 'Steve', 'Mike']
550	car_retails||customers||phone: ['6175558555', '981-443655', '9145554562', '91.24.4555', '90-224 8555']
551	car_retails||customers||addressLine1: ['Åkergatan 24', 'ul. Filtrowa 68', 'c/ Gobelas, 19-1 Urb. La Florida', 'Walserweg 21', 'Vinbæltet 34']
552	car_retails||customers||addressLine2: [None, 'Suite 101', 'Suite 750', 'Suite 400', 'Suite 200', 'SEC Oy']. commonsense evidence:  addressLine1 + addressLine2 = entire address
553	car_retails||customers||city: ['NYC', 'Madrid', 'Singapore', 'Paris', 'Brickhaven']
554	car_retails||customers||state: [None, 'CA', 'MA', 'NY', 'CT', 'PA']
555	car_retails||customers||postalCode: [None, '94217', '10022', '58339', '28023', '97823']
556	car_retails||customers||country: ['USA', 'Germany', 'France', 'Spain', 'UK']
557	car_retails||customers||salesRepEmployeeNumber: sales representative employee number
558	car_retails||customers||creditLimit: credit limit
559	car_retails||orders||orderNumber: order number. unique order number. unique order number
560	car_retails||orders||orderDate: order date. ['2004-11-24']
561	car_retails||orders||requiredDate: required Date. ['2004-12-01']
562	car_retails||orders||shippedDate: shipped date. shipped Date. [None, '2004-11-07']
563	car_retails||orders||status: ['Shipped', 'In Process', 'Cancelled', 'Resolved', 'On Hold']
564	car_retails||orders||comments: 
565	car_retails||orders||customerNumber: customer number
566	car_retails||payments||customerNumber: customer number
567	car_retails||payments||checkNumber: check Number. ['PT550181', 'PQ803830', 'PO860906', 'PN238558', 'PJ434867']
568	car_retails||payments||paymentDate: payment Date. ['2004-06-21']
569	car_retails||payments||amount: 
570	car_retails||productlines||productLine: product line. unique product line name. ['Classic Cars', 'Motorcycles', 'Planes', 'Ships', 'Trains']
571	car_retails||productlines||textDescription: text description
572	car_retails||productlines||htmlDescription: html description
573	car_retails||productlines||image: 
574	car_retails||products||productCode: product code. unique product code. ['S10_1678', 'S10_1949', 'S10_2016', 'S10_4698', 'S10_4757']
575	car_retails||products||productName: product name. ['The USS Constitution Ship', 'The Titanic', 'The Schooner Bluenose', 'The Queen Mary', 'The Mayflower']
576	car_retails||products||productLine: product line. product line name. ['Classic Cars', 'Vintage Cars', 'Motorcycles', 'Planes', 'Trucks and Buses']
577	car_retails||products||productScale: product scale. ['1:18', '1:24', '1:700', '1:12', '1:32']
578	car_retails||products||productVendor: product vendor. ['Classic Metal Creations', 'Motor City Art Classics', 'Highway 66 Mini Classics', 'Gearbox Collectibles', 'Exoto Designs']
579	car_retails||products||productDescription: product description
580	car_retails||products||quantityInStock: quantity in stock
581	car_retails||products||buyPrice: buy price. buy price from vendors
582	car_retails||products||MSRP: Manufacturer Suggested Retail Price. commonsense evidence:  expected profits: msrp - buyPrice
583	car_retails||orderdetails||orderNumber: order number
584	car_retails||orderdetails||productCode: product code. ['S18_3232', 'S72_1253', 'S700_4002', 'S700_3167', 'S700_2834']
585	car_retails||orderdetails||quantityOrdered: quantity ordered
586	car_retails||orderdetails||priceEach: price for each. commonsense evidence:  total price = quantityOrdered x priceEach
587	car_retails||orderdetails||orderLineNumber: order Line Number
588	restaurant||geographic||city: the city. ['alameda', 'alamo', 'albany', 'alviso', 'american canyon']
589	restaurant||geographic||county: country. the country the city belongs to. ['unknown', 'san mateo county', 'contra costa county', 'alameda county', 'santa clara county']
590	restaurant||geographic||region: corresponding regions. ['bay area', 'unknown', 'monterey', 'napa valley', 'northern california']
591	restaurant||generalinfo||id_restaurant: id restaurant. the unique id for the restaurant
592	restaurant||generalinfo||label: the label of the restaurant. ['round table pizza', 'baskin robbins', 'pizza hut', 'little caesars pizza', 'lyons restaurant']
593	restaurant||generalinfo||food_type: food type. the food type. ['cafe', 'chinese', 'pizza', 'mexican', 'italian']
594	restaurant||generalinfo||city: the city where the restaurant is located in. ['san francisco', 'san jose', 'oakland', 'berkeley', 'fremont']
595	restaurant||generalinfo||review: the review of the restaurant. commonsense evidence: the review rating is from 0.0 to 5.0 The high review rating is positively correlated with the overall level of the restaurant. The restaurant with higher review rating is usually more popular among diners.
596	restaurant||location||id_restaurant: id restaurant. the unique id for the restaurant
597	restaurant||location||street_num: street number. the street number of the restaurant
598	restaurant||location||street_name: street name. the street name of the restaurant. [None, 'el camino real', 'san pablo ave', 'broadway', 'main st', 'e 14th st']
599	restaurant||location||city: the city where the restaurant is located in. [None, 'san francisco', 'san jose', 'oakland', 'berkeley', 'fremont']
600	soccer_2016||Batting_Style||Batting_Id: batting id. unique id for batting hand. [1, 2]
601	soccer_2016||Batting_Style||Batting_hand: batting hand. the batting hand: left or right. ['Right-hand bat', 'Left-hand bat']
602	soccer_2016||Bowling_Style||Bowling_Id: bowling id. unique id for bowling style
603	soccer_2016||Bowling_Style||Bowling_skill: bowling skill. the bowling skill. ['Slow left-arm orthodox', 'Slow left-arm chinaman', 'Right-arm offbreak', 'Right-arm medium-fast', 'Right-arm medium']
604	soccer_2016||City||City_Id: city id. unique id for city
605	soccer_2016||City||City_Name: city name. ['Visakhapatnam', 'Ranchi', 'Rajkot', 'Raipur', 'Pune']
606	soccer_2016||City||Country_id: country id. id of country. [1, 2, 3]
607	soccer_2016||Country||Country_Id: country id. unique id for country
608	soccer_2016||Country||Country_Name: country name. ['Zimbabwea', 'West Indies', 'U.A.E', 'Sri Lanka', 'South Africa']
609	soccer_2016||Extra_Type||Extra_Id: extra id. unique id for extra type. [1, 2, 3, 4, 5]
610	soccer_2016||Extra_Type||Extra_Name: extra name. extra type name. ['wides', 'penalty', 'noballs', 'legbyes', 'byes']
611	soccer_2016||Extra_Runs||Match_Id: match id. Unique Number Which Identifies a match
612	soccer_2016||Extra_Runs||Over_Id: over id. Unique Number which Identifies an over in an Innings
613	soccer_2016||Extra_Runs||Ball_Id: ball id. Unique Number which Identifies a ball in an over. [1, 3, 2, 6, 5]
614	soccer_2016||Extra_Runs||Extra_Type_Id: extra type id. Unique Number which Identifies extra type. [2, 1, 4, 3, 5]
615	soccer_2016||Extra_Runs||Extra_Runs: extra runs. Number of extra runs. [1, 2, 4, 5, 3]
616	soccer_2016||Extra_Runs||Innings_No: innings number. Unique Number which Identifies an innings in a match. [1, 2, 3, 4]
617	soccer_2016||Out_Type||Out_Id: out id. unique id for out type. [1, 2, 3, 4, 5]
618	soccer_2016||Out_Type||Out_Name: out name. out type name. ['stumped', 'run out', 'retired hurt', 'obstructing the field', 'lbw']
619	soccer_2016||Outcome||Outcome_Id: outcome id. unique id for outcome. [1, 2, 3]
620	soccer_2016||Outcome||Outcome_Type: outcome type. type of the outcome. ['Superover', 'Result', 'No Result']
621	soccer_2016||Player||Player_Id: player id. the id of the player
622	soccer_2016||Player||Player_Name: player name. the name of the player. ['Z Khan', 'Yuvraj Singh', 'Younis Khan', 'Yashpal Singh', 'YV Takawale']
623	soccer_2016||Player||DOB: date of birth. player's birthday. ['1987-04-30']. yyyy-mm-dd
624	soccer_2016||Player||Batting_hand: batting hand. the id of the batting hand. [2, 1]
625	soccer_2016||Player||Bowling_skill: bowling skill. the id of the bowling skill
626	soccer_2016||Player||Country_Name: country name. the name of the country where the player is from
627	soccer_2016||Rolee||Role_Id: role id. the unique id for the role. [1, 2, 3, 4]
628	soccer_2016||Rolee||Role_Desc: role description. the role description. ['Player', 'Keeper', 'CaptainKeeper', 'Captain']
629	soccer_2016||Season||Season_Id: season id. the unique id for season. [1, 2, 3, 4, 5]
630	soccer_2016||Season||Man_of_the_Series: man of the series. the player id of man of the series. [32, 334, 315, 305, 162]. commonsense evidence:  In team sport, a player of the series or man (or woman) of the series award is often given to the outstanding player in a particular series.
631	soccer_2016||Season||Orange_Cap: orange cap. the player id who wins the orange cap. [162, 187, 133, 100, 46]. commonsense evidence:  The Orange Cap is a coveted award for a batter who is participating in the Indian Premier League (IPL)
632	soccer_2016||Season||Purple_Cap: purple cap. the player id who wins the purple cap. [71, 364, 299, 194, 190]. commonsense evidence:  The Purple Cap is awarded to the bowler who has emerged as the leading wicket-taker in a particular edition of the high-profile Indian Premier League (IPL)
633	soccer_2016||Season||Season_Year: season year. the year of the season. [2016, 2015, 2014, 2013, 2012]
634	soccer_2016||Team||Team_Id: team id. the unique id for the team
635	soccer_2016||Team||Team_Name: team name. the team name. ['Sunrisers Hyderabad', 'Royal Challengers Bangalore', 'Rising Pune Supergiants', 'Rajasthan Royals', 'Pune Warriors']
636	soccer_2016||Toss_Decision||Toss_Id: toss id. the unique id for the toss. [1, 2]
637	soccer_2016||Toss_Decision||Toss_Name: toss name. the toss decision name. ['field', 'bat']
638	soccer_2016||Umpire||Umpire_Id: umpire id. the unique id of the umpire
639	soccer_2016||Umpire||Umpire_Name: umpire name. umpire's name. ['VK Sharma', 'VA Kulkarni', 'TH Wijewardene', 'Subroto Das', 'SS Hazare']
640	soccer_2016||Umpire||Umpire_Country: umpire country. the id of the country where the umpire are from. [1, 5, 2, 10, 4]
641	soccer_2016||Venue||Venue_Id: venue id. the unique id of the venue
642	soccer_2016||Venue||Venue_Name: venue name. the name of the venue
643	soccer_2016||Venue||City_Id: city id. the city id where the venue is located in
644	soccer_2016||Win_By||Win_Id: winning id. the unique id for the winning. [1, 2, 3, 4]
645	soccer_2016||Win_By||Win_Type: winning type. the winning type. ['wickets', 'runs', 'Tie', 'NO Result']
646	soccer_2016||Match||Match_Id: Match Id. unique id for match
647	soccer_2016||Match||Team_1: team 1. the team id of the first team
648	soccer_2016||Match||Team_2: team 2. the team id for the second team
649	soccer_2016||Match||Match_Date: match date. the date of the match. ['2016-05-22']. yyyy-mm-dd
650	soccer_2016||Match||Season_Id: season id. the id of the season. [6, 5, 4, 9, 7]
651	soccer_2016||Match||Venue_Id: venue id. the id of the venue where the match held
652	soccer_2016||Match||Toss_Winner: toss winner. the id of the toss winner. commonsense evidence:  The toss winner is a term used in cricket and is the team that wins the heads or tails toss of coin at the beginning of a match which then enables the team captain to decide whether to bat or bowl first on the pitch.
653	soccer_2016||Match||Toss_Decide: toss decide. the decision (batting or bowling) made after winning the toss. [1, 2]. â¢ field   â¢ bat
654	soccer_2016||Match||Win_Type: winning type. the id of the winning type. [2, 1, 4, 3]
655	soccer_2016||Match||Win_Margin: winning margin. the points of the winning margin. commonsense evidence:  A winning margin bet is a wager on the final result of a game, within a certain range of points.
656	soccer_2016||Match||Outcome_type: outcome type. the id of the outcome type. [1, 3, 2]
657	soccer_2016||Match||Match_Winner: match winner. the team id of the match winner
658	soccer_2016||Match||Man_of_the_Match: man of the match. the id of the man of the match. commonsense evidence:  In team sport, a player of the match or man (or woman) of the match award is often given to the outstanding player in a particular match.
659	soccer_2016||Ball_by_Ball||Match_Id: match id. Unique Number Which Identifies a match
660	soccer_2016||Ball_by_Ball||Over_Id: over id. Unique Number which Identifies an over in an Innings. commonsense evidence: The match is made up of two innings and each team takes a turn at batting and bowling. An innings is made up of 50 overs. An over involves six deliveries from the bowler.
661	soccer_2016||Ball_by_Ball||Ball_Id: ball id. Unique Number which Identifies a ball in an over. [1, 2, 3, 4, 5]
662	soccer_2016||Ball_by_Ball||Innings_No: innings number. Unique Number which Identifies an innings in a match. [1, 2, 3, 4]
663	soccer_2016||Ball_by_Ball||Team_Batting: team batting. Unique Number which Identifies Batting team in a match
664	soccer_2016||Ball_by_Ball||Team_Bowling: team bowling. Unique Number which Identifies Bowling team in a match
665	soccer_2016||Ball_by_Ball||Striker_Batting_Position: striker batting position. Unique Number which Identifies the position in which player came into bat
666	soccer_2016||Ball_by_Ball||Striker: Unique Number which Identifies the player who is on strike for that particular ball
667	soccer_2016||Ball_by_Ball||Non_Striker: non striker. Unique Number which Identifies the player who is Non-striker for that particular ball
668	soccer_2016||Ball_by_Ball||Bowler: Unique Number which Identifies the player who is Bowling that particular ball
669	soccer_2016||Batsman_Scored||Match_Id: match id. Unique Number Which Identifies a match
670	soccer_2016||Batsman_Scored||Over_Id: over id. Unique Number which Identifies an over in an Innings
671	soccer_2016||Batsman_Scored||Ball_Id: ball id. Unique Number which Identifies a ball in an over. [2, 1, 3, 4, 5]
672	soccer_2016||Batsman_Scored||Runs_Scored: runs scored. Number of Runs scored by the batsman. [0, 1, 4, 2, 6]
673	soccer_2016||Batsman_Scored||Innings_No: innings number. Unique Number which Identifies an innings in a match. [1, 2, 3, 4]
674	soccer_2016||Player_Match||Match_Id: match id. unique id for match
675	soccer_2016||Player_Match||Player_Id: player id. the id of the player
676	soccer_2016||Player_Match||Role_Id: role id. the id of the play's role in the match. [3, 2, 1, 4]. commonsense evidence: if a player has multiple roles in a match, it means this player is versatile
677	soccer_2016||Player_Match||Team_Id: team id. the id of player's team
678	soccer_2016||Wicket_Taken||Match_Id: match id. the id of the match
679	soccer_2016||Wicket_Taken||Over_Id: over id. the id of the over in an inning
680	soccer_2016||Wicket_Taken||Ball_Id: ball id. the id of the ball in an over. [4, 6, 2, 5, 3]
681	soccer_2016||Wicket_Taken||Player_Out: player out. the player id who got an out
682	soccer_2016||Wicket_Taken||Kind_Out: kind out. the id that represents the out type. [1, 2, 3, 4, 6]
683	soccer_2016||Wicket_Taken||Fielders: the id of fielders
684	soccer_2016||Wicket_Taken||Innings_No: innings number. number which identifies an innings in a match. [1, 2, 3, 4]
685	music_tracker||torrents||groupName: release title
686	music_tracker||torrents||totalSnatched: number of times the release has been downloaded
687	music_tracker||torrents||artist: artist / group name
688	music_tracker||torrents||groupYear: release year
689	music_tracker||torrents||releaseType: release type (e.g., album, single, mixtape). ['album', 'single', 'ep', 'compilation', 'mixtape']
690	music_tracker||torrents||groupId: Unique release identifier from What.CD. Used to ensure no releases are duplicates.
691	music_tracker||torrents||id: unique identifier (essentially an index)
692	music_tracker||tags||index: 
693	music_tracker||tags||id: release identifier which can be matched with id field in the torrents table
694	music_tracker||tags||tag: ['electronic', '2010s', 'instrumental', 'freely.available', 'experimental']
695	world_development_indicators||Country||CountryCode: Country Code. unique code identifying countries. ['ABW', 'ADO', 'AFG', 'AGO', 'ALB']
696	world_development_indicators||Country||ShortName: Short Name. Short names of countries. ['Zimbabwe', 'Zambia', 'Yemen', 'World', 'West Bank and Gaza']
697	world_development_indicators||Country||TableName: Table Name. table names of countries. ['Zimbabwe', 'Zambia', 'Yemen, Rep.', 'World', 'West Bank and Gaza']
698	world_development_indicators||Country||LongName: Long Name. long or full name of countries
699	world_development_indicators||Country||Alpha2Code: Alpha to Code. 2 digit code of countries. ['ZW', 'ZQ', 'ZM', 'ZJ', 'ZG']
700	world_development_indicators||Country||CurrencyUnit: Currency Unit. Currency Unit used in this country. ['Euro', 'U.S. dollar', 'West African CFA franc', 'East Caribbean dollar', 'Central African CFA franc']
701	world_development_indicators||Country||SpecialNotes: Special Notes
702	world_development_indicators||Country||Region: region that country belongs to. ['Europe & Central Asia', 'Sub-Saharan Africa', 'Latin America & Caribbean', 'East Asia & Pacific', 'Middle East & North Africa']
703	world_development_indicators||Country||IncomeGroup: Income Group. income level of countries. ['Upper middle income', 'Lower middle income', 'High income: nonOECD', 'High income: OECD', 'Low income']
704	world_development_indicators||Country||Wb2Code: world bank to code. ['ZW', 'ZR', 'ZQ', 'ZM', 'ZJ']
705	world_development_indicators||Country||NationalAccountsBaseYear: National Accounts Base Year. the year used as the base period for constant price calculations in the country's national accounts
706	world_development_indicators||Country||NationalAccountsReferenceYear: National Accounts Reference Year. ['2010', '2005', '1996', '2000', '2013/14']
707	world_development_indicators||Country||SnaPriceValuation: SNA Price Valuation. ['Value added at basic prices (VAB)', 'Value added at producer prices (VAP)']
708	world_development_indicators||Country||LendingCategory: Lending Category. Lending category. ['IBRD', 'IDA', 'Blend']. IDA: International Development Associations: (IDA) is the part of the World Bank that helps the world's poorest countries.  IBRD: The International Bank for Reconstruction and Development (IBRD) is a global development cooperative owned by 189 member countries.  Blend: Blend is the cloud banking infrastructure powering billions of dollars in financial transactions every day.
709	world_development_indicators||Country||OtherGroups: Other groups. other groups. ['HIPC', 'Euro area']. HIPC: Heavily Indebted Poor Countries  Euro Area: The euro area consists of those Member States of the European Union that have adopted the euro as their currency.
710	world_development_indicators||Country||SystemOfNationalAccounts: System Of National Accounts
711	world_development_indicators||Country||AlternativeConversionFactor: Alternative Conversion Factor. Alternative conversion factor is the underlying annual exchange rate used for the World Bank Atlas method. ['1990\x9695', '1987\x9695', '1993', '1992\x9695', '1991']
712	world_development_indicators||Country||PppSurveyYear: purchasing power parity survey year. ['2011', 'Rolling', '2011 (household consumption only).']
713	world_development_indicators||Country||BalanceOfPaymentsManualInUse: Balance Of Payments Manual In Use. ['IMF Balance of Payments Manual, 6th edition.']
714	world_development_indicators||Country||ExternalDebtReportingStatus: External Debt Reporting Status. ['Actual', 'Estimate', 'Preliminary']. Actual  Preliminary  Estimate commonsense reasoning: If ExternalDebtReportingStatus='Actual', it means this external debt reporting is real and actual, and finished if 'Estimate', it means external debt reporting is finished by estimation. if 'preliminary', it means this external debt reporting is not finished
715	world_development_indicators||Country||SystemOfTrade: System Of Trade. ['General trade system', 'Special trade system']
716	world_development_indicators||Country||GovernmentAccountingConcept: Government Accounting Concept. ['Consolidated central government', 'Budgetary central government']
717	world_development_indicators||Country||ImfDataDisseminationStandard: International Monetory Fund Data Dissemination Standard. IMF Standards for Data Dissemination. ['General Data Dissemination System (GDDS)', 'Special Data Dissemination Standard (SDDS)']
718	world_development_indicators||Country||LatestPopulationCensus: Latest Population Census
719	world_development_indicators||Country||LatestHouseholdSurvey: Latest Household Survey. 
720	world_development_indicators||Country||SourceOfMostRecentIncomeAndExpenditureData: Source Of Most Recent Income And Expenditure Data
721	world_development_indicators||Country||VitalRegistrationComplete: Vital Registration Complete. ['Yes', 'Yes. Vital registration for Guernsey and Jersey.']
722	world_development_indicators||Country||LatestAgriculturalCensus: Latest Agricultural Census. ['2010', '2007', '2013', '2012', '2011']
723	world_development_indicators||Country||LatestIndustrialData: Latest Industrial Data
724	world_development_indicators||Country||LatestTradeData: Latest Trade Data
725	world_development_indicators||Country||LatestWaterWithdrawalData: Latest Water Withdrawal Data
726	world_development_indicators||Series||SeriesCode: Series Code. unique code identifying series. ['AG.AGR.TRAC.NO', 'AG.CON.FERT.PT.ZS', 'AG.CON.FERT.ZS', 'AG.LND.AGRI.K2', 'AG.LND.AGRI.ZS']
727	world_development_indicators||Series||Topic: topic of series
728	world_development_indicators||Series||IndicatorName: Indicator Name
729	world_development_indicators||Series||ShortDefinition: Short Definition. Short Definition of series
730	world_development_indicators||Series||LongDefinition: Long Definition. Long Definition of series
731	world_development_indicators||Series||UnitOfMeasure: Unit Of Measure. ['2011 PPP $', '2005 PPP $', '%', '`']
732	world_development_indicators||Series||Periodicity: ['Annual']
733	world_development_indicators||Series||BasePeriod: Base Period. a period of business or economic activity used as a basis or reference point especially for indexing, calculating, estimating, or adjudicating prices, taxes, compensation, income, and production. ['varies by country', '2005', '2011', '2000', '2010']
734	world_development_indicators||Series||OtherNotes: Other Notes
735	world_development_indicators||Series||AggregationMethod: Aggregation Method. ['Weighted average', 'Sum', 'Gap-filled total', 'Unweighted average', 'Median']
736	world_development_indicators||Series||LimitationsAndExceptions: Limitations And Exceptions
737	world_development_indicators||Series||NotesFromOriginalSource: Notes From Original Source
738	world_development_indicators||Series||GeneralComments: General Comments
739	world_development_indicators||Series||Source: source of this data
740	world_development_indicators||Series||StatisticalConceptAndMethodology: Statistical Concept And Methodology
741	world_development_indicators||Series||DevelopmentRelevance: Development Relevance
742	world_development_indicators||Series||RelatedSourceLinks: Related Source Links
743	world_development_indicators||Series||OtherWebLinks: Other Web Links
744	world_development_indicators||Series||RelatedIndicators: Related Indicators
745	world_development_indicators||Series||LicenseType: License Type. ['Open', 'Restricted']
746	world_development_indicators||CountryNotes||Countrycode: Country code. code identifying unique countries. ['ARG', 'SDN', 'CYP', 'MDA', 'GEO']
747	world_development_indicators||CountryNotes||Seriescode: Series code. Series code of countries. ['SP.POP.TOTL', 'SP.POP.GROW', 'SP.DYN.CDRT.IN', 'SP.DYN.CBRT.IN', 'SM.POP.TOTL']
748	world_development_indicators||CountryNotes||Description: description
749	world_development_indicators||Footnotes||Countrycode: Country code. code identifying unique countries. ['LIC', 'SSA', 'LAC', 'WLD', 'CYP']
750	world_development_indicators||Footnotes||Seriescode: Series code. Series code of countries. ['SP.DYN.IMRT.IN', 'SH.DYN.MORT', 'SH.DTH.MORT', 'SH.DTH.IMRT', 'SH.TBS.INCD']
751	world_development_indicators||Footnotes||Year: ['YR2010', 'YR2000', 'YR2005', 'YR2006', 'YR2004']
752	world_development_indicators||Footnotes||Description: Description of country footnotes
753	world_development_indicators||Indicators||CountryName: Country code. code identifying unique countries. ['Mexico', 'Colombia', 'Philippines', 'Peru', 'Costa Rica']
754	world_development_indicators||Indicators||CountryCode: Series code. Series code of countries. ['MEX', 'COL', 'PHL', 'PER', 'CRI']
755	world_development_indicators||Indicators||IndicatorName: Indicator Name. indicator name
756	world_development_indicators||Indicators||IndicatorCode: Indicator Code. indicator code. ['SP.POP.TOTL', 'SP.POP.GROW', 'SP.URB.TOTL.IN.ZS', 'SP.RUR.TOTL.ZS', 'SP.URB.TOTL']
757	world_development_indicators||Indicators||Year: year
758	world_development_indicators||Indicators||Value: value
759	world_development_indicators||SeriesNotes||Seriescode: Series code. code identifying the series. ['SP.ADO.TFRT', 'SP.DYN.AMRT.FE', 'SP.DYN.AMRT.MA', 'SP.DYN.TO65.FE.ZS', 'SP.DYN.TO65.MA.ZS']
760	world_development_indicators||SeriesNotes||Year: year. ['YR2007', 'YR2002', 'YR2006', 'YR2005', 'YR2004']
761	world_development_indicators||SeriesNotes||Description: Description of series
762	movielens||users||userid: user id. unique identifier number of users
763	movielens||users||age: ['25', '35', '18', '45', '50']. 1: 1-18 years old;  18: 18-25 years old;  25: 25-35 years old;  35: 35-45 years old;  45: 45-50 years old;  50: 50-56 years old;  56: over 56 years old
764	movielens||users||u_gender: user gender. ['M', 'F']. M / F: Male / Female
765	movielens||users||occupation: ['2', '5', '1', '4', '3']
766	movielens||directors||directorid: director id. unique identification number of actors directors
767	movielens||directors||d_quality: director quality. [3, 4, 2, 0, 1]. higher value is better, lower is the worse
768	movielens||directors||avg_revenue: average revenue. [0, 4, 1, 2, 3]. higher value is the higher, lower is the lower
769	movielens||actors||actorid: actor id. unique identificator number of actors
770	movielens||actors||a_gender: actor gender. ['M', 'F']. M: male;  F: female
771	movielens||actors||a_quality: actor quality. [3, 4, 0, 2, 5]. higher is better, lower is the worse
772	movielens||movies||movieid: movie id. unique identifier number of movies
773	movielens||movies||year: [4, 3, 2, 1]. 4: newest;  1: oldest  higher value means newer published date
774	movielens||movies||isEnglish: is English. ['T', 'F']
775	movielens||movies||country: ['USA', 'other', 'UK', 'France']
776	movielens||movies||runningtime: . [3, 2, 1, 0]
777	movielens||movies2actors||movieid: movie id. identifier number of movies
778	movielens||movies2actors||actorid: actor id. identifier number of actors
779	movielens||movies2actors||cast_num: cast number. [3, 2, 1, 0]
780	movielens||movies2directors||movieid: movie id. identifier number of movies
781	movielens||movies2directors||directorid: director id. identifier number of directors
782	movielens||movies2directors||genre: genre of movies. ['Comedy', 'Drama', 'Action', 'Adventure', 'Crime']
783	movielens||u2base||userid: user id. identifier number of users
784	movielens||u2base||movieid: movie id. identifier number of movie
785	movielens||u2base||rating: ratings of movies. ['4', '3', '5', '2', '1']. higher value refers to higher satisfactory, each value is the rating of movies left by users.
786	superstore||people||Customer ID: the id of the customers. ['AA-10375', 'AA-10645', 'AB-10060', 'AB-10105', 'AB-10165']
787	superstore||people||Customer Name: the name of the customers. ['Zuschuss Carroll', 'Xylona Preis', 'Vivian Mathis', 'Victoria Wilson', 'Victoria Pisteka']
788	superstore||people||Segment: the segment that the customers belong to. ['Consumer', 'Corporate', 'Home Office']. commonsense evidence:   consumer   home office: synonym: headquarter.   corporate
789	superstore||people||Country: the country of people. ['United States']
790	superstore||people||City: the city of people. ['New York City', 'Los Angeles', 'Philadelphia', 'San Francisco', 'Houston']
791	superstore||people||State: the state of people. ['California', 'New York', 'Texas', 'Illinois', 'Pennsylvania']. commonsense evidence: please mention its full name in the question, by referring to  https://www23.statcan.gc.ca/imdb/p3VD.pl?Function=getVD&TVD=53971 e.g., New York --> NY
792	superstore||people||Postal Code: the postal code
793	superstore||people||Region: the region of people. ['West', 'East', 'Central', 'South'].  Central:   East:   West:   South:
794	superstore||product||Product ID: the id of products. ['FUR-BO-10001337', 'FUR-BO-10001608', 'FUR-BO-10001972', 'FUR-BO-10003441', 'FUR-BO-10004709']
795	superstore||product||Product Name: the name of products
796	superstore||product||Category: the categories of products. ['Office Supplies', 'Furniture', 'Technology'].  Furniture   Office Supplies   Technology
797	superstore||product||Sub-Category: the sub-categories of products. ['Paper', 'Binders', 'Furnishings', 'Phones', 'Art'].  Bookcases   Chairs   Furnishings   Tables   Appliances   Art   Binders   Envelopes   Fasteners   Labels   Paper   Storage   Supplies   Accessories   Copiers   Machines   Phones
798	superstore||product||Region: the region of products. ['West', 'East', 'Central', 'South'].  Central:   East:   West:   South:
799	superstore||central_superstore||Row ID: row id. the unique id for rows
800	superstore||central_superstore||Order ID: order id. the unique identifier for the order. ['CA-2017-105732', 'CA-2013-105732', 'US-2016-163433', 'US-2012-163433', 'US-2017-110156']
801	superstore||central_superstore||Order Date: order date. the date of the order. ['2015-09-07']. yyyy-mm-dd
802	superstore||central_superstore||Ship Date: ship date. the date of the shipment. ['2016-11-18']. yyyy-mm-dd commonsense evidence:  'shipment time' refers to the time interval between order_date and ship_date.
803	superstore||central_superstore||Ship Mode: ship mode. the ship mode of the order. ['Standard Class', 'Second Class', 'First Class', 'Same Day']. First Class / Second Class / Standard Class commonsense evidence: Among three ship modes, First Class has the fastest delivery speed, followed by Second Class and the speed of the Standard Class is the slowest.
804	superstore||central_superstore||Customer ID: customer id. the id of the customer. ['MA-17560', 'KL-16645', 'SC-20020', 'BM-11650', 'LS-16975']
805	superstore||central_superstore||Region: region of the customer's address. ['Central']
806	superstore||central_superstore||Product ID: product id. the id of the product. ['OFF-BI-10004364', 'OFF-BI-10000756', 'OFF-BI-10000546', 'OFF-BI-10000301', 'TEC-AC-10004510']
807	superstore||central_superstore||Sales: the sales of the product
808	superstore||central_superstore||Quantity: the quantity of the product
809	superstore||central_superstore||Discount: the discount of the product. [0.2, 0.0, 0.8, 0.3, 0.6]. commonsense evidence: original price = sales / (1- discount)
810	superstore||central_superstore||Profit: the profit that the company got by selling the product. commonsense evidence: total cost of products =  sales / (1- discount) * quantity - profit deficiency: if the value is negative
811	superstore||east_superstore||Row ID: row id. the unique id for rows
812	superstore||east_superstore||Order ID: order id. the unique identifier for the order. ['CA-2018-100111', 'CA-2014-100111', 'CA-2018-157987', 'CA-2014-157987', 'US-2016-126977']
813	superstore||east_superstore||Order Date: order date. the date of the order. ['2015-11-11']. yyyy-mm-dd
814	superstore||east_superstore||Ship Date: ship date. the date of the shipment. ['2016-12-10']. yyyy-mm-dd commonsense evidence: 'shipment time' refers to the time interval between order_date and ship_date.
815	superstore||east_superstore||Ship Mode: ship mode. the ship mode of the order. ['Standard Class', 'Second Class', 'First Class', 'Same Day']. First Class / Second Class / Standard Class commonsense evidence: Among three ship modes, First Class has the fastest delivery speed, followed by Second Class and the speed of the Standard Class is the slowest.
816	superstore||east_superstore||Customer ID: customer id. the id of the customer. ['SV-20365', 'TB-21055', 'JD-15895', 'PP-18955', 'EH-13765']
817	superstore||east_superstore||Region: region of the customer's address. ['East']
818	superstore||east_superstore||Product ID: product id. the id of the product. ['OFF-PA-10001970', 'FUR-CH-10002647', 'TEC-AC-10003628', 'OFF-ST-10002574', 'OFF-BI-10003656']
819	superstore||east_superstore||Sales: the sales of the product
820	superstore||east_superstore||Quantity: the quantity of the product
821	superstore||east_superstore||Discount: the discount of the product. [0.0, 0.2, 0.7, 0.4, 0.3]. commonsense evidence: original price = sales / (1- discount)
822	superstore||east_superstore||Profit: the profit that the company got by selling the product. commonsense evidence: total cost of products =  sales / (1- discount) * quantity - profit deficiency: if the value is negative
823	superstore||south_superstore||Row ID: row id. the unique id for rows
824	superstore||south_superstore||Order ID: order id. the unique identifier for the order. ['US-2017-108504', 'US-2013-108504', 'CA-2016-158421', 'CA-2012-158421', 'CA-2018-164756']
825	superstore||south_superstore||Order Date: order date. the date of the order. ['2016-06-11']. yyyy-mm-dd
826	superstore||south_superstore||Ship Date: ship date. the date of the shipment. ['2016-09-26']. yyyy-mm-dd  commonsense evidence: 'shipment time' refers to the time interval between order_date and ship_date.
827	superstore||south_superstore||Ship Mode: ship mode. the ship mode of the order. ['Standard Class', 'Second Class', 'First Class', 'Same Day']. First Class / Second Class / Standard Class commonsense evidence: Among three ship modes, First Class has the fastest delivery speed, followed by Second Class and the speed of the Standard Class is the slowest.
828	superstore||south_superstore||Customer ID: customer id. the id of the customer. ['PP-18955', 'AH-10690', 'ME-17320', 'Dp-13240', 'JE-15610']
829	superstore||south_superstore||Region: region of the customer's address. ['South']
830	superstore||south_superstore||Product ID: product id. the id of the product. ['OFF-ST-10003716', 'OFF-BI-10000145', 'OFF-ST-10001522', 'OFF-ST-10001321', 'OFF-BI-10004728']
831	superstore||south_superstore||Sales: the sales of the product
832	superstore||south_superstore||Quantity: the quantity of the product
833	superstore||south_superstore||Discount: the discount of the product. [0.0, 0.2, 0.7, 0.4, 0.5]. commonsense evidence: original price = sales / (1- discount)
834	superstore||south_superstore||Profit: the profit that the company got by selling the product. commonsense evidence: total cost of products =  sales / (1- discount) * quantity - profit deficiency: if the value is negative
835	superstore||west_superstore||Row ID: row id. the unique id for rows
836	superstore||west_superstore||Order ID: order id. the unique identifier for the order. ['CA-2017-165330', 'CA-2013-165330', 'CA-2018-117457', 'CA-2016-164882', 'CA-2016-104346']
837	superstore||west_superstore||Order Date: order date. the date of the order. ['2015-12-12']. yyyy-mm-dd
838	superstore||west_superstore||Ship Date: ship date. the date of the shipment. ['2016-12-06']. yyyy-mm-dd commonsense evidence: 'shipment time' refers to the time interval between order_date and ship_date.
839	superstore||west_superstore||Ship Mode: ship mode. the ship mode of the order. ['Standard Class', 'Second Class', 'First Class', 'Same Day']. First Class / Second Class / Standard Class commonsense evidence: Among three ship modes, First Class has the fastest delivery speed, followed by Second Class and the speed of the Standard Class is the slowest.
840	superstore||west_superstore||Customer ID: customer id. the id of the customer. ['WB-21850', 'AP-10915', 'RW-19540', 'GG-14650', 'ZC-21910']
841	superstore||west_superstore||Region: region of the customer's address. ['West']
842	superstore||west_superstore||Product ID: product id. the id of the product. ['TEC-AC-10003832', 'OFF-PA-10002005', 'OFF-BI-10002103', 'OFF-BI-10001670', 'FUR-TA-10003473']
843	superstore||west_superstore||Sales: the sales of the product
844	superstore||west_superstore||Quantity: the quantity of the product
845	superstore||west_superstore||Discount: the discount of the product. [0.0, 0.2, 0.7, 0.15, 0.5]. commonsense evidence: original price = sales / (1- discount)
846	superstore||west_superstore||Profit: the profit that the company got by selling the product. commonsense evidence: total cost of products =  sales / (1- discount) * quantity - profit deficiency: if the value is negative
847	shooting||incidents||case_number: case number. ['031347-2015', '072458-2016', '089985-2016', '1004453N', '100577T']
848	shooting||incidents||date: ['2014/6/14', '2012/5/29', '2012/5/26', '2012/2/2', '2006/11/18']
849	shooting||incidents||location: ['9850 Whitehurst Drive', '9830 Chapel Creek Circle # 107', '9770 Forest Lane', '9711 Pinehurst Lane', '9616 C. F. Hawn Freeway']
850	shooting||incidents||subject_statuses: subject statuses. statuses of the victims. ['Shoot and Miss', 'Deceased', 'Injured', 'Other', 'Deceased Injured']
851	shooting||incidents||subject_weapon: subject weapon. ['Handgun', 'Vehicle', 'Unarmed', 'Shotgun', 'Knife']
852	shooting||incidents||subjects: 
853	shooting||incidents||subject_count: subject count. [1, 2, 0, 3]
854	shooting||incidents||officers: 
855	shooting||officers||case_number: case number. ['134472-2015', '380792W', '165193-2016', '199250-2015', '94073V']
856	shooting||officers||race: [None, 'W', 'L', 'B', 'A']
857	shooting||officers||gender: ['M', 'F']. M: male;  F: female
858	shooting||officers||last_name: last name. ['White', 'Edwards', 'Martinez', 'Johnson', 'Hughes']
859	shooting||officers||first_name: first name. [None, 'Michael', 'Christopher', 'Daniel', 'Matthew', 'John']
860	shooting||officers||full_name: full name. ['Crow, Jason', 'Banes, Matthew', 'White, Phillip', 'Villanueva, Rene', 'Vanderslice, Christopher']
861	shooting||subjects||case_number: case number. ['384832T', '56177Z', '280895N;  291418N', '266130-2015', '226455N']
862	shooting||subjects||race: ['B', 'L', 'W', 'A']
863	shooting||subjects||gender: ['M', 'F']. M: male;  F: female
864	shooting||subjects||last_name: last name. ['Unknown', 'Johnson', 'Williams', 'Wilson', 'Smith']
865	shooting||subjects||first_name: first name. [None, 'James', 'Michael', 'Robert', 'Derrick', 'Tony']
866	shooting||subjects||full_name: full name. ['Unknown', 'Zoller, Jonathan', 'Wyatt, Michael', 'Wrigley, Larry', 'Woodson, Anthony']
867	genes||Classification||GeneID: gene id. unique identifier number of genes. ['G234064', 'G234065', 'G234070', 'G234073', 'G234074']
868	genes||Classification||Localization: location. ['nucleus', 'cytoplasm', 'mitochondria', 'cytoskeleton', 'plasma membrane']
869	genes||Genes||GeneID: gene id. identifier number of genes. ['G234227', 'G235485', 'G235801', 'G234581', 'G235177']
870	genes||Genes||Essential: essential. ['Non-Essential', 'Essential', '?', 'Ambiguous-Essential']
871	genes||Genes||Class: class. ['?', 'Protein Kinases', 'ATPases', 'Transcription factors', 'GTP-binding proteins']
872	genes||Genes||Complex: 
873	genes||Genes||Phenotype: ['?', 'Conditional phenotypes', 'Cell morphology and organelle mutants', 'Cell cycle defects', 'Nucleic acid metabolism defects']. ?: means: doesn't exit the phenotype
874	genes||Genes||Motif: ['?', 'PS00017', 'PS00108', 'PS00107', 'PS00633']
875	genes||Genes||Chromosome: 
876	genes||Genes||Function: 
877	genes||Genes||Localization: . ['nucleus', 'cytoplasm', 'cytoskeleton', 'mitochondria', 'plasma membrane']
878	genes||Interactions||GeneID1: gene id 1. identifier number of genes. ['G235439', 'G235597', 'G234334', 'G235287', 'G234754']
879	genes||Interactions||GeneID2: gene id 2. identifier number of genes. ['G237021', 'G235632', 'G235247', 'G235490', 'G235157']
880	genes||Interactions||Type: ['Physical', 'Genetic', 'Genetic-Physical']
881	"genes||Interactions||Expression_Corr: Expression correlation score. range: (0,1)  if the value is the positive then it's ""positively correlated""  if the value is the negative then it's ""negatively correlated""  if the value is very high positively, it means two genes are highly correlated"
882	app_store||playstore||App: 
883	app_store||playstore||Category: . ['FAMILY', 'GAME', 'TOOLS', 'MEDICAL', 'BUSINESS']
884	app_store||playstore||Rating: 
885	app_store||playstore||Reviews: 
886	app_store||playstore||Size: . ['Varies with device', '11M', '12M', '14M', '13M']
887	app_store||playstore||Installs: . ['1,000,000+', '10,000,000+', '100,000+', '10,000+', '1,000+']
888	app_store||playstore||Type: . ['Free', 'Paid', 'NaN']
889	app_store||playstore||Price: . ['0', '$0.99', '$2.99', '$1.99', '$4.99']
890	app_store||playstore||Content Rating: . ['Everyone', 'Teen', 'Mature 17+', 'Everyone 10+', 'Adults only 18+']
891	app_store||playstore||Genres: . ['Tools', 'Entertainment', 'Education', 'Medical', 'Business']
892	app_store||user_reviews||App: . ['CBS Sports App - Scores, News, Stats & Watch Live', 'Bowmasters', 'Angry Birds Classic', 'Helix Jump', '8 Ball Pool']
893	app_store||user_reviews||Translated_Review: 
894	app_store||user_reviews||Sentiment: . ['nan', 'Positive', 'Negative', 'Neutral']
895	app_store||user_reviews||Sentiment_Polarity: . ['nan', '0.0', '0.5', '0.7', '1.0']
896	app_store||user_reviews||Sentiment_Subjectivity: . ['nan', '0.0', '1.0', '0.5', '0.6']
897	regional_sales||Customers||CustomerID: customer id. unique id number indicating which customer
898	regional_sales||Customers||Customer Names: customer names. the name of the customer. ['Wuxi Group', 'Winthrop ', 'Weimei Corp', 'WakeFern ', 'Victory Ltd']
899	regional_sales||Products||ProductID: product id. unique id number representing each product
900	regional_sales||Products||Product Name: product name. name of the product. ['Wreaths', 'Wine Storage', 'Wardrobes', 'Wall Frames', 'Wall Coverings']
901	regional_sales||Regions||StateCode: state code. the unique code identifying the state. ['AL', 'AR', 'AZ', 'CA', 'CO']
902	regional_sales||Regions||State: full state name. ['Wyoming', 'Wisconsin', 'Washington', 'Virginia', 'Utah']
903	regional_sales||Regions||Region: the region where the state is located in. ['South', 'West', 'Midwest', 'Northeast']
904	regional_sales||Sales Team||SalesTeamID: SalesTeam ID. unique sales team id
905	regional_sales||Sales Team||Sales Team: sales team names. ['Todd Roberts', 'Stephen Payne', 'Shawn Wallace', 'Shawn Torres', 'Shawn Cook']
906	regional_sales||Sales Team||Region: the region where the state is located in. ['Midwest', 'West', 'Northeast', 'South']
907	regional_sales||Store Locations||StoreID: Store ID. unique store id
908	regional_sales||Store Locations||City Name: ['Springfield', 'Columbia', 'Wayne', 'Washington', 'Warren']
909	regional_sales||Store Locations||County: full county name
910	regional_sales||Store Locations||StateCode: State Code. state code. ['CA', 'TX', 'IL', 'FL', 'NY']
911	regional_sales||Store Locations||State: full state name. ['California', 'Texas', 'Illinois', 'Florida', 'New York']
912	regional_sales||Store Locations||Type: type of the store. ['City', 'Township', 'Town', 'CDP', 'Borough']. City Town CDP (customer data platform) Unified Government Consolidated Government Other Township Urban County  Borough Metropolitan Government
913	regional_sales||Store Locations||Latitude: 
914	regional_sales||Store Locations||Longitude: commonsense evidence: coordinates or detailed position: (Latitude, Longitude)
915	regional_sales||Store Locations||AreaCode: Area Code. 
916	regional_sales||Store Locations||Population: 
917	regional_sales||Store Locations||Household Income: 
918	regional_sales||Store Locations||Median Income: 
919	regional_sales||Store Locations||Land Area: 
920	regional_sales||Store Locations||Water Area: 
921	regional_sales||Store Locations||Time Zone: ['America/Chicago', 'America/New York', 'America/Los Angeles', 'America/Denver', 'America/Phoenix']
922	regional_sales||Sales Orders||OrderNumber: Order Number. the unique number identifying the order. ['SO - 0001000', 'SO - 0001001', 'SO - 0001002', 'SO - 0001003', 'SO - 0001004']
923	regional_sales||Sales Orders||Sales Channel: ['In-Store', 'Online', 'Distributor', 'Wholesale'].  In-Store  Online  Distributor  Wholesale
924	regional_sales||Sales Orders||WarehouseCode: Warehouse Code. ['WARE-NMK1003', 'WARE-PUJ1005', 'WARE-UHY1004', 'WARE-XYS1001', 'WARE-MKL1006']. commonsense evidence: if the warehouse code is the same, it means this product is shipped from the same ware house
925	regional_sales||Sales Orders||ProcuredDate: Procured Date. ['6/18/20', '12/1/19', '3/10/20', '10/27/18', '7/19/18']. commonsense evidence: date: month/date/year, 17--> 2017
926	regional_sales||Sales Orders||OrderDate: Order Date. ['8/4/18', '5/4/19', '1/20/19', '4/4/19', '7/22/18']
927	regional_sales||Sales Orders||ShipDate: Ship Date. ['8/12/19', '9/27/19', '7/18/20', '10/23/20', '1/20/19']
928	"regional_sales||Sales Orders||DeliveryDate: Delivery Date. ['9/30/19', '9/16/20', '6/13/20', '7/17/18', '12/29/18']. commonsense evidence: the difference ""DeliveryDate - OrderDate"" is smaller, it means faster delivery"
929	regional_sales||Sales Orders||CurrencyCode: Currency Code. ['USD']. USD
930	regional_sales||Sales Orders||_SalesTeamID:  Sales Team ID. Sales Team ID
931	regional_sales||Sales Orders||_CustomerID:  Customer ID. _Customer ID
932	regional_sales||Sales Orders||_StoreID:  Store ID. _Store ID
933	regional_sales||Sales Orders||_ProductID:  Product ID. _Product ID
934	regional_sales||Sales Orders||Order Quantity: [8, 3, 1, 7, 4]. commonsense evidence: 1 - 8: higher means order quantity is higher or customer needs more
935	regional_sales||Sales Orders||Discount Applied: [0.05, 0.075, 0.1, 0.15, 0.2]. commonsense evidence: 0.2: 20% discount
936	regional_sales||Sales Orders||Unit Price: . ['1,051.90', '1,125.60', '1,005.00', '1,118.90', '1,038.50']
937	regional_sales||Sales Orders||Unit Cost: . ['93.80', '933.98', '825.44', '804.80', '743.70']. commonsense evidence: net profit = Unit Price - Unit Cost
938	european_football_1||divisions||division: division id. ['B1', 'D1', 'D2', 'E0', 'E1']
939	european_football_1||divisions||name: name of the division. ['Süper Lig', 'Superleague', 'Seria B', 'Seria A', 'Scottish Premiership']
940	european_football_1||divisions||country: country of the division. ['England', 'Scotland', 'Spain', 'Italy', 'France']
941	european_football_1||matchs||Div: Division. Division Id. ['E1', 'E3', 'E2', 'EC', 'SP2']
942	european_football_1||matchs||Date: Match Date. ['2011-02-12']. YYYY-MM-DD
943	"european_football_1||matchs||HomeTeam: Name of Home Team. ['Sheffield Weds', 'Preston', ""Nott'm Forest"", 'Millwall', 'Bristol City']"
944	"european_football_1||matchs||AwayTeam: Name of Away Team. ['Sheffield Weds', 'Preston', ""Nott'm Forest"", 'Millwall', 'Bristol City']"
945	european_football_1||matchs||FTHG: Final-time Home-team Goals
946	european_football_1||matchs||FTAG: Final-time Away-team Goals
947	european_football_1||matchs||FTR: Final-time Results. ['H', 'A', 'D']. commonsense evidence: H stands for home victory, which means FTHG is higher than FTAG  A stands for away victory, which means FTAG is higher than FTHG  D stands for draft, which means FTHG equals to FTAG
948	european_football_1||matchs||season: season of the match
949	professional_basketball||awards_players||playerID: ID number identifying the unique number of the player. ['abdulka01', 'jordami01', 'duncati01', 'bryanko01', 'olajuha01']
950	professional_basketball||awards_players||award: the name of the award. ['All-NBA First Team', 'All-NBA Second Team', 'All-Defensive First Team', 'All-Defensive Second Team', 'All-NBA Third Team']
951	professional_basketball||awards_players||year: the time of this award
952	"professional_basketball||awards_players||lgID: league ID. the name of the league. ['NBA', 'ABA', 'NBL', 'ABL1']. mainly categories: ""NBA"" & ""ABA"""
953	professional_basketball||awards_players||note: notification. [None, 'tie']. ”null“ refers to that no special things ”tie“ represents that coaches are tied for some awards
954	professional_basketball||awards_players||pos: position. the position of the player. [None, 'G', 'F', 'C', 'F/G', 'F/C']. C: Center F: Forward G: Guard
955	professional_basketball||coaches||coachID: ID number identifying the unique number of the coach. ['wilkele01', 'brownla01', 'nelsodo01', 'sloanje01', 'fitchbi01']
956	professional_basketball||coaches||year: 
957	professional_basketball||coaches||tmID: team ID. team name. ['NYK', 'BOS', 'DET', 'LAL', 'PHI']. abbreviated name
958	"professional_basketball||coaches||lgID: league ID. league name. ['NBA', 'ABA', 'ABL1', 'PBLA', 'NPBL']. mainly categories: ""NBA"" & ""ABA"""
959	professional_basketball||coaches||stint: the period of the time coaching this team. [1, 2, 3, 4, 5]
960	professional_basketball||coaches||won: the number of won games. 0: no wins
961	professional_basketball||coaches||lost: the number of lost games. 0: win all the games
962	professional_basketball||coaches||post_wins: post season wins. the number of games won in the post-season (playoffs) games. 0: no wins  commonsense evidence:  If the team's post-season wins and losses are all zero, it implies that the team did not participate in the post-season (playoffs) that year.
963	professional_basketball||coaches||post_losses: post season losses. the number of games lost in the post-season (playoffs) games. 0: win all the games  commonsense evidence:  If the team's post-season wins and losses are all zero, it implies that the team did not participate in the post-season (playoffs) that year.
964	professional_basketball||draft||id: the unique number to determine one row of the data
965	professional_basketball||draft||draftYear: which year does this draft happens
966	professional_basketball||draft||draftRound: the Round number of this draft. If the value is 0, it means that there is no draft in this year  1 refers that this player was picked in the first round
967	professional_basketball||draft||draftSelection: league ID. the position that the player was picked. 0：This signifies that it doesn't contain the draft information of this player  7：this player was selected in the 7th position in this round  commonsense evidence:  draftRound: 1;  draftSelection: 7  represents: this player was selected in the round 1, 7th position.
968	professional_basketball||draft||draftOverall: draft overall rank. The player's overall draft position for the year. this is the overall draft rank of the player.
969	professional_basketball||draft||tmID: team ID. team name. ['NYK', 'BOS', 'DET', 'CHI', 'PHI']. abbreviated name
970	professional_basketball||draft||firstName: the first name of the player. ['John', 'Jim', 'Bob', 'Mike', 'Bill']
971	professional_basketball||draft||lastName: the last name of the player. ['Smith', 'Williams', 'Johnson', 'Jones', 'Davis']
972	professional_basketball||draft||suffixName: the suffix name of the player. [None, 'Jr.']
973	professional_basketball||draft||playerID: ID number identifying the unique number of the player. [None, 'raymocr01', 'jonesdw01', 'grossmi01', 'gillihe01', 'cheniph01']
974	professional_basketball||draft||draftFrom: the university that the drafted players come from. [None, 'UCLA', 'Kentucky', 'North Carolina', 'Duke', 'Indiana']. the name of the university
975	"professional_basketball||draft||lgID: league ID. the league name. ['NBA', 'ABA']. mainly categories: ""NBA"" & ""ABA"""
976	professional_basketball||player_allstar||playerID: ID number identifying the unique number of the player. ['onealsh01', 'abdulka01', 'ervinju01', 'jordami01', 'chambwi01']
977	"professional_basketball||player_allstar||last_name: last name. the last name of the player. ['Johnson', 'Jones', 'Malone', ""O'Neal"", 'Abdul-Jabbar']"
978	professional_basketball||player_allstar||first_name: first name. the first name of the player. ['Bob', 'Larry', 'John', 'Bill', 'George']
979	professional_basketball||player_allstar||season_id: season id. the id number of the season
980	professional_basketball||player_allstar||conference: which conference that players belong to. ['East', 'West', 'Allstars', 'Denver', 'Weset']. two categories: west; east
981	professional_basketball||player_allstar||league_id: league ID. the league name. ['NBA', 'ABA']. two categories: NBA; ABA
982	professional_basketball||player_allstar||games_played: games played. how many all star games that this player played in this season. [1]. mostly it's 1
983	professional_basketball||player_allstar||minutes: minutes of attendance. 18：played in 18 minutes
984	professional_basketball||player_allstar||points: 19: get 19 points；  null --> doesn't get points
985	professional_basketball||player_allstar||o_rebounds: offense rebounds. empty or null refers to none offense rebounds，  1: one offense rebound
986	professional_basketball||player_allstar||d_rebounds: defense rebounds. empty or null refers to none defense rebounds，  1: one defense rebound
987	professional_basketball||player_allstar||rebounds: total rebounds. empty or null refers to none total rebounds，  3: totally gets 3 rebounds including offence and defense rebounds  commensense evidence:  total rebounds = offense rebounds + defense rebounds
988	professional_basketball||player_allstar||assists: assistants. null or empty refers to none  2: 2 assistants
989	professional_basketball||player_allstar||steals: [None, 0, 1, 2, 3, 4]. null or empty refers to none  2: 2 steals
990	professional_basketball||player_allstar||blocks: [None, 0, 1, 2, 3, 4]. null or empty refers to none  2: 2 blocks
991	professional_basketball||player_allstar||turnovers: [None, 1, 2, 0, 3, 4]. null or empty refers to none  2: 2 turnovers
992	professional_basketball||player_allstar||personal_fouls: personal fouls. [None, 0, 1, 2, 3, 4]. null or empty refers to none  2: 2 personal fouls
993	professional_basketball||player_allstar||fg_attempted: field goal attempted. null or empty refers to none  2: 2 field goal attempts
994	professional_basketball||player_allstar||fg_made: field goal made. null or empty refers to none  2: 2 field goal made
995	professional_basketball||player_allstar||ft_attempted: free throw attempted. null or empty refers to none  2: 2 free throw attempts
996	professional_basketball||player_allstar||ft_made: free throw made. null or empty refers to none  2: 2 free throw made
997	professional_basketball||player_allstar||three_attempted: three point attempted. null or empty refers to none  2: 2 three point attempts
998	professional_basketball||player_allstar||three_made: three point made. [None, 0, 1, 2, 3, 4]. null or empty refers to none  2: 2 three point made
999	professional_basketball||players||playerID: ID number identifying the unique number of the player. ['abdelal01', 'abdulka01', 'abdulma01', 'abdulma02', 'abdulta01']
1000	professional_basketball||players||useFirst: use first name. . [None, 'John', 'Bob', 'Jim', 'Mike', 'Bill']. not useful
1001	professional_basketball||players||firstName: the first name of the player. [None, 'John', 'Robert', 'James', 'William', 'Michael']
1002	professional_basketball||players||middleName: the middle name of the player. [None, 'J.', 'L.', 'E.', 'Lee', 'A.']
1003	professional_basketball||players||lastName: the last name of the player. ['Williams', 'Johnson', 'Smith', 'Jones', 'Brown']
1004	professional_basketball||players||nameGiven: . [None, 'Willie', 'nameGiven', 'Thomas', 'Robert', 'Mort']. not useful
1005	professional_basketball||players||fullGivenName: . [None, 'fullGivenName', 'Warren Edward Armstrong', 'Walter Raphael Hazzard, Jr.', 'Walter Jones', 'Swen Langeberg at J.C.']. not useful
1006	professional_basketball||players||nameSuffix: the suffix name of the player. [None, 'Jr.', 'III', 'II', 'Sr.', 'IV']
1007	professional_basketball||players||nameNick: nick name. . [None, 'Bob', 'Mike', 'Bill', 'Jim', 'Steve']
1008	professional_basketball||players||pos: position. the position of the player. [None, 'G', 'F', 'C', 'F-C', 'G-F']. C: Center    F: Forward    G: Guard     commonsense evidence:  some player can have two positions simultaneously
1009	professional_basketball||players||firstseason: . [None, 0, 1951]. nothing special
1010	professional_basketball||players||lastseason: . [None, 0, 1951]. nothing special
1011	professional_basketball||players||height: inch. inch
1012	professional_basketball||players||weight: lb. null or empty means it doesn't have this information
1013	professional_basketball||players||college: [None, 'none', 'Kentucky', 'UCLA', 'Notre Dame', 'Indiana']. null or empty means it doesn't have this information    which colledge does this player graduate from
1014	professional_basketball||players||collegeOther: the college that transferred from. commonsense evidence:    some players may have the record of transferring from other colleges
1015	professional_basketball||players||birthDate: birthdate. [None, '0000-00-00', '1985-06-01', '1984-06-26', '1981-02-02', '1980-06-13']
1016	professional_basketball||players||birthCity: birthcity. [None, 'Chicago', 'Philadelphia', 'Brooklyn', 'Los Angeles', 'New York']. null / empty refers to not recorded
1017	professional_basketball||players||birthState: birth state. [None, 'CA', 'NY', 'IL', 'PA', 'OH']
1018	professional_basketball||players||birthCountry: birth country. [None, 'USA', 'YUG', 'FRA', 'CAN', 'GER']
1019	professional_basketball||players||highSchool: high school. null / empty refers to not recorded
1020	professional_basketball||players||hsCity: high school city. [None, 'Chicago', 'Brooklyn', 'Philadelphia', 'Detroit', 'Los Angeles']. null / empty refers to not recorded
1021	professional_basketball||players||hsState: high school state. [None, 'CA', 'NY', 'IL', 'PA', 'IN']. null / empty refers to not recorded
1022	professional_basketball||players||hsCountry: high school country. [None, 'USA', 'CAN', 'AUS', 'YUG', 'NGR']. null / empty refers to not recorded
1023	"professional_basketball||players||deathDate: deathdate. ['0000-00-00', '2012-06-07', '2011-08-31', '2011-08-29', '2010-06-19']. 0000-00-00 means this player is still alive    within clear date：  2011-11-10, which means this guy was died on ""2011-11-10"""
1024	professional_basketball||players||race: . [None, 'B', 'W', 'O', '1', 'r']. B：black,  W: white    null or empty: nothing
1025	professional_basketball||teams||year: 
1026	professional_basketball||teams||lgID: league ID. league name. ['NBA', 'NBL', 'ABA', 'PBLA', 'ABL1']. main categories: NBA, ABA
1027	professional_basketball||teams||tmID: team ID. team id. ['NYK', 'BOS', 'DET', 'LAL', 'PHI']. abbreviated name
1028	professional_basketball||teams||franchID: . ['DET', 'SAC', 'PHI', 'NYK', 'LAL']. not useful
1029	professional_basketball||teams||confID: . [None, 'WC', 'EC']. not useful
1030	professional_basketball||teams||divID: division ID. [None, 'CD', 'PC', 'AT', 'MW', 'WD']
1031	professional_basketball||teams||rank: [2, 1, 3, 4, 5]. less is better
1032	professional_basketball||teams||confRank: . not useful
1033	professional_basketball||teams||playoff: another name: post season. [None, 'C1', 'CS', 'CF', 'DS', 'F']. for brevity, if the value is not null or empty, it means this team attends the playoffs, otherwise, means not attend
1034	professional_basketball||teams||name: full name of the team. ['New York Knicks', 'Boston Celtics', 'Detroit Pistons', 'Los Angeles Lakers', 'Philadelphia 76ers']
1035	professional_basketball||teams||o_fgm: offense field goal made. how many offense field goal made by this team in this season
1036	professional_basketball||teams||o_ftm: offense free throw made. how many offense free throw made by this team in this season
1037	professional_basketball||teams||o_pts: offense points
1038	professional_basketball||teams||d_pts: defense points
1039	professional_basketball||teams||homeWon: home wins. wins in the home
1040	professional_basketball||teams||homeLost: home loses. loses in the home
1041	professional_basketball||teams||awayWon: away wins. wins in the away
1042	professional_basketball||teams||awayLost: away loses. loses in the away
1043	professional_basketball||teams||won: . total wins of this team in this year.
1044	professional_basketball||teams||lost: . total losts of this team in this year.
1045	professional_basketball||teams||games: . total number of games that this team played in this year (season)
1046	professional_basketball||teams||arena: [None, 'Boston Garden', 'Madison Square Garden (IV)', 'Oakland-Alameda County Coliseum Arena', 'Chicago Stadium', 'The Spectrum']. null or empty refers to the fact that this team doesn't have individual arenas, otherwise, it has individual arenas
1047	professional_basketball||awards_coaches||id: id of this row of data
1048	professional_basketball||awards_coaches||year: which year did the coach receive the honor?
1049	professional_basketball||awards_coaches||coachID: id number of the coaches. ['brownla01', 'rileypa01', 'nelsodo01', 'shuege01', 'sharmbi01']
1050	"professional_basketball||awards_coaches||award: the award names. ['NBA Coach of the Year', 'ABA Coach of the Year']. mainly categories: ""NBA"" & ""ABA"""
1051	"professional_basketball||awards_coaches||lgID: league ID. the name of the league. ['NBA', 'ABA']. mainly categories: ""NBA"" & ""ABA"""
1052	professional_basketball||awards_coaches||note: special notification. [None, 'tie']. ”null“ refers to that no special things ”tie“ represents that coaches are tied for some awards
1053	professional_basketball||players_teams||id: the unique number to identify this record
1054	professional_basketball||players_teams||playerID: ID number identifying the unique number of the player. ['willike02', 'malonmo01', 'edwarja01', 'smithjo02', 'parisro01']
1055	professional_basketball||players_teams||year: 
1056	professional_basketball||players_teams||stint: the period of the time player spent played for this team. [1, 2, 0, 3, 4]
1057	professional_basketball||players_teams||tmID: team ID. team name. ['NYK', 'BOS', 'DET', 'PHI', 'LAL']. abbreviated name
1058	professional_basketball||players_teams||lgID: . ['NBA', 'ABA', 'NBL', 'ABL1', 'PBLA']
1059	professional_basketball||players_teams||GP: game presentatons. game presentatons (attendance). min: 0, max: 82  commonsense evidence:  if this number is equal to 82, means full attendance
1060	professional_basketball||players_teams||GS: game starting. min: 0, max: 82,  commonsense evidence:  when GP = GS, it means that this player plays as the stating lineup fully.
1061	professional_basketball||players_teams||minutes: 
1062	professional_basketball||players_teams||points: 
1063	professional_basketball||players_teams||oRebounds: offense rebounds. empty or null refers to none offense rebounds，  1: one offense rebound
1064	professional_basketball||players_teams||dRebounds: defense rebounds. empty or null refers to none defense rebounds，  1: one defense rebound
1065	professional_basketball||players_teams||rebounds: total rebounds. empty or null refers to none total rebounds，  3: totally gets 3 rebounds including offense and defense rebounds  commensense evidence:  total rebounds = offense rebounds + defense rebounds
1066	professional_basketball||players_teams||assists: assistants. null or empty refers to none  2: 2 assistants
1067	professional_basketball||players_teams||steals: null or empty refers to none  2: 2 steals
1068	professional_basketball||players_teams||blocks: null or empty refers to none  2: 2 blocks
1069	professional_basketball||players_teams||turnovers: null or empty refers to none  2: 2 turnovers
1070	professional_basketball||players_teams||PF: personal fouls. null or empty refers to none  2: 2 personal fouls
1071	professional_basketball||players_teams||fgAttempted: field goal attempted. null or empty refers to none  2: 2 field goal attempts
1072	professional_basketball||players_teams||fgMade: field goal made. null or empty refers to none  2: 2 field goal made
1073	professional_basketball||players_teams||ftAttempted: free throw attempted. null or empty refers to none  2: 2 free throw attempts
1074	professional_basketball||players_teams||ftMade: free throw made. null or empty refers to none  2: 2 free throw made
1075	professional_basketball||players_teams||threeAttempted: three point attempted. null or empty refers to none  2: 2 three point attempts
1076	professional_basketball||players_teams||threeMade: three point made. null or empty refers to none  2: 2 three point made
1077	professional_basketball||players_teams||PostGP: post season game presentations. 0: this player doesn't present in the post season (playoffs)
1078	professional_basketball||players_teams||PostGS: post season game starting
1079	professional_basketball||players_teams||PostMinutes: post season minutes
1080	professional_basketball||players_teams||PostPoints: post season points
1081	professional_basketball||players_teams||PostoRebounds: post season offense rebounds. null or empty refers to none  1: 1 offense rebounds in the post season
1082	professional_basketball||players_teams||PostdRebounds: post season defense rebounds. null or empty refers to none  1: 1 defense rebounds in the post season
1083	professional_basketball||players_teams||PostRebounds: post season defense rebounds. null or empty refers to none  3: 3 rebounds in the post season totally
1084	professional_basketball||players_teams||PostAssists: post season assistants. . null or empty refers to none  1: 1 assistance in the post season
1085	professional_basketball||players_teams||PostSteals: post season steals. . null or empty refers to none  1: 1 offense steals in the post season
1086	professional_basketball||players_teams||PostBlocks: post season blocks. . null or empty refers to none  1: 1 block in the post season
1087	professional_basketball||players_teams||PostTurnovers: post season turnovers. . null or empty refers to none  1: 1 turnover in the post season
1088	professional_basketball||players_teams||PostPF: post season personal fouls. . null or empty refers to none  1: 2 personal fouls in the post season
1089	professional_basketball||players_teams||PostfgAttempted: post season field goal attempted. . null or empty refers to none  1: 1 field goal attempts in the post season
1090	professional_basketball||players_teams||PostfgMade: post season field goal made. . null or empty refers to none  1: 1 field goal made in the post season
1091	professional_basketball||players_teams||PostftAttempted: post season field free throw attempted. . null or empty refers to none  1: 1 free throw attempts in the post season
1092	professional_basketball||players_teams||PostftMade: post season free throw made. . null or empty refers to none  1: 1 free throw made in the post season
1093	professional_basketball||players_teams||PostthreeAttempted: post season three point attempted. . null or empty refers to none  1: 1 three point attempts in the post season
1094	professional_basketball||players_teams||PostthreeMade: post season three point made. . null or empty refers to none  1: 1 three point made in the post season
1095	professional_basketball||players_teams||note: . [None, 'C']
1096	professional_basketball||series_post||id: unique number of this record
1097	professional_basketball||series_post||year: 
1098	professional_basketball||series_post||round: ['CFR', 'CSF', 'DSF', 'CF', 'F']. known abbreviations：  F：final  SF: semi-final   QF：quater-final 1/4  DF：division-final   DSF：division semi-final
1099	professional_basketball||series_post||series: . ['L', 'M', 'N', 'O', 'J']. not useful
1100	professional_basketball||series_post||tmIDWinner: team id winner. ['LAL', 'BOS', 'NYK', 'CHI', 'SAS']
1101	professional_basketball||series_post||lgIDWinner: league id winner. ['NBA', 'ABA']
1102	professional_basketball||series_post||tmIDLoser: team id loser. [None, 'NYK', 'LAL', 'BOS', 'PHI', 'PHO']
1103	professional_basketball||series_post||lgIDLoser: league id loser. ['NBA', 'ABA']
1104	professional_basketball||series_post||W: wins. [4, 3, 2, 1, 0]
1105	professional_basketball||series_post||L: loses. [1, 2, 0, 3, 4]
1106	shakespeare||chapters||id: unique id number identifying the chapter
1107	shakespeare||chapters||Act: An act is a major division of a theatre work, including a play, film, opera, or musical theatre. [1, 4, 3, 2, 5]. commonsense evidence: An act can consist of one or more scenes
1108	shakespeare||chapters||Scene: A scene is a dramatic part of a story, at a specific time and place, between specific characters.
1109	shakespeare||chapters||Description: textual description of the chapter.
1110	shakespeare||chapters||work_id: work id. id number identifying the work
1111	shakespeare||characters||id: unique id number identifying the characters
1112	shakespeare||characters||CharName: char name. character name. ['Messenger', 'All', 'Servant', 'Lord', 'Second Gentleman']
1113	shakespeare||characters||Abbrev: abbreviation. abbreviation. An abbreviation is a shortened form of a word or phrase.. ['All', 'Servant', 'Messenger', 'Second Gentleman', 'First Gentleman']
1114	shakespeare||characters||Description: description of the character.
1115	shakespeare||paragraphs||id: unique id number identifying the paragraphs
1116	shakespeare||paragraphs||ParagraphNum: paragraph number. unique id number identifying the paragraph number
1117	shakespeare||paragraphs||PlainText: Plain Text. main content of the paragraphs
1118	shakespeare||paragraphs||character_id: character id. unique id number identifying the mentioned character
1119	shakespeare||paragraphs||chapter_id: chapter id. unique id number identifying the related chapter. commonsense evidence: if number of the paragraphs is > 150, then it means this is a long chapter
1120	shakespeare||works||id: unique id number identifying the work
1121	shakespeare||works||Title: title of the work. ['Venus and Adonis', 'Two Gentlemen of Verona', 'Twelfth Night', 'Troilus and Cressida', 'Titus Andronicus']. commonsense evidence: the short title or abbreviated title
1122	shakespeare||works||LongTitle: Long Title. full title of the work. ['Venus and Adonis', 'Two Gentlemen of Verona', 'Twelfth Night, Or What You Will', 'Troilus and Cressida', 'Tragedy of Hamlet, Prince of Denmark, The']
1123	shakespeare||works||Date: character id. date of the work
1124	shakespeare||works||GenreType: genre type. the type of the genere. ['Comedy', 'History', 'Tragedy', 'Poem', 'Sonnet']
1125	cars||country||origin: the unique identifier for the origin country. [1, 2, 3]
1126	cars||country||country: the origin country of the car. ['USA', 'Japan', 'Europe']
1127	cars||price||ID: unique ID for each car
1128	cars||price||price: price of the car in USD
1129	cars||data||ID: unique ID for each car
1130	cars||data||mpg: mileage per gallon. mileage of the car in miles per gallon. commonsense evidence: The car with higher mileage is more fuel-efficient.
1131	cars||data||cylinders: number of cylinders. the number of cylinders present in the car. [4, 8, 6, 3, 5]
1132	cars||data||displacement: engine displacement in cubic mm. commonsense evidence: sweep volume = displacement / no_of cylinders
1133	cars||data||horsepower: horse power. horse power associated with the car. commonsense evidence: horse power is the metric used to indicate the power produced by a car's engine - the higher the number, the more power is sent to the wheels and, in theory, the faster it will go.
1134	cars||data||weight: weight of the car in lbs. commonsense evidence: A bigger, heavier vehicle provides better crash protection than a smaller
1135	cars||data||acceleration: acceleration of the car in miles per squared hour
1136	cars||data||model: the year when the car model was introduced in the market. commonsense evidence: 0 --> 1970
1137	cars||data||car_name: car name. name of the car. ['ford pinto', 'toyota corolla', 'ford maverick', 'amc matador', 'toyota corona']
1138	cars||production||ID: the id of the car
1139	cars||production||model_year: model year. year when the car model was introduced in the market
1140	cars||production||country: country id to which the car belongs. [1, 3, 2]. Japan --> Asia   USA --> North America
1141	donor||essays||projectid: project id. unique project identifier
1142	donor||essays||teacher_acctid: teacher acctid. teacher id that created a project. ['787720cc575e3204991b8ca18d312d2b', '5a4b0f48e3e032790973a82e2b923a0a', '15d900805d9d716c051c671827109f45', '804bbcae0f153be09c8e87e7f74854a3', 'affdacb9aeb56dd01ebd8bc922571574']
1143	donor||essays||title: title of the project
1144	donor||essays||short_description: short description. short description of a project
1145	donor||essays||need_statement: need statement. need statement of a project
1146	donor||essays||essay: complete project essay
1147	donor||projects||projectid: project id. project's unique identifier. ['00001ccc0e81598c4bd86bacb94d7acb', '00002bff514104264a6b798356fdd893', '00002d691c05c51a5fdfbb2baef0ba25', '0000b38bbc7252972f7984848cf58098', '0000ee613c92ddc5298bf63142996a5c']
1148	donor||projects||teacher_acctid: teacher acctid. teacher's unique identifier (teacher that created a project). ['787720cc575e3204991b8ca18d312d2b', '15d900805d9d716c051c671827109f45', '5a4b0f48e3e032790973a82e2b923a0a', 'affdacb9aeb56dd01ebd8bc922571574', '3a08369b8098f16b94e13ce295f9a814']
1149	donor||projects||schoolid: school's identifier (school where teacher works). ['9231edfbd3aa42675e70e69aea8b0a36', 'cf26d248d91beb0d6bb82dda4f2f0340', '9943fdb43ab5f2b53f27e961caf9e90a', '27978274618ca9d2affa6861a144604a', 'd5b82ad9ba7785d0ccbfe25cdaf370a8']
1150	donor||projects||school_ncesid: school national center for education statistics id. Public National Center for Ed Statistics id. [None, '170993000689', '360012002824', '360015302853', '360009702582', '061623002023']
1151	donor||projects||school_latitude: school latitude. latitude of school
1152	donor||projects||school_longitude: school longitude. longitude of school
1153	donor||projects||school_city: school city. city where the school is located. ['Chicago', 'Los Angeles', 'Brooklyn', 'Bronx', 'New York']
1154	donor||projects||school_state: school state. state where the school is located. ['CA', 'NY', 'NC', 'IL', 'TX']
1155	donor||projects||school_zip: school zip. zipcode of school
1156	donor||projects||school_metro: school metro. metro where the school is located. [None, 'urban', 'suburban', 'rural']
1157	donor||projects||school_district: school district. district where the school is located
1158	donor||projects||school_county: school county. country where the school is located. [None, 'Los Angeles', 'Cook', 'Kings (Brooklyn)', 'Bronx', 'New York (Manhattan)']
1159	donor||projects||school_charter: school charter. whether it is a public charter school or not (no private schools in the dataset). ['f', 't']
1160	donor||projects||school_magnet: school magnet. whether a public magnet school or not. ['f', 't']
1161	donor||projects||school_year_round: school year round. whether it is a public year round school or not. ['f', 't']
1162	donor||projects||school_nlns: school Nonleafy Normal Stature. whether it is a public Nonleafy Normal Stature school or not. ['f', 't']
1163	donor||projects||school_kipp: school Knowledge Is Power Program. whether it is a public Knowledge Power Program school or not. ['f', 't']
1164	donor||projects||school_charter_ready_promise: school charter ready promise. whether it is a public ready promise school or not. ['f', 't']
1165	"donor||projects||teacher_prefix: teacher prefix. teacher's gender. ['Mrs.', 'Ms.', 'Mr.', 'Dr.', 'Mr. & Mrs.']. commonsense evidence: if the value is equal to ""Dr. "", it means this teacher acquired P.h.D or doctor degree."
1166	donor||projects||teacher_teach_for_america: teachers teach for america. Teach for America or not. ['f', 't']
1167	donor||projects||teacher_ny_teaching_fellow: teacher new york teaching fellow. New York teaching fellow or not. ['f', 't']. t: true  f: false commonsense evidence: if true: it means that this teacher is a New York teacher
1168	donor||projects||primary_focus_subject: primary focus subject. main subject for which project materials are intended. [None, 'Literacy', 'Literature & Writing', 'Mathematics', 'Special Needs', 'Applied Sciences']
1169	donor||projects||primary_focus_area: primary focus area. main subject area for which project materials are intended. [None, 'Literacy & Language', 'Math & Science', 'Music & The Arts', 'Applied Learning', 'Special Needs']
1170	donor||projects||secondary_focus_subject: secondary focus subject. secondary subject. [None, 'Literature & Writing', 'Literacy', 'Mathematics', 'Special Needs', 'ESL']
1171	donor||projects||secondary_focus_area: secondary focus area. secondary subject area. [None, 'Literacy & Language', 'Math & Science', 'Applied Learning', 'History & Civics', 'Music & The Arts']
1172	donor||projects||resource_type: resource type. main type of resources requested by a project. [None, 'Supplies', 'Technology', 'Books', 'Other', 'Trips']
1173	donor||projects||poverty_level: poverty level. school's poverty level. ['highest poverty', 'high poverty', 'moderate poverty', 'low poverty']. commonsense evidence: highest: 65%+ free of reduced lunch; high: 40-64%; moderate: 10-39%low: 0-9%
1174	donor||projects||grade_level: grade level. grade level for which project materials are intended. [None, 'Grades PreK-2', 'Grades 3-5', 'Grades 6-8', 'Grades 9-12']
1175	donor||projects||fulfillment_labor_materials: fulfillment labor materials. cost of fulfillment. [None, 30.0, 35.0, 17.0, 9.0]. commonsense evidence: higher means higher cost, or need more labors
1176	donor||projects||total_price_excluding_optional_support: total price excluding optional support. project cost excluding optional tip that donors give to DonorsChoose.org while funding a project
1177	donor||projects||total_price_including_optional_support: total price including optional support. project cost including optional tip that donors give to DonorsChoose.org while funding a project. commonsense evidence: cost of optional tip = total_price_including_optional_support -total_price_excluding_optional_support
1178	donor||projects||students_reached: students reached. number of students impacted by a project (if funded)
1179	donor||projects||eligible_double_your_impact_match: eligible double your impact match. project was eligible for a 50% off offer by a corporate partner (logo appears on a project, like Starbucks or Disney). ['f', 't']
1180	donor||projects||eligible_almost_home_match: eligible almost home match. project was eligible for a $100 boost offer by a corporate partner. ['f', 't']
1181	donor||projects||date_posted: date posted. data a project went live on the site. ['2012-09-30']
1182	donor||donations||donationid: donation id. unique donation identifier. ['000000a91a14ed37bef82e125c102e77', '000013be53ed7382ed5d5975eb86eb85', '00001ccc0e81598c4bd86bacb94d7acb', '00001cf5f4fe22f381dcc59a6707d9c4', '00002b62a6a2a662daf3d683894ca02d']
1183	donor||donations||projectid: project id. project identifier that received the donation. ['6478917feb8ae9a985092f945f9e46fd', '506fbf618d66c70114f3b0d9b9f647d6', 'affd1203106c8cd6bdf82fcfd2077ba8', 'eebe3953e28704f4c1deaea71fa07d43', 'cb3521560fb972a8eac6628735798e10']
1184	donor||donations||donor_acctid: donor accid. donor that made a donation. ['c2db6ea9ac3c111bcbf498a16b9227a0', '38fcf7f544893c94a77ec58d4729ffb8', '5516d8922c92d03983fc5e950a186c38', '1e3a83724789f21a09c1caacdcf93ac0', 'fe6992bdba85fdf2bdae6c985128effe']
1185	donor||donations||donor_city: donor city. donation city
1186	donor||donations||donor_state: donor state. donation state. [None, 'CA', 'NY', 'FL', 'IL', 'TX']
1187	donor||donations||donor_zip: donor zip. donation zip code. [None, '94102', '98102', '10018', '10001', '62715']
1188	donor||donations||is_teacher_acct: is teacher acct. whether donor is also a teacher. ['f', 't']. commonsense evidence:  f: false, it means this donor is not a teacher  t: true, it means this donor is a teacher
1189	donor||donations||donation_timestamp: donation timestamp. the time of donation. ['2008-03-31 00:00:00']
1190	donor||donations||donation_to_project: donation to project. amount to project, excluding optional support (tip)
1191	donor||donations||donation_optional_support: donation optional support. amount of optional support
1192	donor||donations||donation_total: donation total. donated amount. commonsense evidence: donated amount = donation_to_project + donation_optional_support
1193	donor||donations||dollar_amount: dollar amount. donated amount in US dollars. ['10_to_100', '100_and_up', 'under_10']
1194	donor||donations||donation_included_optional_support: donation included optional support. whether optional support (tip) was included for DonorsChoose.org. ['t', 'f']. commonsense evidence:  f: false, optional support (tip) was not included for DonorsChoose.org  t: true, optional support (tip) was included for DonorsChoose.org
1195	donor||donations||payment_method: payment method. what card/payment option was used. ['no_cash_received', 'creditcard', 'paypal', 'promo_code_match', 'double_your_impact_match']
1196	donor||donations||payment_included_acct_credit: payment included acct credit. whether a portion of a donation used account credits redemption. ['f', 't']. commonsense evidence:  f: false, a portion of a donation didn't use account credits redemption  t: true, a portion of a donation used account credits redemption
1197	donor||donations||payment_included_campaign_gift_card: payment included campaign gift card. whether a portion of a donation included corporate sponsored gift card. ['f', 't']. commonsense evidence:  f: false, a portion of a donation included corporate sponsored gift card  t: true, a portion of a donation included corporate sponsored gift card
1198	donor||donations||payment_included_web_purchased_gift_card: payment included web purchased gift card. whether a portion of a donation included citizen purchased gift card (ex: friend buy a gift card for you). ['f', 't']. f: false  t: true
1199	donor||donations||payment_was_promo_matched: payment was promo matched. whether a donation was matched 1-1 with corporate funds. ['f', 't']. commonsense evidence:  f: false, a donation was not matched 1-1 with corporate funds  t: true, a donation was matched 1-1 with corporate funds
1200	donor||donations||via_giving_page: via giving page. donation given via a giving / campaign page (example: Mustaches for Kids). ['f', 't']
1201	donor||donations||for_honoree: for honoree. donation made for an honoree. ['f', 't']. commonsense evidence:  f: false, this donation is not made for an honoree  t: true, this donation is made for an honoree
1202	donor||donations||donation_message: donation message. donation comment/message.
1203	donor||resources||resourceid: resource id. unique resource id. ['0000037fecc4461faf0e49328ae66661', '0000046b69c683354ca46b30db5c558e', '0000138bc6304aa89f948532d4c075f3', '00001517d8218857d4a1391f3585eb38', '000015a8f7d75566c19dfd7eb17c9071']
1204	donor||resources||projectid: project id. project id that requested resources for a classroom. ['55ddff340f7291001a74408bb15489c0', '725558f4af784a539b1aba6cec002398', 'c96c7e25dfb644d1aff90f107352abd0', 'b85cb5a7e4d718d60bfd9fe4d8dd2fc6', '1c0529297f8e5e3a648f472c892a6d24']
1205	donor||resources||vendorid: vendor id. vendor id that supplies resources to a project
1206	donor||resources||vendor_name: vendor name
1207	donor||resources||project_resource_type: project resource type. type of resource. [None, 'Books', 'Supplies', 'Technology', 'Other', 'Trips']
1208	donor||resources||item_name: item name. resource name
1209	donor||resources||item_number: item number. resource item identifier
1210	donor||resources||item_unit_price: item unit price. unit price of the resource
1211	donor||resources||item_quantity: item quantity. number of a specific item requested by a teacher
1212	video_games||genre||id: the unique identifier of the game genre
1213	video_games||genre||genre_name: genre name. the game genre. ['Strategy', 'Sports', 'Simulation', 'Shooter', 'Role-Playing']. commonsense evidence: The game genre can have a significant effect on the game. The genre refers to the category or type of game, such as action, adventure, strategy, or role-playing. The genre can determine the general style and gameplay of the game, as well as the expectations of the players. The genre can also affect the audience for the game, as different genres may appeal to different groups of players.
1214	video_games||game||id: the unique identifier of the game
1215	video_games||game||genre_id: genre id. the id of the game genre. commonsense evidence: If game A and game B have the same genre, the user who likes game A may also like game B.
1216	video_games||game||game_name: game name. the name of the game
1217	video_games||platform||id: the unique identifier of the game platform
1218	video_games||platform||platform_name: platform name. the name of the platform. ['XOne', 'XB', 'X360', 'WiiU', 'Wii']. commonsense evidence: The game platform, or the platform on which a game is played, can have a significant effect on the game. The platform can determine what hardware and software the game can run on, as well as the technical capabilities of the game. The platform can also affect the audience for the game, as different platforms may attract different groups of players.
1219	video_games||publisher||id: the unique identifier of the game publisher
1220	video_games||publisher||publisher_name: publisher name. the name of the publisher. ['responDESIGN', 'mixi, Inc', 'inXile Entertainment', 'imageepoch Inc.', 'id Software']. commonsense evidence: The publisher is the company or organization that finances, produces, and distributes the game. The publisher can influence the development of the game by providing resources, guidance, and support to the game's development team. The publisher can also affect the marketing and distribution of the game, as they are responsible for promoting the game and making it available to players.
1221	video_games||game_publisher||id: the unique identifier of the game publisher
1222	video_games||game_publisher||game_id: game id. the id of the game
1223	video_games||game_publisher||publisher_id: publisher id. the id of the publisher. commonsense evidence: If game A and game B were published by the same publisher, the user who likes game A may also like game B if the user is a fan of the publisher company.
1224	video_games||game_platform||id: the unique identifier of the record
1225	video_games||game_platform||game_publisher_id: game publisher id. the id of the game publisher
1226	video_games||game_platform||platform_id: platform id. the id of the platform
1227	video_games||game_platform||release_year: release year. the release year of the game
1228	video_games||region||id: the unique identifier of the region. [1, 2, 3, 4]
1229	video_games||region||region_name: region name. the region name. ['Other', 'North America', 'Japan', 'Europe']
1230	video_games||region_sales||region_id: region id. the id of the region. [4, 3, 2, 1]
1231	video_games||region_sales||game_platform_id: game platform id. the id of the game platform
1232	video_games||region_sales||num_sales: number sales. the number of sales in this region. commonsense evidence: The number of games sold in the region = num_sales * 100000. The game platform with higher num_sales is more popular in the region.
1233	authors||Author||Id: Id of the author
1234	authors||Author||Name: Author Name
1235	authors||Author||Affiliation: Organization name with which the author is affiliated.. the name of an organization with which an author can be affiliated
1236	authors||Conference||Id: Conference Id
1237	authors||Conference||ShortName: Short name
1238	authors||Conference||FullName: Full name
1239	authors||Conference||HomePage: Homepage URL of conference
1240	authors||Journal||Id: Journal Id
1241	authors||Journal||ShortName: Short name
1242	authors||Journal||FullName: Full name
1243	authors||Journal||HomePage: Homepage URL of journal
1244	authors||Paper||Id: Id of the paper
1245	authors||Paper||Title: Title of the paper
1246	"authors||Paper||Year: Year of the paper. commonsense reasoning: if the year is ""0"", it means this paper is preprint, or not published"
1247	authors||Paper||ConferenceId: Conference Id in which paper was published
1248	"authors||Paper||JournalId: Journal Id in which paper was published. commonsense reasoning: If a paper contain ""0"" in both ConferenceID and JournalId, it means this paper is preprint"
1249	authors||Paper||Keyword: Keywords of the paper. commonsense reasoning: Keywords should contain words and phrases that suggest what the topic is about.  Similar keywords represent similar fields or sub-field.
1250	authors||PaperAuthor||PaperId: Paper Id
1251	authors||PaperAuthor||AuthorId: Author Id. commonsense reasoning: A paper can have more than one author. Co-authorship can be derived from (paper ID, author ID) pair.
1252	authors||PaperAuthor||Name: Author Name (as written on paper)
1253	authors||PaperAuthor||Affiliation: Author Affiliation (as written on paper). the name of an organization with which an author can be affiliated
1254	college_completion||institution_details||unitid: Unit ID number. unique Education Unit ID number
1255	college_completion||institution_details||chronname: Institution name
1256	college_completion||institution_details||city: Institution city. ['Chicago', 'New York', 'Brooklyn', 'Philadelphia', 'Los Angeles']
1257	college_completion||institution_details||state: Institution state. ['California', 'New York', 'Pennsylvania', 'Texas', 'Ohio']
1258	college_completion||institution_details||level: Level of institution. ['4-year', '2-year']. commonsense evidence: 4-year: bachelor's degree 2-year: associate's degree
1259	college_completion||institution_details||control: Control of institution. ['Public', 'Private not-for-profit', 'Private for-profit']. Public,  Private not-for-profit,  Private for-profit
1260	college_completion||institution_details||basic: Carnegie Foundation for the Advancement of Teaching Basic Classification (2010 version)
1261	college_completion||institution_details||hbcu: Historically Black College and Universities. Denotes Historically Black College and Universities. ['NULL', 'X']
1262	college_completion||institution_details||flagship: Denotes Public flagship institutions. ['NULL', 'X']
1263	college_completion||institution_details||long_x: long x. Institution longitude
1264	college_completion||institution_details||lat_y: lat y. Institution latitude. commonsense evidence: institute Coordinate
1265	college_completion||institution_details||site: Institution Web site address
1266	college_completion||institution_details||student_count: student count. Total number of undergraduates in 2010
1267	college_completion||institution_details||awards_per_value: awards per value. Completions per 100 FTE (full-time equivalency) undergraduate students (average 2011, 2012, and 2013)
1268	college_completion||institution_details||awards_per_state_value: awards per state value. Completions per 100 FTE (full-time equivalency) undergraduate students, state and sector average. commonsense evidence:  if his institute's completion (or graduation) rate exceeds the average for the state and sector in which it belongs: awards_per_value > awards_per_state_value  if his institute's completion (or graduation) rate falls below the average for the state and sector in which it belongs: awards_per_value < awards_per_state_value
1269	college_completion||institution_details||awards_per_natl_value: awards per national value. Completions per 100 FTE (full-time equivalency) undergraduate students, national sector average. [22.5, 16.5, 21.5, 24.6, 32.8]. commonsense evidence:  if his institute's completion (or graduation) rate exceeds the average for the nationalin which it belongs: awards_per_value > awards_per_natl_value  if his institute's completion (or graduation) rate falls below the average for the state and industry in which it belongs: awards_per_value < awards_per_natl_value
1270	college_completion||institution_details||exp_award_value: expected award value. Estimated educational spending per academic award in 2013. Includes all certificates and degrees. expenses related to instruction, research, public service, student services, academic support, institutional support, operations and maintenance. Includes all certificates and degrees
1271	college_completion||institution_details||exp_award_state_value: expected award state value. Spending per completion, state and sector average
1272	college_completion||institution_details||exp_award_natl_value: expected award national value. Spending per completion, national sector average. [101725, 37780, 66436, 38763, 24795]
1273	college_completion||institution_details||exp_award_percentile: exp award percentile. 
1274	college_completion||institution_details||ft_pct: Full-time percentage. Percentage of undergraduates who attend full-time
1275	college_completion||institution_details||fte_value: Full-time percentage. total number of full-time equivalent undergraduates
1276	college_completion||institution_details||fte_percentile: fte percentile. 
1277	college_completion||institution_details||med_sat_value: median SAT value. Median estimated SAT value for incoming students. ['NULL', '1030', '1070', '1050', '1010']
1278	college_completion||institution_details||med_sat_percentile: median SAT percentile. Institution's percent rank for median SAT value within sector. ['NULL', '51', '39', '33', '65']. Institution's percent rank for median SAT value within sector
1279	college_completion||institution_details||aid_value: aid value. The average amount of student aid going to undergraduate recipients
1280	college_completion||institution_details||aid_percentile: aid percentile. Institution's percent rank for average amount of student aid going to undergraduate recipients within sector. Institution's percent rank for average amount of student aid going to undergraduate recipients within sector
1281	college_completion||institution_details||endow_value: endow value. End-of-year endowment value per full-time equivalent student. ['NULL', '657', '33', '247', '176']
1282	college_completion||institution_details||endow_percentile: endow percentile. Institution's percent rank for endowment value per full-time equivalent student within sector. ['NULL', '89', '84', '68', '53']
1283	college_completion||institution_details||grad_100_value: graduation 100 value. percentage of first-time, full-time, degree-seeking undergraduates who complete a degree or certificate program within 100 percent of expected time (bachelor's-seeking group at 4-year institutions). %,  commonsense evidence: lower means harder to graduate for bachelor
1284	college_completion||institution_details||grad_100_percentile: graduation 100 percentile. Institution's percent rank for completers within 100 percent of normal time within sector
1285	college_completion||institution_details||grad_150_value: graduation 150 value. percentage of first-time, full-time, degree-seeking undergraduates who complete a degree or certificate program within 150 percent of expected time (bachelor's-seeking group at 4-year institutions). %,  commonsense evidence: lower means harder to graduate for bachelor
1286	college_completion||institution_details||grad_150_percentile: graduation 150 percentile. Institution's percent rank for completers within 150 percent of normal time within sector
1287	college_completion||institution_details||pell_value: pell value. percentage of undergraduates receiving a Pell Grant
1288	college_completion||institution_details||pell_percentile: pell percentile. Institution's percent rank for undergraduate Pell recipients within sector
1289	college_completion||institution_details||retain_value: retain value. share of freshman students retained for a second year
1290	college_completion||institution_details||retain_percentile: retain percentile. Institution's percent rank for freshman retention percentage within sector
1291	college_completion||institution_details||ft_fac_value: full time faculty value. Percentage of employees devoted to instruction, research or public service who are full-time and do not work for an associated medical school
1292	college_completion||institution_details||ft_fac_percentile: full time faculty percentile. Institution's percent rank for full-time faculty share within sector
1293	college_completion||institution_details||vsa_year: voluntary system of accountability year. Most recent year of Student Success and Progress Rate data available from the Voluntary System of Accountability. [None, 'NULL', '2010', '2011', '2009', '2008']
1294	college_completion||institution_details||vsa_grad_after4_first: voluntary system of accountability after 4 year first time. First-time, full-time students who graduated from this institution within four years. ['NULL', '23.1', '22.8', '22.3', '25.5']
1295	college_completion||institution_details||vsa_grad_elsewhere_after4_first: voluntary system of accountability graduation elsewhere after 4 year first time. First-time, full-time students who graduated from another institution within four years. ['NULL', '5.5', '4.2', '4.1', '3.2']
1296	college_completion||institution_details||vsa_enroll_after4_first: voluntary system of accountability enrollment after 4 year first time. First-time, full-time students who are still enrolled at this institution after four years. ['NULL', '34', '37.7', '32.7', '34.9']
1297	college_completion||institution_details||vsa_enroll_elsewhere_after4_first: voluntary system of accountability enrollment elsewhere after 4 year first time. First-time, full-time students who are enrolled at another institution after four years. ['NULL', '18.4', '15.7', '16.3', '16.1']
1298	college_completion||institution_details||vsa_grad_after6_first: voluntary system of accountability graduation elsewhere after 6 year first time. First-time, full-time students who graduated from this institution within six years. ['NULL', '50.9', '47.4', '45.1', '44.8']. null: not available
1299	college_completion||institution_details||vsa_grad_elsewhere_after6_first: voluntary system of accountability graduation elsewhere after 6 year first time. First-time, full-time students who graduated from another institution within six years. ['NULL', '12.9', '11.1', '9.7', '10.3']
1300	college_completion||institution_details||vsa_enroll_after6_first: voluntary system of accountability enrollment after 6 year first time. First-time, full-time students who are still enrolled at this institution after six years. ['NULL', '4.4', '5', '8.9', '8.5']
1301	college_completion||institution_details||vsa_enroll_elsewhere_after6_first: voluntary system of accountability enrollment elsewhere after 6 year first time. First-time, full-time students who are enrolled at another institution after six years. ['NULL', '9.8', '9.3', '11.4', '11.3']
1302	college_completion||institution_details||vsa_grad_after4_transfer: voluntary system of accountability transfer after 6 year first time. Full-time transfer students who graduated from this institution within four years. ['NULL', '0', '68.1', '57.2', '56.5']
1303	college_completion||institution_details||vsa_grad_elsewhere_after4_transfer: voluntary system of accountability graduation elsewhere after 4 year. Full-time transfer students who graduated from this institution within four years. ['NULL', '0', '7.4', '6.9', '5.7']
1304	college_completion||institution_details||vsa_enroll_after4_transfer: voluntary system of accountability enrollment after 4 years transfer. Full-time transfer students who are still enrolled at this institution after four years. ['NULL', '7.9', '13.9', '0', '5.8']
1305	college_completion||institution_details||vsa_enroll_elsewhere_after4_transfer: voluntary system of accountability enrollment elsewhere after 4 years transfer. Full-time transfer students who are enrolled at another institution after four years. ['NULL', '7.2', '8.9', '8.6', '8.3']
1306	college_completion||institution_details||vsa_grad_after6_transfer: voluntary system of accountability enrollment elsewhere after 6 years transfer. Full-time transfer students who graduated from this institution within six years. ['NULL', '0', '58.2', '72.2', '69.7']
1307	college_completion||institution_details||vsa_grad_elsewhere_after6_transfer: voluntary system of accountability graduation elsewhere after 6 years transfer. Full-time transfer students who graduated from another institution within six years. ['NULL', '0', '10', '8.3', '7.5']
1308	college_completion||institution_details||vsa_enroll_after6_transfer: voluntary system of accountability enrollment after 6 years transfer. Full-time transfer students who are still enrolled at this institution after six years. ['NULL', '2.7', '0', '2.8', '2']
1309	college_completion||institution_details||vsa_enroll_elsewhere_after6_transfer: voluntary system of accountability enrollment elsewhere after 6 years transfer. Full-time transfer students who are enrolled at another institution after six years. ['NULL', '6.1', '5.9', '0', '5.7']
1310	college_completion||institution_details||similar: 
1311	college_completion||institution_details||state_sector_ct: state sector ct. 
1312	college_completion||institution_details||carnegie_ct: carnegie ct. 
1313	college_completion||institution_details||counted_pct: counted pct. . ['NULL', '100.0|07', '100.0|10', '0.0|07', '69.5|07']
1314	college_completion||institution_details||nicknames: . ['NULL', 'NSU', 'MSU', 'ASU', 'The U']
1315	college_completion||institution_details||cohort_size: cohort size. 
1316	college_completion||institution_grads||unitid: unit id. Education Unit ID number
1317	college_completion||institution_grads||year: year of data release
1318	college_completion||institution_grads||gender: gender of students. ['M', 'F', 'B']. 'B' = both genders; 'M' = male; 'F' = female
1319	college_completion||institution_grads||race: race/ethnicity of students. ['X', 'W', 'H', 'B', 'Ai']. commonsense evidence: 'X' = all students; 'Ai' = American Indian; 'A' = Asian; 'B' = Black; 'H' = Hispanic; 'W' = White
1320	college_completion||institution_grads||cohort: degree-seeking cohort type. ['4y other', '4y bach', '2y all']. commonsense evidence:  '4y bach' = Bachelor's/equivalent-seeking cohort at 4-year institutions;   '4y other' = Students seeking another type of degree or certificate at a 4-year institution;   '2y all' = Degree-seeking students at 2-year institutions 4-year degree is bachelor's degree 2-year degree is associate's degree
1321	college_completion||institution_grads||grad_cohort: graduation cohort. Number of first-time, full-time, degree-seeking students in the cohort being tracked, minus any exclusions. ['NULL', '0', '1', '2', '3']
1322	college_completion||institution_grads||grad_100: graduation 100. Number of students who graduated within 100 percent of normal/expected time. ['NULL', '0', '1', '2', '3']
1323	college_completion||institution_grads||grad_150: graduation 150. Number of students who graduated within 150 percent of normal/expected time. ['NULL', '0', '1', '2', '3']
1324	college_completion||institution_grads||grad_100_rate: grad 100 rate. Percentage of students who graduated within 100 percent of normal/expected time. ['NULL', '0.0', '100.0', '50.0', '33.3']
1325	college_completion||institution_grads||grad_150_rate: grad 150 rate. Percentage of students who graduated within 150 percent of normal/expected time. ['NULL', '0.0', '100.0', '50.0', '33.3']
1326	college_completion||state_sector_grads||stateid: state id. state FIPS (Federal Information Processing System) code
1327	college_completion||state_sector_grads||state: state name. ['United States', 'Texas', 'Tennessee', 'Ohio', 'New York']
1328	college_completion||state_sector_grads||state_abbr: state abbr. . ['US', 'TX', 'TN', 'OH', 'NY']
1329	college_completion||state_sector_grads||control: . ['Public', 'Private for-profit', 'Private not-for-profit']. Public,  Private not-for-profit,  Private for-profit
1330	college_completion||state_sector_grads||level: Level of institution. ['4-year', '2-year']. commonsense evidence: 4-year: bachelor's degree 2-year: associate's degree
1331	college_completion||state_sector_grads||year: year of data release
1332	college_completion||state_sector_grads||gender: gender of students. ['M', 'F', 'B']. B' = both genders; 'M' = male; 'F' = female
1333	college_completion||state_sector_grads||race: race/ethnicity of students. ['X', 'W', 'H', 'B', 'Ai']. commonsense evidence: 'X' = all students; 'Ai' = American Indian; 'A' = Asian; 'B' = Black; 'H' = Hispanic; 'W' = White
1334	college_completion||state_sector_grads||cohort: degree-seeking cohort type. ['4y bach', '4y other', '2y all']. commonsense evidence:  '4y bach' = Bachelor's/equivalent-seeking cohort at 4-year institutions;   '4y other' = Students seeking another type of degree or certificate at a 4-year institution;   '2y all' = Degree-seeking students at 2-year institutions 4-year degree is bachelor's degree 2-year degree is associate's degree
1335	college_completion||state_sector_grads||grad_cohort: graduation cohort. Number of first-time, full-time, degree-seeking students in the cohort being tracked, minus any exclusions. ['0', '1', '2', '3', '4']
1336	college_completion||state_sector_grads||grad_100: graduation 100. Number of students who graduated within 100 percent of normal/expected time. ['NULL', '0', '1', '2', '3']
1337	college_completion||state_sector_grads||grad_150: graduation 150. Number of students who graduated within 150 percent of normal/expected time. ['0', '1', '2', '3', '4']
1338	college_completion||state_sector_grads||grad_100_rate: grad 100 rate. Percentage of students who graduated within 100 percent of normal/expected time. ['NULL', '0', '50', '33.3', '25']
1339	college_completion||state_sector_grads||grad_150_rate: grad 150 rate. Percentage of students who graduated within 150 percent of normal/expected time. ['NULL', '0', '50', '100', '33.3']
1340	college_completion||state_sector_grads||grad_cohort_ct: graduation cohort count. Number of institutions with data included in the cohort
1341	college_completion||state_sector_details||stateid: state id. state FIPS (Federal Information Processing System) code
1342	college_completion||state_sector_details||state: state name. ['Wyoming', 'Wisconsin', 'West Virginia', 'Washington', 'Virginia']
1343	college_completion||state_sector_details||state_post: state post. . ['Wyo.', 'Wis.', 'Wash.', 'W.Va.', 'Vt.']
1344	college_completion||state_sector_details||level: Level of institution. ['4-year', '2-year']. commonsense evidence: 4-year: bachelor's degree 2-year: associate's degree
1345	college_completion||state_sector_details||control: . ['Public', 'Private not-for-profit', 'Private for-profit']. Public,  Private not-for-profit,  Private for-profit
1346	college_completion||state_sector_details||schools_count: schools count. 
1347	college_completion||state_sector_details||counted_pct: counted percentage. Percentage of students in the entering class (Fall 2007 at 4-year institutions, Fall 2010 at 2-year institutions) who are first-time, full-time, degree-seeking students and generally part of the official graduation rate. ['NULL', '71.4', '63.9', '61.7', '57.5']
1348	college_completion||state_sector_details||awards_per_state_value: awards per state value. Completions per 100 FTE (full-time equivalent) undergraduate students, state and sector average. ['NULL', '22', '21.3', '20.9', '23.9']
1349	college_completion||state_sector_details||awards_per_natl_value: awards per national value. Completions per 100 FTE (full-time equivalent) undergraduate students, national sector average. [32.8, 25.9, 24.6, 22.5, 21.5]
1350	college_completion||state_sector_details||exp_award_state_value: expected award state value. Spending per completion, state and sector average. ['NULL', '99440', '99056', '97275', '96333']
1351	college_completion||state_sector_details||exp_award_natl_value: expected award national value. Spending per completion, national sector average. [101725, 66436, 38763, 37780, 34510]
1352	college_completion||state_sector_details||state_appr_value: state appropriation value. State appropriations to higher education in fiscal year 2011 per resident. ['NULL', '254.79', '659.39', '64.7', '496.78']
1353	college_completion||state_sector_details||state_appr_rank: state appr rank. . ['NULL', '19', '9', '8', '7']
1354	college_completion||state_sector_details||grad_rate_rank: grad rate rank. . ['NULL', '9', '8', '7', '6']
1355	college_completion||state_sector_details||awards_per_rank: awards per rank. . ['NULL', '9', '8', '7', '6']
1356	public_review_platform||Attributes||attribute_id: attribute id. unique number identifying the attribute
1357	public_review_platform||Attributes||attribute_name: attribute name. the name of the attribute. ['payment_types_visa', 'payment_types_mastercard', 'payment_types_discover', 'payment_types_cash_only', 'payment_types_amex']
1358	public_review_platform||Categories||category_id: category id. 
1359	"public_review_platform||Categories||category_name: category name. . ['Zoos', 'Yoga', 'Yelp Events', ""Women's Clothing"", 'Wineries']"
1360	public_review_platform||Compliments||compliment_id: compliment id. 
1361	public_review_platform||Compliments||compliment_type: compliment type. . ['writer', 'profile', 'plain', 'photos', 'note']
1362	public_review_platform||Days||day_id: day id. the unique id identifying the day of the week. [1, 2, 3, 4, 5]
1363	public_review_platform||Days||day_of_week: day of week. indicate the day of the week. ['Wednesday', 'Tuesday', 'Thursday', 'Sunday', 'Saturday']
1364	public_review_platform||Years||year_id: year id. the unique number identifying the year. [2005, 2006, 2007, 2008, 2009]
1365	public_review_platform||Years||actual_year: actual year. [2014, 2013, 2012, 2011, 2010]
1366	public_review_platform||Business_Attributes||attribute_id: attribute id. id number identifying the attribute
1367	public_review_platform||Business_Attributes||business_id: business id. id number identifying the business
1368	public_review_platform||Business_Attributes||attribute_value: attribute value. sort of the attributes for each business. ['false', 'true', '2', 'casual', '1']. commonsense evidence:  None, No or FALSE means the business does not have the attribute.
1369	public_review_platform||Business_Categories||business_id: business id. id number identifying the business
1370	public_review_platform||Business_Categories||category_id: category id. id number identifying the categories
1371	public_review_platform||Business_Hours||business_id: business id. id number identifying the business
1372	public_review_platform||Business_Hours||day_id: day id. id number identifying each day of the week. [5, 4, 6, 3, 2]
1373	public_review_platform||Business_Hours||opening_time: opening time. opening time of the business. ['11AM', '10AM', '9AM', '8AM', '7AM']
1374	public_review_platform||Business_Hours||closing_time: closing time. closing time of the business. ['9PM', '10PM', '5PM', '6PM', '7PM']. commonsense evidence:  how much time does this business open: closing_time - opening_time
1375	public_review_platform||Checkins||business_id: business id. id number identifying the business
1376	public_review_platform||Checkins||day_id: day id. id number identifying each day of the week. [7, 6, 5, 4, 3]
1377	"public_review_platform||Checkins||label_time_0: label time 0. indicates times of checkins on a business. ['None', 'Low', 'Medium', 'High']. label_time_0: 12:00 a.m.  label_time_23: 23:00 p.m.  commonsense evidence: If the label_time recorded ""None"" for check-in on one day, then it means the business is closed on that day."
1378	public_review_platform||Checkins||label_time_1: label time 1. . ['None', 'Low', 'Medium', 'High']
1379	public_review_platform||Checkins||label_time_2: label time 2. . ['None', 'Low', 'Medium']
1380	public_review_platform||Checkins||label_time_3: label time 3. . ['None', 'Low', 'Medium']
1381	public_review_platform||Checkins||label_time_4: label time 4. . ['None', 'Low', 'Medium', 'High']
1382	public_review_platform||Checkins||label_time_5: label time 5. . ['None', 'Low', 'Medium', 'High', 'Uber']
1383	public_review_platform||Checkins||label_time_6: label time 6. . ['None', 'Low', 'Medium', 'High', 'Uber']
1384	public_review_platform||Checkins||label_time_7: label time 7. . ['None', 'Low', 'Medium', 'High', 'Uber']
1385	public_review_platform||Checkins||label_time_8: label time 8. . ['None', 'Low', 'Medium', 'High', 'Uber']
1386	public_review_platform||Checkins||label_time_9: label time 9. . ['None', 'Low', 'Medium', 'High', 'Uber']
1387	public_review_platform||Checkins||label_time_10: label time 10. . ['None', 'Low', 'Medium', 'High', 'Uber']
1388	public_review_platform||Checkins||label_time_11: label time 11. . ['None', 'Low', 'Medium', 'High', 'Uber']
1389	public_review_platform||Checkins||label_time_12: label time 12. . ['None', 'Low', 'Medium', 'High', 'Uber']
1390	public_review_platform||Checkins||label_time_13: label time 13. . ['None', 'Low', 'Medium', 'High', 'Uber']
1391	public_review_platform||Checkins||label_time_14: label time 14. . ['None', 'Low', 'Medium', 'High', 'Uber']
1392	public_review_platform||Checkins||label_time_15: label time 15. . ['None', 'Low', 'Medium', 'High', 'Uber']
1393	public_review_platform||Checkins||label_time_16: label time 16. . ['None', 'Low', 'Medium', 'High', 'Uber']
1394	public_review_platform||Checkins||label_time_17: label time 17. . ['None', 'Low', 'Medium', 'High', 'Uber']
1395	public_review_platform||Checkins||label_time_18: label time 18. . ['None', 'Low', 'Medium', 'High', 'Uber']
1396	public_review_platform||Checkins||label_time_19: label time 19. . ['None', 'Low', 'Medium', 'High', 'Uber']
1397	public_review_platform||Checkins||label_time_20: label time 20. . ['None', 'Low', 'Medium', 'High', 'Uber']
1398	public_review_platform||Checkins||label_time_21: label time 21. . ['None', 'Low', 'Medium', 'High', 'Uber']
1399	public_review_platform||Checkins||label_time_22: label time 22. . ['None', 'Low', 'Medium', 'High', 'Uber']
1400	public_review_platform||Checkins||label_time_23: label time 23. . ['None', 'Low', 'Medium', 'High']
1401	public_review_platform||Elite||user_id: user id. id number identifying the users
1402	public_review_platform||Elite||year_id: year id. id number identifying the year. [2012, 2013, 2014, 2011, 2010]
1403	public_review_platform||Reviews||business_id: business id. the number identifying the business
1404	public_review_platform||Reviews||user_id: user id. the number identifying the user who comments on this business
1405	public_review_platform||Reviews||review_stars: review stars. review on this business. [5, 4, 3, 2, 1]. 5  Great experience  4  Good experience  3  Average experience  2  Bad experience  1 - Terrible experience
1406	public_review_platform||Reviews||review_votes_funny: review votes funny. the amount of funny votes that the user received for the review. ['None', 'Low', 'Medium', 'High', 'Uber']. commonsense evidence: If the reviews receive an Uber number of votes for funny, they will also receive an Uber, High or Medium number of votes for useful and cool.
1407	public_review_platform||Reviews||review_votes_useful: review votes useful. how many useful votes that the user received for the review. ['Low', 'None', 'Medium', 'High', 'Uber']
1408	public_review_platform||Reviews||review_votes_cool: review votes cool. how many cool votes that the user received for the review. ['None', 'Low', 'Medium', 'High', 'Uber']
1409	public_review_platform||Reviews||review_length: review length. The length of the review written by the user. ['Medium', 'Long', 'Short']
1410	public_review_platform||Tips||business_id: business id. the number identifying the business
1411	public_review_platform||Tips||user_id: user id. the number identifying the user who comments on this business
1412	public_review_platform||Tips||likes: Likes. how many likes of this tips. [0, 1, 2, 3]. commonsense evidence: more likes mean this tip is more valuable
1413	public_review_platform||Tips||tip_length: tip length. length of the tip. ['Medium', 'Short', 'Long']
1414	public_review_platform||Users_Compliments||compliment_id: compliment id. the id number indicating the compliment
1415	public_review_platform||Users_Compliments||user_id: user id. the id number indicating the user
1416	public_review_platform||Users_Compliments||number_of_compliments: number of compliments. how many compliments a user has received from other users. ['Low', 'Medium', 'High', 'Uber']. commonsense evidence: more number_of_compliments indicates this user is more welcome or he / she is high-quality user
1417	public_review_platform||Business||business_id: business id. unique number identifying the business
1418	"public_review_platform||Business||active: whether the business is still actively running until now. ['true', 'false']. commonsense reasoning: � ""True"": the business is still running  � ""False"": the business is closed or not running now"
1419	public_review_platform||Business||city: The city where the business is located. ['Phoenix', 'Scottsdale', 'Tempe', 'Mesa', 'Chandler']
1420	public_review_platform||Business||state: The state where the business is located. ['AZ', 'CA', 'SC']
1421	"public_review_platform||Business||stars: ratings of the business. [4.0, 3.5, 4.5, 3.0, 5.0]. 5 � Great experience  4 � Good experience  3 � Average experience  2 � Bad experience  1 - Terrible experience  commonsense evidence:  � the rating of >3 stars referring to ""wonderful experience"" or positive comments and vice versa"
1422	public_review_platform||Business||review_count: review count. the total number of reviews the users have written for a business. ['Low', 'Medium', 'High', 'Uber']. commonsense evidence:  � If a business has a low total review count and a high star rating of >3, it means there is a low veracity of reviews.  � higher review count and with high star rating of > 3 means this business is more popular or more appealing to users.
1423	public_review_platform||Users||user_id: user id. the unique id number identifying which user
1424	public_review_platform||Users||user_yelping_since_year: user yelping since year. the time when the user join Yelp
1425	public_review_platform||Users||user_average_stars: user average stars. the average ratings of all review. ['4.0', '3.5', '5.0', '4.5', '3.0']
1426	public_review_platform||Users||user_votes_funny: user votes funny. total number of funny votes sent by the user. ['None', 'Low', 'Medium', 'High', 'Uber']
1427	public_review_platform||Users||user_votes_useful: user votes useful. how many useful votes created by the user. ['Low', 'Medium', 'None', 'High', 'Uber']
1428	public_review_platform||Users||user_votes_cool: user votes cool. how many cool votes created by the user. ['Low', 'None', 'Medium', 'High', 'Uber']
1429	public_review_platform||Users||user_review_count: user review count. total number of reviews the user has written. ['Low', 'Medium', 'High', 'Uber']
1430	public_review_platform||Users||user_fans: user fans. total number of fans / followers the user has. ['None', 'Low', 'Medium', 'High', 'Uber']. commonsense evidence: Users with Uber number of fans indicate that they have sent an Uber number of cool, useful and funny votes.
1431	citeseer||cites||cited_paper_id: cited paper id. cited_paper_id is the ID of the paper being cited. ['brin98anatomy', 'rao95bdi', 'chakrabarti98automatic', 'bharat98improved', 'lawrence98searching']. cited_paper_id is the ID of the paper being cited
1432	citeseer||cites||citing_paper_id: citing paper id. citing_paper_id stands for the paper which contains the citation. ['lawrence00context', 'marquez00machine', 'dlrg02background', '376145', '448486']. citing_paper_id stands for the paper which contains the citation
1433	citeseer||paper||paper_id: paper id. unique string ID of the paper. ['100157', '100598', '101570', '10227', '102637']. unique string ID of the paper
1434	citeseer||paper||class_label: class label. . ['DB', 'IR', 'Agents', 'ML', 'HCI']
1435	citeseer||content||paper_id: paper id. unique string ID of the paper. ['kinny96methodology', 'dinverno97formal', 'panzarasa99modeling', 'brandt00task', 'glover01improving']. unique string ID of the paper
1436	citeseer||content||word_cited_id: word cited id. rtype. ['word2569', 'word66', 'word730', 'word602', 'word2616']. whether each word in the vocabulary is present (indicated by 1) or absent (indicated by 0) in the paper
1437	simpson_episodes||Episode||episode_id: episode id. A unique identifier for episodes. ['S20-E1', 'S20-E10', 'S20-E11', 'S20-E12', 'S20-E13']
1438	simpson_episodes||Episode||season: the season of the episode. [20]
1439	simpson_episodes||Episode||episode: the episode number of the episode
1440	simpson_episodes||Episode||number_in_series: number in series. the number in series
1441	"simpson_episodes||Episode||title: the title of the episode. ['Wedding for Disaster', ""Waverly Hills, 9021-D'Oh"", 'Treehouse of Horror XIX', 'The Good, the Sad and the Drugly', 'The Burns and the Bees']"
1442	simpson_episodes||Episode||summary: the summary of the episode
1443	simpson_episodes||Episode||air_date: air date. the air date of the episode. ['2009-05-17']. YYYY-MM-DD
1444	simpson_episodes||Episode||episode_image: episode image. the image of episode
1445	simpson_episodes||Episode||rating: the rating of episode. [7.0, 7.2, 7.1, 6.9, 6.6]. 0.0 - 10.0 commonsense evidence: Higher ratings mean higher quality and better response.  excellent: 7.0 < rating <= 10.0  average: 5.0 < rating <= 7.0   bad: 0.0 < rating <= 5.0 not bad: average, excellent
1446	simpson_episodes||Episode||votes: the votes of episode. commonsense evidence: Higher votes mean more audience supports (or popular).
1447	simpson_episodes||Person||name: the name of the crew. ['Adam Greeley', 'Adam Klein', 'Adam Kuhlman', 'Al Holter', 'Al Jean']
1448	simpson_episodes||Person||birthdate: birth date. the birth date of the crew. [None, '1988-02-28']. YYYY-MM-DD
1449	simpson_episodes||Person||birth_name: birth name. the birth name of the crew. [None, 'William Leonard Odenkirk', 'William Donald Payne', 'William Albert Bemiller', 'Valentina Lantigua', 'Trista Haley Navarro']
1450	simpson_episodes||Person||birth_place: birth place. the birth place of the crew. [None, 'Los Angeles', 'USA', 'New York City', 'Chicago', 'Toronto']
1451	simpson_episodes||Person||birth_region: birth region. the birth region of the crew. [None, 'California', 'New York', 'Massachusetts', 'Pennsylvania', 'Illinois']
1452	simpson_episodes||Person||birth_country: birth country. the birth country of the crew. [None, 'USA', 'Canada', 'Ireland', 'UK', 'Philippines']
1453	simpson_episodes||Person||height_meters: height meters. the height of the crew. the unit is meter
1454	simpson_episodes||Person||nickname: the nickname of the crew. [None, 'The Tiny Canadian', 'Simple', 'Moe', 'Little Yum-Yum', 'King Cool']
1455	simpson_episodes||Award||award_id: award id. the unique id for the award
1456	"simpson_episodes||Award||organization: the organization that holds the award. ['Writers Guild of America, USA', 'Primetime Emmy Awards', 'Annie Awards', 'Online Film & Television Association', ""Kids' Choice Awards, USA""]"
1457	simpson_episodes||Award||year: year of award. [2009, 2010, 2018, 2017]
1458	simpson_episodes||Award||award_category: award category. the category of the award. ['WGA Award (TV)', 'Primetime Emmy', 'Annie', 'OFTA Television Award', 'Blimp Award']
1459	simpson_episodes||Award||award: the name of the award
1460	simpson_episodes||Award||person: the person who gets the award. [None, 'Marc Wilmore', 'Ian Maxtone-Graham', 'Billy Kimball', 'John Frink', 'Tim Long']
1461	simpson_episodes||Award||role: the role of the honoree. [None, 'co-executive producer', 'executive producer', 'writer', 'animation producer', 'supervising director']
1462	simpson_episodes||Award||episode_id: episode id. S stands for 'Season' and E stands for 'Episode'. [None, 'S20-E13', 'S20-E7', 'S20-E8', 'S20-E17', 'S20-E16']
1463	simpson_episodes||Award||season: the season of the awarded work
1464	simpson_episodes||Award||song: the theme song of the awarded work
1465	simpson_episodes||Award||result: the final award result. ['Nominee', 'Winner']. commonsense evidence:  Nominee: the prospective recipient of the award. The nominee are people who were nominated but didn't win the award.   Winner: the people who finally won the award
1466	simpson_episodes||Character_Award||award_id: award id. A unique identifier for the award. [327, 326, 325]
1467	simpson_episodes||Character_Award||character: the name of the awarded character. ['Smithers', 'Mr. Burns', 'Moe Szyslak', 'Lenny', 'Kent Brockman']
1468	simpson_episodes||Credit||episode_id: episode id. A unique identifier for episodes. ['S20-E14', 'S20-E20', 'S20-E19', 'S20-E11', 'S20-E13']
1469	simpson_episodes||Credit||category: the category of the credit. ['Animation Department', 'Produced by', 'Cast', 'Other crew', 'Sound Department']
1470	simpson_episodes||Credit||person: the name of cast and crew members. ['Dan Castellaneta', 'Hank Azaria', 'Matt Groening', 'Harry Shearer', 'Tress MacNeille']
1471	simpson_episodes||Credit||role: the role of the person
1472	simpson_episodes||Credit||credited: whether the person is credited. ['true', 'false']. true/ false commonsense evidence:  true: The person is included in the credit list  false: The person isn't included in the credit list
1473	simpson_episodes||Keyword||episode_id: episode id. A unique identifier for episodes. ['S20-E1', 'S20-E4', 'S20-E8', 'S20-E13', 'S20-E11']
1474	simpson_episodes||Keyword||keyword: the keywords of episode. ['1930s to 2020s', '2d animation', 'male bonding', 'leprechaun', 'facebook']
1475	simpson_episodes||Vote||episode_id: episode id. A unique identifier for episodes. ['S20-E9', 'S20-E8', 'S20-E7', 'S20-E6', 'S20-E5']
1476	simpson_episodes||Vote||stars: the star score of the episode. [10, 9, 8, 7, 6]. 1-10 commonsense evidence: Star classification is a type of rating scale. The lowest star is 1 which means the worst, and the highest star is 10 which means the best.
1477	simpson_episodes||Vote||votes: the number of votes of the star score
1478	simpson_episodes||Vote||percent: the percent of the vote number of the star score. commonsense evidence: percent = the number of votes for the star / the total amount of votes for all stars
1479	student_loan||bool||name: . ['neg', 'pos']
1480	student_loan||person||name: student's name. ['student1', 'student10', 'student100', 'student1000', 'student101']
1481	student_loan||disabled||name: the name of the disabled students. ['student114', 'student125', 'student142', 'student155', 'student156']
1482	student_loan||enlist||name: the name of the enlisted students. ['student985', 'student876', 'student854', 'student839', 'student714']
1483	student_loan||enlist||organ: organization. the organization that the student enlisted in. ['fire_department', 'navy', 'army', 'peace_corps', 'marines']
1484	student_loan||filed_for_bankrupcy||name: . ['student122', 'student126', 'student136', 'student145', 'student148']
1485	student_loan||longest_absense_from_school||name: student's name. ['student1', 'student10', 'student100', 'student1000', 'student101']
1486	student_loan||longest_absense_from_school||month: the duration of absence. [4, 5, 3, 0, 7]. commonsense evidence: 0 means that the student has never been absent.
1487	student_loan||male||name: student's name who are male. ['student1', 'student101', 'student102', 'student103', 'student105']. commonsense evidence: the students who are not in this list are female.
1488	student_loan||no_payment_due||name: student's name. ['student1', 'student10', 'student100', 'student1000', 'student101']
1489	"student_loan||no_payment_due||bool: whether the student has payment dues. ['pos', 'neg']. commonsense evidence: 	neg: the student doesn't have payment due 	pos: the student has payment due"
1490	student_loan||unemployed||name: student who is unemployed. ['student1000', 'student102', 'student106', 'student109', 'student118']
1491	student_loan||enrolled||name: . ['student10', 'student1000', 'student101', 'student104', 'student107']
1492	student_loan||enrolled||school: . ['occ', 'ucla', 'uci', 'smc', 'ucsd']
1493	student_loan||enrolled||month: 
1494	mental_health_survey||Question||questiontext: question text. The detailed text of the question.
1495	mental_health_survey||Question||questionid: question id. The unique id of the question.. Each questiontext can only have one unique questionid
1496	mental_health_survey||Survey||SurveyID: Survey ID. The unique id of each survey. [2014, 2016, 2017, 2018, 2019]. commonsense evidence:  Each SurveyID is unique. And SurveyID is simply survey year ie 2014, 2016, 2017, 2018, 2019.
1497	mental_health_survey||Survey||Description: The Description of the specific survey.. ['mental health survey for 2019', 'mental health survey for 2018', 'mental health survey for 2017', 'mental health survey for 2016', 'mental health survey for 2014']
1498	mental_health_survey||Answer||AnswerText: Answer Text. The specific and detailed answer text of each question.. The content is highly depend on the question.
1499	mental_health_survey||Answer||SurveyID: Survey ID. The id of each survey.. [2016, 2017, 2014, 2018, 2019]. The SurveyID is simply survey year i.e., 2014, 2016, 2017, 2018, 2019.
1500	mental_health_survey||Answer||UserID: User ID. The id of different user.. commonsense evidence:  Some questions can contain multiple answers, thus the same user can appear more than once for that QuestionID.
1501	mental_health_survey||Answer||QuestionID: Question ID. The id of different questions.. commonsense evidence:  Some questions can contain multiple answers, thus the same user can appear more than once for that QuestionID.
1502	disney||characters||movie_title: movie title. unique title of the movie. ['Aladdin', 'Alice in Wonderland', 'Atlantis: The Lost Empire', 'Bambi', 'Beauty and the Beast']
1503	disney||characters||release_date: release date. The release date of the movie.. ['8-Nov-73', '7-Nov-14', '7-Feb-40', '6-Feb-43', '5-Oct-49']
1504	disney||characters||hero: The main character of the movie.. [None, 'Winnie the Pooh', 'Donald Duck', 'Bernard and Miss Bianca', 'Tod and Copper', 'Tiana']. commonsense evidence:  round role
1505	disney||characters||villian: The villain of the movie.. [None, 'Yzma', 'Willie the Giant', 'Ursula', 'Turbo', 'Sykes']. a character whose evil actions or motives are important to the plot.
1506	"disney||characters||song: A song associated with the movie.. [None, ""You'll Be in My Heart"", 'You Can Fly!', 'Winnie the Pooh\n', 'Winnie the Pooh', 'Where the Dream Takes You']"
1507	disney||director||name: unique movie name. ['101 Dalmatians', 'Aladdin', 'Alice in Wonderland', 'Atlantis: The Lost Empire', 'Bambi']
1508	disney||director||director: the name of the director. ['Wolfgang Reitherman', 'Ron Clements', 'Jack Kinney', 'Gary Trousdale', 'Clyde Geronimi']. one director may have multiple movies.  more movies --> this director is more productive
1509	disney||movies_total_gross||movie_title: movie title. ['The Jungle Book', '101 Dalmatians', 'Bad Company', 'Cinderella', 'Freaky Friday']
1510	disney||movies_total_gross||release_date: release date. ['Dec 25, 1997', 'Sep 27, 2002', 'Sep 18, 1992', 'Oct 20, 2006', 'Oct 13, 1995']
1511	disney||movies_total_gross||genre: genre of the movie. ['Comedy', 'Adventure', 'Drama', 'Action', 'Thriller/Suspense']
1512	"disney||movies_total_gross||MPAA_rating: Motion Picture Association of America rating. Motion Picture Association of America of the disney movie. ['PG', 'PG-13', 'R', 'G', 'Not Rated']. commonsense evidence: â¢ G: general audience â¢ PG: mature audiences or parental guidance suggested â¢ R: restricted: no children under 17 allowed without parents or adult guardians â¢ PG-13: PARENTS STRONGLY CAUTIONED. Some material may be inappropriate for children under 13 movies need accompany with parents: PG, PG-13, PG-17; if ""Not rated"" or null, it means this film can show only gets permissions by theatre management if the film can show without need of permissions of theatre management, the MPAA_rating should not be ""Not rated"" or null"
1513	disney||movies_total_gross||total_gross: total gross. The total gross of the movie.. ['$0', '$99,967,670', '$99,112,101', '$97,822,171', '$97,387,965']. commonsense evidence: more total_gross--> more popular movie
1514	disney||movies_total_gross||inflation_adjusted_gross: inflation adjusted gross. The inflation-adjusted gross of the movie.. ['$0', '$98,067,733', '$97,356,578', '$96,971,361', '$95,208,344']. commonsense evidence: estimated inflation rate = inflation_adjusted_gross / total_gross; the current gross = inflation_adjusted_gross
1515	disney||revenue||Year: The year the movie was released.
1516	disney||revenue||Studio Entertainment[NI 1]: The studio entertainment segment of the Walt Disney Company.
1517	disney||revenue||Disney Consumer Products[NI 2]: The consumer products segment of the Walt Disney Company.
1518	disney||revenue||Disney Interactive[NI 3][Rev 1]: The interactive segment of the Walt Disney Company.
1519	disney||revenue||Walt Disney Parks and Resorts: The parks and resorts segment of the Walt Disney Company.
1520	disney||revenue||Disney Media Networks: The media networks segment of the Walt Disney Company.. [None, '9733', '9615', '9569', '7512', '7142']
1521	disney||revenue||Total: The total box office gross for the movie.
1522	disney||voice-actors||character: The unique name of the character.. ['Abby Mallard', 'Abigail Gabble', 'Abis Mal', 'Abu', 'Achilles']
1523	"disney||voice-actors||voice-actor: The name of the voice actor.. ['None', 'Frank Welker', 'Jim Cummings', 'Jeff Bennett', ""J. Pat O'Malley""]"
1524	disney||voice-actors||movie: The name of the movie.. ['DuckTales', 'Zootopia', 'Hercules', 'Wreck-It Ralph', 'The Little Mermaid']
1525	legislator||current||ballotpedia_id: ballotpedia id. The ballotpedia.org page name for the person (spaces are given as spaces, not underscores).. commonsense evidence: if this value is null or empty, it means this legislator doesn't have account on ballotpedia.org
1526	legislator||current||bioguide_id: bioguide id. The alphanumeric ID for this legislator. ['A000055', 'A000360', 'A000367', 'A000369', 'A000370']
1527	legislator||current||birthday_bio: birthday bio. The legislator's birthday,. [None, '1966-03-01']. in YYYY-MM-DD format.
1528	legislator||current||cspan_id: cspan id. The numeric ID for this legislator on C-SPAN's video website,. commonsense evidence: if this value is null or empty, it means this legislator doesn't have account on C-SPAN's video website
1529	"legislator||current||fec_id: fec id. A list of IDs for this legislator in Federal Election Commission data.. [None, ""['S8WA00194', 'H2WA01054']"", ""['S8OR00207']"", ""['S8NY00082', 'H0NY16010']"", ""['S8MS00055']"", ""['S8MN00438']""]. commonsense evidence: if this value is null or empty, it means this legislator hasn't not been registered in Federal Election Commission data."
1530	legislator||current||first_name: first name. first name of the legislator. ['John', 'David', 'Tom', 'Mike', 'Steve']
1531	legislator||current||gender_bio: gender bio. gender of the legislator. ['M', 'F']
1532	legislator||current||google_entity_id_id: google entity id. [None, 'kg:/m/0z6rww4', 'kg:/m/0x0fzkk', 'kg:/m/0wy0mz5', 'kg:/m/0wqdmcm', 'kg:/m/0wklff5']. commonsense evidence: if this value is null or empty, it means this legislator are not google entities
1533	legislator||current||govtrack_id: govtrack id. The numeric ID for this legislator on GovTrack.us. commonsense evidence: if this value is null or empty, it means this legislator doesn't have account on GovTrack.us
1534	legislator||current||house_history_id: house history id. The numeric ID for this legislator on http://history.house.gov/People/Search/. commonsense evidence: The ID is present only for members who have served in the U.S. House.
1535	legislator||current||icpsr_id: interuniversity consortium for political and social research id. The numeric ID for this legislator in Keith Poole's VoteView.com website, originally based on an ID system by the Interuniversity Consortium for Political and Social Research (stored as an integer).. commonsense evidence: if this value is null or empty, it means this legislator doesn't have account on VoteView.com
1536	legislator||current||last_name: last name. last name of the legislator. ['Johnson', 'Smith', 'Scott', 'Young', 'Thompson']
1537	legislator||current||lis_id: legislator id. The alphanumeric ID for this legislator found in Senate roll call votes. [None, 'S391', 'S390', 'S389', 'S388', 'S387']. commonsense evidence: The ID is present only for members who attended in Senate roll call votes
1538	legislator||current||maplight_id: maplight id. The numeric ID for this legislator on maplight.org. commonsense evidence: if this value is null or empty, it means this legislator doesn't have account on maplight.org
1539	legislator||current||middle_name: middle name. the middle name of the legislator. [None, 'M.', 'J.', 'E.', 'A.', 'S.']
1540	legislator||current||nickname_name: nickname. nickname of the legislator. [None, 'Jim', 'Chuck', 'Pat', 'Mike', 'Ed']
1541	legislator||current||official_full_name: official full name. ['Zoe Lofgren', 'Yvette D. Clarke', 'Xavier Becerra', 'Wm. Lacy Clay', 'William R. Keating']
1542	legislator||current||opensecrets_id: opensecrets id. The alphanumeric ID for this legislator on OpenSecrets.org.. [None, 'N00038767', 'N00038450', 'N00038260', 'N00037031', 'N00037003']. commonsense evidence: if this value is null or empty, it means this legislator doesn't have account on OpenSecrets.org.
1543	legislator||current||religion_bio: religion bio. The legislator's religion.. [None, 'Roman Catholic', 'Baptist', 'Methodist', 'Catholic', 'Presbyterian']
1544	legislator||current||suffix_name: suffix name. [None, 'Jr.', 'III', 'II']
1545	legislator||current||thomas_id: thomas id. The numeric ID for this legislator on http://thomas.gov and http://beta.congress.gov.. commonsense evidence: if this value is null or empty, it means this legislator doesn't have account on both http://thomas.gov and http://beta.congress.gov.
1546	legislator||current||votesmart_id: votesmart id. The numeric ID for this legislator on VoteSmart.org. commonsense evidence: if this value is null or empty, it means this legislator doesn't have account on VoteSmart.org
1547	legislator||current||wikidata_id: wikidata id. the id for wikidata. [None, 'Q984509', 'Q984010', 'Q983537', 'Q983532', 'Q983428']
1548	legislator||current||wikipedia_id: wikipedia id. The Wikipedia page name for the person. [None, 'Zoe Lofgren', 'Yvette Clarke', 'Xavier Becerra', 'Will Hurd', 'Warren Davidson']. commonsense evidence: if a legislator has wikipedia id, it means he or she is famous or impact
1549	legislator||current-terms||address: the address of this legislator
1550	legislator||current-terms||bioguide: bioguide id. The alphanumeric ID for this legislator. ['C000714', 'Y000033', 'M000133', 'H000874', 'S000244']
1551	"legislator||current-terms||caucus: [None, 'Democrat']. For independents, the party that the legislator caucuses with, using the same values as the party field. Omitted if the legislator caucuses with the party indicated in the party field. When in doubt about the difference between the party and caucus fields, the party field is what displays after the legislator's name (i.e. ""(D)"") but the caucus field is what normally determines committee seniority. This field was added starting with terms for the 113th Congress."
1552	legislator||current-terms||chamber: [None, 'house', 'senate']. â¢ senate â¢ house
1553	legislator||current-terms||class: [None, 3.0, 2.0, 1.0]. For senators, their election class (1, 2, or 3).  commonsense evidence: only senator has class, if the value is null or empty, it means this legislator is not senator.
1554	legislator||current-terms||contact_form: contact form. The website URL of the contact page on the legislator's official website
1555	legislator||current-terms||district: For representatives, the district number they are serving from.  commonsense evidence: if null or empty, they are not representatives.
1556	legislator||current-terms||end: the end of the term. [None, '2019-01-03']. end: The date the term ended (because the Congress ended or the legislator died or resigned, etc.). End dates follow the Constitutional end of a term. Since 1935, terms begin and end on January 3 at noon in odd-numbered years, and thus a term end date may also be a term start date. Prior to 1935, terms began on March 4 and ended either on March 3 or March 4. The end date is the last date on which the legislator served this term. Unlike the start date, whether Congress was in session or not does not affect the value of this field.
1557	legislator||current-terms||fax: The fax number of the legislator's Washington, D.C. office. [None, '202-225-6942', '202-225-6798', '202-225-5933', '202-225-4987', '202-225-4975']. only valid if the term is current
1558	legislator||current-terms||last: the last known number. [None, 'Menendez']
1559	legislator||current-terms||name: . [None, 'William Oliver Lipinski', 'William Lacy Clay Sr.', 'Walter Beaman Jones Sr.', 'Thomas D?Alesandro Jr.', 'Theodore Frelinghuysen']. not useful
1560	legislator||current-terms||office: [None, '2108 Rayburn House Office Building', '516 Cannon House Office Building', '515 Cannon House Office Building', '513 Cannon House Office Building', '511 Cannon House Office Building']. only valid if the term is current, otherwise the last known office
1561	"legislator||current-terms||party: The political party of the legislator.. [None, 'Democrat', 'Republican', 'Independent']. commonsense evidence: If the legislator changed parties, this is the most recent party held during the term and party_affiliations will be set. Values are typically ""Democrat"", ""Independent"", or ""Republican"". The value typically matches the political party of the legislator on the ballot in his or her last election, although for state affiliate parties such as ""Democratic Farmer Labor"" we will use the national party name (""Democrat"") instead to keep the values of this field normalized."
1562	legislator||current-terms||party_affiliations: party affiliations. This field is present if the legislator changed party or caucus affiliation during the term.. The value is a list of time periods, with start and end dates, each of which has a party field and a caucus field if applicable, with the same meanings as the main party and caucus fields. The time periods cover the entire term, so the first start will match the term start, the last end will match the term end, and the last party (and caucus if present) will match the term party (and caucus).
1563	legislator||current-terms||phone: The phone number of the legislator's Washington, D.C. office. [None, '202-225-2836', '202-225-8901', '202-225-8885', '202-225-8351', '202-225-8273']. only valid if the term is current, otherwise the last known number
1564	legislator||current-terms||relation: . [None, 'son', 'daughter', 'wife', 'nephew', 'great nephew']. not useful
1565	legislator||current-terms||rss_url: Really Simple Syndication URL. The URL to the official website's RSS feed
1566	legislator||current-terms||start: The date legislative service began: the date the legislator was sworn in, if known, or else the beginning of the legislator's term.. [None, '2017-01-03']. Since 1935 regularly elected terms begin on January 3 at noon on odd-numbered years, but when Congress does not first meet on January 3, term start dates might reflect that swearing-in occurred on a later date. (Prior to 1935, terms began on March 4 of odd-numbered years, see here.)
1567	legislator||current-terms||state: state code. [None, 'CA', 'TX', 'NY', 'FL', 'IL']. commonsense evidence: AK: Alaska  AL: Alabama  AR: Arkansas  AZ: Arizona  CA: California  CO: Colorado  CT: Connecticut  DE: Delaware  FL: Florida  GA: Georgia  HI: Hawaii  IA: Iowa  ID: Idaho  IL: Illinois  IN: Indiana  KS: Kansas  KY: Kentucky  LA: Louisiana  MA: Massachusetts  MD: Maryland  ME: Maine  MI: Michigan  MN: Minnesota  MO: Missouri  MS: Mississippi  MT: Montana  NC: North Carolina  ND: North Dakota  NE: Nebraska  NH: New Hampshire  NJ: New Jersey 9 divisions of states in us: (please mention) https://www2.census.gov/geo/pdfs/maps-data/maps/reference/us_regdiv.pdf
1568	"legislator||current-terms||state_rank: state rank. whether they are the ""junior"" or ""senior"" senator. [None, 'senior', 'junior']. only valid if the term is current, otherwise the senator's rank at the time the term ended commonsense evidence: only senator has this value"
1569	legislator||current-terms||title: title of the legislator. [None, 'Majority Whip', 'Minority Whip', 'Minority Leader', 'Majority Leader', 'Speaker']
1570	"legislator||current-terms||type: The type of the term.. [None, 'rep', 'sen']. Either ""sen"" for senators or ""rep"" for representatives and delegates to the House"
1571	legislator||current-terms||url: The official website URL of the legislator. only valid if the term is current
1572	legislator||historical||ballotpedia_id: ballotpedia id. The ballotpedia.org page name for the person (spaces are given as spaces, not underscores).. [None, 'William Enyart', 'Vance McAllister', 'Trey Radel', 'Tom Petri', 'Tom Latham']. commonsense evidence: if this value is null or empty, it means this legislator doesn't have account on ballotpedia.org
1573	legislator||historical||bioguide_id: bioguide id. The alphanumeric ID for this legislator. ['A000001', 'A000002', 'A000003', 'A000004', 'A000005']
1574	"legislator||historical||bioguide_previous_id: bioguide previous id. The previous alphanumeric ID for this legislator. [None, ""['W000790']"", ""['L000266']"", ""['F000246']""]"
1575	legislator||historical||birthday_bio: birthday bio. The legislator's birthday,. [None, '1898-04-12']. in YYYY-MM-DD format.
1576	legislator||historical||cspan_id: cspan id. The numeric ID for this legislator on C-SPAN's video website,. [None, '95348.0', '95241.0', '95058.0', '94948.0', '92716.0']. commonsense evidence: if this value is null or empty, it means this legislator doesn't have account on C-SPAN's video website
1577	"legislator||historical||fec_id: fec id. A list of IDs for this legislator in Federal Election Commission data.. [None, ""['S8WI00026']"", ""['S8VA00107']"", ""['S8OH00011']"", ""['S8NV00073']"", ""['S8NM00010']""]. commonsense evidence: if this value is null or empty, it means this legislator hasn't not been registered in Federal Election Commission data."
1578	legislator||historical||first_name: first name. first name of the legislator. ['John', 'William', 'James', 'Thomas', 'Charles']
1579	legislator||historical||gender_bio: gender bio. gender of the legislator. ['M', 'F']
1580	legislator||historical||google_entity_id_id: google entity id. [None, 'kg:/m/0ywyyqz', 'kg:/m/0yp3l3w', 'kg:/m/0yp0gs4', 'kg:/m/0wk57s1', 'kg:/m/0rmg']. commonsense evidence: if this value is null or empty, it means this legislator are not google entities
1581	legislator||historical||govtrack_id: govtrack id. The numeric ID for this legislator on GovTrack.us. commonsense evidence: if this value is null or empty, it means this legislator doesn't have account on GovTrack.us
1582	legislator||historical||house_history_alternate_id: house history alternate id. The alternative numeric ID for this legislator. [None, '13283.0']
1583	legislator||historical||house_history_id: house history id. The numeric ID for this legislator on http://history.house.gov/People/Search/. commonsense evidence: The ID is present only for members who have served in the U.S. House.
1584	legislator||historical||icpsr_id: interuniversity consortium for political and social research id. The numeric ID for this legislator in Keith Poole's VoteView.com website, originally based on an ID system by the Interuniversity Consortium for Political and Social Research (stored as an integer).. commonsense evidence: if this value is null or empty, it means this legislator doesn't have account on VoteView.com
1585	legislator||historical||last_name: last name. last name of the legislator. ['Smith', 'Johnson', 'Williams', 'Wilson', 'Davis']
1586	legislator||historical||lis_id: legislator id. The alphanumeric ID for this legislator found in Senate roll call votes. [None, 'S371', 'S368', 'S367', 'S340', 'S339']. commonsense evidence: The ID is present only for members who attended in Senate roll call votes
1587	legislator||historical||maplight_id: maplight id. The numeric ID for this legislator on maplight.org. [None, '808.0', '806.0', '802.0', '796.0', '788.0']. commonsense evidence: if this value is null or empty, it means this legislator doesn't have account on maplight.org
1588	legislator||historical||middle_name: middle name. the middle name of the legislator. [None, 'Henry', 'William', 'Joseph', 'Edward', 'John']
1589	legislator||historical||nickname_name: nickname. nickname of the legislator. [None, 'Jim', 'Bill', 'Tom', 'Mike', 'Pete']
1590	legislator||historical||official_full_name: official full name. [None, 'William M. Cowan', 'William L. Owens', 'William L. Enyart', 'Wally Herger', 'W. Todd Akin']
1591	legislator||historical||opensecrets_id: opensecrets id. The alphanumeric ID for this legislator on OpenSecrets.org.. [None, 'N99999896', 'N00035854', 'N00035717', 'N00035688', 'N00035686']. commonsense evidence: if this value is null or empty, it means this legislator doesn't have account on OpenSecrets.org.
1592	legislator||historical||religion_bio: religion bio. The legislator's religion.. [None, 'Roman Catholic', 'Baptist', 'Methodist', 'Presbyterian', 'Catholic']
1593	legislator||historical||suffix_name: suffix name. [None, 'Jr.', 'III', 'Sr.', 'II', 'IV']
1594	legislator||historical||thomas_id: thomas id. The numeric ID for this legislator on http://thomas.gov and http://beta.congress.gov.. [None, '02260', '02257', '02240', '02234', '02200']. commonsense evidence: if this value is null or empty, it means this legislator doesn't have account on both http://thomas.gov and http://beta.congress.gov.
1595	legislator||historical||votesmart_id: votesmart id. The numeric ID for this legislator on VoteSmart.org. [None, '9680.0', '9674.0', '95759.0', '9531.0', '9490.0']. commonsense evidence: if this value is null or empty, it means this legislator doesn't have account on VoteSmart.org
1596	legislator||historical||wikidata_id: wikidata id. the id for wikidata. [None, 'Q999912', 'Q999881', 'Q998852', 'Q998327', 'Q997295']
1597	legislator||historical||wikipedia_id: wikipedia id. The Wikipedia page name for the person. [None, 'Zephaniah Swift', 'Zeno Scudder', 'Zeno J. Rives', 'Zell Miller', 'Zedekiah Kidwell']. commonsense evidence: if a legislator has wikipedia id, it means he or she is famous or impact
1598	legislator||historical-terms||address: the address of this legislator
1599	legislator||historical-terms||bioguide: bioguide id. The alphanumeric ID for this legislator. ['A000001', 'A000002', 'A000003', 'A000004', 'A000005']
1600	legislator||historical-terms||chamber: [None, 'house', 'senate']. â¢ senate â¢ house
1601	legislator||historical-terms||class: [None, 2.0, 1.0, 3.0]. For senators, their election class (1, 2, or 3).  commonsense evidence: only senator has class, if the value is null or empty, it means this legislator is not senator.
1602	legislator||historical-terms||contact_form: contact form. The website URL of the contact page on the legislator's official website
1603	legislator||historical-terms||district: For representatives, the district number they are serving from.  commonsense evidence: if null or empty, they are not representatives.
1604	legislator||historical-terms||end: the end of the term. ['1877-03-03']. end: The date the term ended (because the Congress ended or the legislator died or resigned, etc.). End dates follow the Constitutional end of a term. Since 1935, terms begin and end on January 3 at noon in odd-numbered years, and thus a term end date may also be a term start date. Prior to 1935, terms began on March 4 and ended either on March 3 or March 4. The end date is the last date on which the legislator served this term. Unlike the start date, whether Congress was in session or not does not affect the value of this field.
1605	legislator||historical-terms||fax: The fax number of the legislator's Washington, D.C. office. [None, '202-225-8398', '202-225-5615', '210-927-4903', '202-228-6363', '202-228-2563']. only valid if the term is current
1606	legislator||historical-terms||last: the last known number. [None, 'Levy', 'Lambert', 'Bono']
1607	legislator||historical-terms||middle: 
1608	legislator||historical-terms||name: . not useful
1609	legislator||historical-terms||office: [None, '1517 Longworth House Office Building', '1440 Longworth House Office Building', '1213 Longworth House Office Building', '1123 Longworth House Office Building', '521 Dirksen Senate Office Building']. only valid if the term is current, otherwise the last known office
1610	"legislator||historical-terms||party: The political party of the legislator.. [None, 'Democrat', 'Republican', 'Whig', 'Jackson', 'Federalist']. commonsense evidence: If the legislator changed parties, this is the most recent party held during the term and party_affiliations will be set. Values are typically ""Democrat"", ""Independent"", or ""Republican"". The value typically matches the political party of the legislator on the ballot in his or her last election, although for state affiliate parties such as ""Democratic Farmer Labor"" we will use the national party name (""Democrat"") instead to keep the values of this field normalized."
1611	legislator||historical-terms||party_affiliations: party affiliations. This field is present if the legislator changed party or caucus affiliation during the term.. The value is a list of time periods, with start and end dates, each of which has a party field and a caucus field if applicable, with the same meanings as the main party and caucus fields. The time periods cover the entire term, so the first start will match the term start, the last end will match the term end, and the last party (and caucus if present) will match the term party (and caucus).
1612	legislator||historical-terms||phone: The phone number of the legislator's Washington, D.C. office. [None, '202-225-9894', '202-225-8171', '202-225-5235', '202-225-4511', '202-225-3026']. only valid if the term is current, otherwise the last known number
1613	legislator||historical-terms||relation: . not useful
1614	legislator||historical-terms||rss_url: Really Simple Syndication URL. The URL to the official website's RSS feed
1615	legislator||historical-terms||start: The date legislative service began: the date the legislator was sworn in, if known, or else the beginning of the legislator's term.. [None, '1875-12-06']. Since 1935 regularly elected terms begin on January 3 at noon on odd-numbered years, but when Congress does not first meet on January 3, term start dates might reflect that swearing-in occurred on a later date. (Prior to 1935, terms began on March 4 of odd-numbered years, see here.)
1616	legislator||historical-terms||state: state code. [None, 'NY', 'PA', 'OH', 'IL', 'VA']. commonsense evidence: AK: Alaska  AL: Alabama  AR: Arkansas  AZ: Arizona  CA: California  CO: Colorado  CT: Connecticut  DE: Delaware  FL: Florida  GA: Georgia  HI: Hawaii  IA: Iowa  ID: Idaho  IL: Illinois  IN: Indiana  KS: Kansas  KY: Kentucky  LA: Louisiana  MA: Massachusetts  MD: Maryland  ME: Maine  MI: Michigan  MN: Minnesota  MO: Missouri  MS: Mississippi  MT: Montana  NC: North Carolina  ND: North Dakota  NE: Nebraska  NH: New Hampshire  NJ: New Jersey 9 divisions of states in us: (please mention) https://www2.census.gov/geo/pdfs/maps-data/maps/reference/us_regdiv.pdf
1617	"legislator||historical-terms||state_rank: state rank. whether they are the ""junior"" or ""senior"" senator. [None, 'junior', 'senior']. only valid if the term is current, otherwise the senator's rank at the time the term ended commonsense evidence: only senator has this value"
1618	legislator||historical-terms||title: title of the legislator. [None, 'Majority Leader', 'Speaker']
1619	"legislator||historical-terms||type: The type of the term.. [None, 'rep', 'sen']. Either ""sen"" for senators or ""rep"" for representatives and delegates to the House"
1620	legislator||historical-terms||url: The official website URL of the legislator. only valid if the term is current
1621	legislator||social-media||bioguide: The unique alphanumeric ID for this legislator. ['A000055', 'A000360', 'A000367', 'A000369', 'A000370']
1622	legislator||social-media||facebook: The username of the current official Facebook presence of the legislator.. [None, 'zoelofgren', 'usrepmikedoyle', 'tomcarper', 'timryan', 'susancollins']
1623	legislator||social-media||facebook_id: facebook id. The numeric ID of the current official Facebook presence of the legislator.
1624	legislator||social-media||govtrack: The numeric ID for this legislator on GovTrack.us
1625	legislator||social-media||instagram: The current official Instagram handle of the legislator.. [None, 'wydenpress', 'usrepgarypalmer', 'susanwbrooks', 'stevescalise', 'stevedaines']
1626	legislator||social-media||instagram_id: instagram id. The numeric ID of the current official Instagram handle of the legislator.
1627	legislator||social-media||thomas: The numeric ID for this legislator on http://thomas.gov and http://beta.congress.gov.
1628	legislator||social-media||twitter: The current official Twitter handle of the legislator.. [None, 'teammoulton', 'staceyplaskett', 'senthomtillis', 'sendavidperdue', 'reptrentkelly']
1629	legislator||social-media||twitter_id: twitter id. The numeric ID of the current official twitter handle of the legislator.
1630	legislator||social-media||youtube: The current official YouTube username of the legislator.. [None, 'witammybaldwin', 'vernbuchanan', 'tulsipress', 'timryanvision', 'stevekingia']
1631	legislator||social-media||youtube_id: youtube id. The current official YouTube channel ID of the legislator.. [None, 'UCzxqD7EY_Rdvbc0spbaYkJA', 'UCzt2pBxh0dI24kYrWretXRw', 'UCzlwBp7_m0t3f2UiFubvWgg', 'UCzj9-27Lr4gcqopmZAobXXg', 'UCzgrU5PT_HHRgf5hXPen4dQ']
1632	olympics||city||id: the unique identifier of the city
1633	olympics||city||city_name: city name. the name of the city. ['Vancouver', 'Torino', 'Tokyo', 'Sydney', 'Stockholm']
1634	olympics||games||id: the unique identifier of the game
1635	olympics||games||games_year: games year. the year of the game
1636	olympics||games||games_name: games name. the name of the game. ['2016 Summer', '2014 Winter', '2012 Summer', '2010 Winter', '2008 Summer']. commonsense evidence: games_name is 'games_year season'
1637	olympics||games||season: the season of the game. ['Summer', 'Winter']. commonsense evidence: The Olympics are held every four years and include both summer and winter games. The summer games include a wide range of sports, such as athletics, swimming, and gymnastics, while the winter games feature sports that are played on ice or snow, such as ice hockey, figure skating, and skiing.
1638	olympics||games_city||games_id: games id. the id of the game Maps to games(id)
1639	olympics||games_city||city_id: city id. the id of the city that held the game Maps to city(id)
1640	olympics||medal||id: the unique identifier of the metal. [1, 2, 3, 4]
1641	olympics||medal||medal_name: medal name. the name of the medal. ['Silver', 'NA', 'Gold', 'Bronze']
1642	olympics||noc_region||id: the unique identifier of the noc region
1643	olympics||noc_region||noc: the NOC code of the region. ['ZIM', 'ZAM', 'YUG', 'YMD', 'YEM']. commonsense evidence: A NOC code is a number used by the International Olympic Committee (IOC) to identify each of the national Olympic committees (NOCs) from around the world.
1644	olympics||noc_region||region_name: region name. the name of the region. ['Singapore', 'Zimbabwe (Rhodesia)', 'Zimbabwe', 'Zambia', 'Yugoslavia']
1645	olympics||person||id: the unique identifier of the person
1646	olympics||person||full_name: full name. the full name of the person. commonsense evidence: A person's full name is the complete name that they are known by, which typically includes their first name, middle name (if applicable), and last name.
1647	olympics||person||gender: the gender of the person. ['M', 'F']. commonsense evidence: M stands for male and F stands for female.
1648	olympics||person||height: the height of the person
1649	olympics||person||weight: the weight of the person. commonsense evidence: The unit of height is cm, and the unit of weight is kg. If the height or the weight of the person is 0, it means his/her height or weight is missing.
1650	olympics||games_competitor||id: the unique identifier of the record
1651	olympics||games_competitor||games_id: games id. the id of the game Maps to games(id)
1652	olympics||games_competitor||person_id: person id. the id of the person Maps to person(id). commonsense evidence: The times a person participated in the Olympics games could be calculated by grouping by person_id.
1653	olympics||games_competitor||age: the age of the person when he/she participated in the game. commonsense evidence: If person A's age was 22 when he participated in game A and his age was 24 when he participated in game B, it means that game A was held two years earlier than game B.
1654	olympics||person_region||person_id: person id. the id of the person Maps to person(id)
1655	olympics||person_region||region_id: region id. the id of the noc region Maps to noc_region(id)
1656	olympics||sport||id: the unique identifier of the sport
1657	olympics||sport||sport_name: sport name. the name of the sport. ['Wrestling', 'Weightlifting', 'Water Polo', 'Volleyball', 'Tug-Of-War']
1658	olympics||event||id: the unique identifier of the event
1659	olympics||event||sport_id: sport id. the id of the sport Maps to sport(id). commonsense evidence: There may be different events for the same sport in Olympics.
1660	olympics||event||event_name: event name. the name of the event
1661	olympics||competitor_event||event_id: event id. the id of the event Maps to event(id)
1662	olympics||competitor_event||competitor_id: competitor id. the id of the competitor Maps to games_competitor(id). commonsense evidence: The number of competitors who participated in a specific event could be calculated by grouping by event_id.
1663	olympics||competitor_event||medal_id: medal id. the id of the medal Maps to medal(id). [4, 1, 3, 2]. commonsense evidence: For a specific event, the competitor whose medal_id = 1 is the champion, the competitor whose medal_id = 2 is the runner-up, and the competitor whose medal_id = 3 got third place.
1664	address||CBSA||CBSA: the code of the cbsa officer
1665	address||CBSA||CBSA_name: cbsa name. the name and the position of the cbsa officer. ['Zanesville, OH', 'Youngstown-Warren-Boardman, OH-PA', 'York-Hanover, PA', 'Yauco, PR', 'Worcester, MA-CT']
1666	address||CBSA||CBSA_type: cbsa type. the office type of the officer. ['Micro', 'Metro']
1667	address||state||abbreviation: the abbreviation of the state name. ['AA', 'AE', 'AK', 'AL', 'AP']
1668	address||state||name: the state name. ['Wyoming', 'Wisconsin', 'West Virginia', 'Washington', 'Virginia']
1669	address||congress||cognress_rep_id: congress representative id. the representative id of congress representatives. ['AK', 'AK-S1', 'AK-S2', 'AL-1', 'AL-2']
1670	address||congress||first_name: first name. the first name of the congress representative. ['Johnson', 'Smith', 'Scott', 'Miller', 'Thompson']
1671	address||congress||last_name: last name. the last name of the congress representative. ['John', 'Mike', 'Tom', 'Jim', 'Steve']
1672	address||congress||CID: the unique identifier for the congress representative. ['N00036154', 'N00036013', 'N00035854', 'N00035717', 'N00035686']
1673	address||congress||party: the party of the representative. ['Republican', 'Democrat', 'Independent']
1674	address||congress||state: the state that the representative is from. ['California', 'Texas', 'New York', 'Florida', 'Pennsylvania']
1675	address||congress||abbreviation: the abbreviation of the state. ['CA', 'TX', 'NY', 'FL', 'PA']
1676	address||congress||House: the house that the representative is from. ['House of Repsentatives', 'Senate']
1677	address||congress||District: the id of the district that the representative represents. commonsense evidence: The state is divided into different districts. The districts under the same state will be numbered uniformly.   'NA' means that the state is not divided into districts.
1678	address||congress||land_area: land area. the land area of the district
1679	address||zip_data||zip_code: zip code. the zip code of the postal point
1680	address||zip_data||city: the city where the postal point locates. ['Washington', 'APO', 'FPO', 'Houston', 'New York']
1681	address||zip_data||state: the state of the city. ['TX', 'CA', 'PA', 'NY', 'IL']
1682	address||zip_data||multi_county: multi country. whether the country that the city belongs to is multi_country. ['No', 'Yes']. commonsense evidence: The meaning of multi_country is consisting of or involving multiple countries.
1683	address||zip_data||type: the type of the postal point. ['Post Office', 'P.O. Box Only', 'Unique Post Office', 'Non Postal Community Name', 'Branch']
1684	address||zip_data||organization: the organization to which the postal point belongs. commonsense evidence: 'No data' means the postal point is not affiliated with any organization
1685	address||zip_data||time_zone: time zone. the time zone of the postal point location. [None, 'Eastern', 'Central', 'Pacific', 'Mountain', 'Atlantic']
1686	address||zip_data||daylight_savings: daylight savings. whether the location implements daylight savings. ['Yes', 'No']. commonsense evidence: Daylight saving is the practice of advancing clocks (typically by one hour) during warmer months so that darkness falls at a later clock time. As a result, there is one 23-hour day in late winter or early spring and one 25-hour day in autumn.
1687	address||zip_data||latitude: the latitude of the postal point location
1688	address||zip_data||longitude: the longitude of the postal point location
1689	address||zip_data||elevation: the elevation of the postal point location
1690	address||zip_data||state_fips: state fips. state-level FIPS code
1691	address||zip_data||county_fips: country fips. country-level FIPS code. commonsense evidence: FIPS codes are numbers that uniquely identify geographic areas. The number of digits in FIPS codes varies depending on the level of geography.
1692	address||zip_data||region: the region where the postal point locates. [None, 'South', 'Midwest', 'Northeast', 'West']
1693	address||zip_data||division: the division of the organization. [None, 'South Atlantic', 'East North Central', 'West North Central', 'Middle Atlantic', 'West South Central']
1694	address||zip_data||population_2020: population 2020. the population of the residential area in 2020. commonsense evidence: 'No data' means that the postal point is not affiliated with any organization. Or the organization has no division.
1695	address||zip_data||population_2010: population 2010. the population of the residential area in 2010
1696	address||zip_data||households: the number of the households in the residential area
1697	address||zip_data||avg_house_value: average house value. the average house value in the residential area
1698	address||zip_data||avg_income_per_household: average income per household. the average income per household in the residential area
1699	address||zip_data||persons_per_household: persons per household. the number of persons per household residential area
1700	address||zip_data||white_population: white population. the population of white people in the residential area
1701	address||zip_data||black_population: black population. the population of black people in the residential area
1702	address||zip_data||hispanic_population: Hispanic population. the population of Hispanic people in the residential area
1703	address||zip_data||asian_population: Asian population. the population of Asian people in the residential area
1704	address||zip_data||american_indian_population: American Indian population. the population of American Indian people in the residential area
1705	address||zip_data||hawaiian_population: Hawaiian population. the population of Hawaiian people in the residential area
1706	address||zip_data||other_population: other population. the population of other races in the residential area
1707	address||zip_data||male_population: male population. the population of males in the residential area
1708	address||zip_data||female_population: female population. the population of females in the residential area
1709	address||zip_data||median_age: median age. the median age of the residential area. commonsense evidence: gender ratio in the residential area = male_population / female_population if female_population != 0
1710	address||zip_data||male_median_age: male median age. the male median age in the residential area
1711	address||zip_data||female_median_age: female median age. the female median age in the residential area
1712	address||zip_data||residential_mailboxes: residential mailboxes. the number of residential mailboxes in the residential area
1713	address||zip_data||business_mailboxes: business mailboxes. the number of business mailboxes in the residential area
1714	address||zip_data||total_delivery_receptacles: total delivery receptacles. the total number of delivery receptacles
1715	address||zip_data||businesses: the number of businesses in the residential area
1716	address||zip_data||1st_quarter_payroll: 1st quarter payroll. the total wages reported in the 1st quarter payroll report of the residential area
1717	address||zip_data||annual_payroll: annual payroll. the total wages reported in the annual payroll report of the residential area
1718	address||zip_data||employees: the number of employees in the residential area. commonsense evidence: Employers must submit periodic payroll reports to the Internal Revenue Service and state taxing authority. The report is used by employers to report wage information.
1719	address||zip_data||water_area: water area. the water area of the residential area
1720	address||zip_data||land_area: land area. the land area of the residential area
1721	address||zip_data||single_family_delivery_units: single-family delivery units. the number of single-family delivery units in the residential area
1722	address||zip_data||multi_family_delivery_units: multi-family delivery units. the number of single-family delivery units in the residential area. commonsense evidence: A single-family unit can be described as a single unit that accommodates only one family or tenant at a time on rent.
1723	address||zip_data||total_beneficiaries: total beneficiaries. the total number of beneficiaries of the postal service. commonsense evidence: multi-family units are usually under a greater surface area with the capacity to accommodate more than one tenant or multiple families on rent at the same time
1724	address||zip_data||retired_workers: retired workers. the number of retired workers in the residential area
1725	address||zip_data||disabled_workers: disable workers. the number of disabled workers in the residential area
1726	address||zip_data||parents_and_widowed: parents and widowed. the number of parents and widowed in the residential area
1727	address||zip_data||spouses: the number of spouses in the residential area
1728	address||zip_data||children: the number of children in the residential area
1729	address||zip_data||over_65: over 65. the number of people whose age is over 65 in the residential area
1730	address||zip_data||monthly_benefits_all: monthly benefits all. all benefit payments by month. commonsense evidence: no. of over_65 can refer to elders. Higher means more elders  if the ratio: over_65 / children is higher: the aging is more serious.
1731	address||zip_data||monthly_benefits_retired_workers: monthly benefits retired workers. monthly benefit payments for retired workers. usd
1732	address||zip_data||monthly_benefits_widowed: monthly benefits widowed. monthly benefit payments for retired workers
1733	address||zip_data||CBSA: the code of the cbsa officer
1734	address||alias||zip_code: zip code. the zip code of the alias
1735	address||alias||alias: the alias of the city. ['Washington', 'APO', 'FPO', 'Houston', 'New York']
1736	address||area_code||zip_code: zip code. the zip code of the area
1737	address||area_code||area_code: area code. the code of the area
1738	address||avoid||zip_code: zip code. the zip code of the bad alias
1739	address||avoid||bad_alias: bad alias. the bad alias. ['Nyc', 'Ny', 'Manhattan', 'Ny City', 'New York City']
1740	address||country||zip_code: zip code. the zip code of the state in the country
1741	address||country||county: country. the country. ['JEFFERSON', 'WASHINGTON', 'LOS ANGELES', 'MONTGOMERY', 'FRANKLIN']
1742	address||country||state: the state of the country. [None, 'TX', 'CA', 'PA', 'NY', 'IL']
1743	address||zip_congress||zip_code: zip code. the zip code of the district
1744	address||zip_congress||district: the district. ['WV-3', 'NE-3', 'ND', 'IA-4', 'KY-5']
1745	beer_factory||customers||CustomerID: customer id. the unique id for the customer
1746	beer_factory||customers||First: first name. the first name of the customer. ['Scott', 'Joyce', 'John', 'Bob', 'Mildred']
1747	beer_factory||customers||Last: last name. the last name of the customer. ['Anderson', 'Thomas', 'Smith', 'Ryan', 'Ross']
1748	beer_factory||customers||StreetAddress: street address. the address of the customer. ['9978 Glenleigh Ct', '9977 Twin Trails Dr', '9938 Longridge Way', '993 Lomax Ct', '9907 Dutton Way']
1749	beer_factory||customers||City: the city where the customer lives. ['Sacramento', 'Elk Grove', 'Folsom', 'Citrus Heights', 'Rancho Cordova']
1750	beer_factory||customers||State: the state code. ['CA']. commonsense evidence: please refer to https://www23.statcan.gc.ca/imdb/p3VD.pl?Function=getVD&TVD=53971  and mention its corresponding state name in the question. i.e. New York-- NY
1751	beer_factory||customers||ZipCode: zip code. the zip code
1752	beer_factory||customers||Email: the customer's email
1753	beer_factory||customers||PhoneNumber: phone number. the customer's phone number. ['(916) 996-4789', '(916) 994-3095', '(916) 992-8425', '(916) 992-5021', '(916) 992-2365']
1754	beer_factory||customers||FirstPurchaseDate: first purchase date. the first purchase date of the customer. ['2012-07-03']. yyyy-mm-dd
1755	beer_factory||customers||SubscribedToEmailList: subscribed to email list. whether the customer subscribe to the email list. ['TRUE', 'FALSE']. commonsense evidence:   'true' means the user permits the company to send regular emails to them.
1756	beer_factory||customers||Gender: the customer's gender. ['M', 'F']
1757	beer_factory||geolocation||LocationID: location id. the id of the location. [0, 1, 2]
1758	beer_factory||geolocation||Latitude: the latitude of the location. [38.566129, 38.559615, 0.0]
1759	beer_factory||geolocation||Longitude: the longitude of the location. [0.0, -121.42243, -121.426432]. commonsense evidence:  precise location / coordinate = POINT(latitude, longitude)
1760	beer_factory||location||LocationID: location id. the unique id for the location. [0, 1, 2]
1761	beer_factory||location||LocationName: location name. the name of the location. ['Sac State Union', 'Sac State American River Courtyard', 'LOST']
1762	beer_factory||location||StreetAddress: street address. the street address. [None, '6000 J St']
1763	beer_factory||location||City: the city where the location locates. [None, 'Sacramento']
1764	beer_factory||location||State: the state code. [None, 'CA']
1765	beer_factory||location||ZipCode: zip code. the zip code of the location. [None, 95819]
1766	beer_factory||rootbeerbrand||BrandID: brand id. the unique id for the brand
1767	"beer_factory||rootbeerbrand||BrandName: brand name. the brand name. [""Virgil's"", 'Thomas Kemper', 'Sprecher', ""Sparky's Fresh Draft"", 'River City']"
1768	beer_factory||rootbeerbrand||FirstBrewedYear: first brewed year. the first brewed year of the brand. commonsense evidence:  brand with earlier first brewed year has a much longer brewed history
1769	"beer_factory||rootbeerbrand||BreweryName: brewery name. the brewery name. ['Dr Pepper Snapple Group', 'Thomas Kemper Soda', ""The Dad's Root Beer Company "", 'Stewarts', 'Sprecher Brewery']"
1770	beer_factory||rootbeerbrand||City: the city where the brewery locates. [None, 'Chicago', 'St. Louis', 'Portland', 'San Francisco', 'Sacramento']
1771	beer_factory||rootbeerbrand||State: the state code. [None, 'CA', 'IL', 'WA', 'MO', 'LA']
1772	beer_factory||rootbeerbrand||Country: the country where the brewery locates. ['United States', 'Australia']. commonsense evidence:  can find its corresponding continent. e.g., U.S.--> North America
1773	beer_factory||rootbeerbrand||Description: the description of the brand
1774	beer_factory||rootbeerbrand||CaneSugar: cane sugar. whether the drink contains cane sugar. ['TRUE', 'FALSE']
1775	beer_factory||rootbeerbrand||CornSyrup: corn syrup. whether the drink contains the corn syrup. ['FALSE', 'TRUE']
1776	beer_factory||rootbeerbrand||Honey: whether the drink contains the honey. ['FALSE', 'TRUE']. commonsense evidence:  if the beer has honey, it means this beer is sweeter or has sweetness
1777	beer_factory||rootbeerbrand||ArtificialSweetener: artificial sweetener. whether the drink contains the artificial sweetener. ['FALSE', 'TRUE']. commonsense evidence:  if the beer has artificial sweetener, it means this beer is sweeter or has sweetness
1778	beer_factory||rootbeerbrand||Caffeinated: whether the drink is caffeinated. ['FALSE', 'TRUE']
1779	beer_factory||rootbeerbrand||Alcoholic: whether the drink is alcoholic. ['FALSE']
1780	beer_factory||rootbeerbrand||AvailableInCans: available in cans. whether the drink is available in cans. ['FALSE', 'TRUE']
1781	beer_factory||rootbeerbrand||AvailableInBottles: available in bottles. whether the drink is available in bottles. ['TRUE', 'FALSE']
1782	beer_factory||rootbeerbrand||AvailableInKegs: available in kegs. whether the drink is available in kegs. ['FALSE', 'TRUE']
1783	beer_factory||rootbeerbrand||Website: the website of the brand
1784	beer_factory||rootbeerbrand||FacebookPage: facebook page. the facebook page of the brand. commonsense evidence:  if not, it means this brand doesn't advertise on facebook
1785	beer_factory||rootbeerbrand||Twitter: the twitter of the brand. commonsense evidence:  if not, it means this brand doesn't advertise on twitter
1786	beer_factory||rootbeerbrand||WholesaleCost: wholesale cost. the wholesale cost
1787	beer_factory||rootbeerbrand||CurrentRetailPrice: current retail price. the current retail price. [3.0, 1.0, 44.0]. commonsense evidence:  The unit profit available to wholesalers = current retail price - wholesale cost
1788	beer_factory||rootbeer||RootBeerID: root beer id. the unique id for the root beer
1789	beer_factory||rootbeer||BrandID: brandid. the brand id
1790	beer_factory||rootbeer||ContainerType: container type. the type of the container. ['Bottle', 'Can']
1791	beer_factory||rootbeer||LocationID: location id. the location id of the selling company. [2, 1]
1792	beer_factory||rootbeer||PurchaseDate: purchase date. the purchase date of the root beer. ['2015-08-05']
1793	beer_factory||rootbeerreview||CustomerID: customer id. the id of the customer
1794	beer_factory||rootbeerreview||BrandID: brand id. the id of the brand
1795	beer_factory||rootbeerreview||StarRating: star rating. the star rating of the root beer. [4, 2, 3, 5, 1]. commonsense evidence:  root beer with higher star rating has higher market evaluation and acceptance
1796	beer_factory||rootbeerreview||ReviewDate: review date. the review date. ['2013-09-18']. yyyy-mm-dd
1797	beer_factory||rootbeerreview||Review: the specific review content
1798	beer_factory||transaction||TransactionID: transaction id. the unique id for the transaction
1799	beer_factory||transaction||CreditCardNumber: credit card number. the number of the credit card used for payment
1800	beer_factory||transaction||CustomerID: customer id. the customer id
1801	beer_factory||transaction||TransactionDate: transaction date. the transaction date. ['2015-10-01']. yyyy-mm-dd
1802	beer_factory||transaction||CreditCardType: credit card type. the credit card type. ['Visa', 'MasterCard', 'Discover', 'American Express']
1803	beer_factory||transaction||LocationID: location id. the location id of the selling company. [2, 1]
1804	beer_factory||transaction||RootBeerID: root beer id. the root beer id
1805	beer_factory||transaction||PurchasePrice: purchase price. the unit purchase price of the root beer. [3.0, 1.0]. us dollars
1806	sales||Customers||CustomerID: Customer ID. the unique id of the customer
1807	sales||Customers||FirstName: First Name. the customer's first name. ['Richard', 'Katherine', 'Marcus', 'Jennifer', 'James']
1808	sales||Customers||MiddleInitial: Middle Initial. the customer's middle initial. [None, 'A', 'L', 'M', 'J', 'C']
1809	sales||Customers||LastName: Last Name. the customer's last name. ['Diaz', 'Hernandez', 'Sanchez', 'Martinez', 'Torres']
1810	sales||Employees||EmployeeID: Employee ID. the unique id of the employee
1811	sales||Employees||FirstName: First Name. the employee's first name. ['Sylvia', 'Stearns', 'Sheryl', 'Reginald', 'Morningstar']
1812	sales||Employees||MiddleInitial: Middle Initial. the employee's middle initial. ['a', 'r', 'e', 'u', 't']
1813	sales||Employees||LastName: Last Name. the employee's last name. ['Ringer', 'del Castillo', 'Yokomoto', 'White', 'Stringer']
1814	sales||Products||ProductID: Product ID. the unique id of the product
1815	"sales||Products||Name: the product name. [""Women's Tights, S"", ""Women's Tights, M"", ""Women's Tights, L"", ""Women's Mountain Shorts, S"", ""Women's Mountain Shorts, M""]"
1816	sales||Products||Price: the price of the product. unit price commonsense evidence: if the price = 0.0, it means this product is free or a gift
1817	sales||Sales||SalesID: Sales ID. the unique id of the sales
1818	sales||Sales||SalesPersonID: SalesPerson ID. the unique id of the sale person
1819	sales||Sales||CustomerID: Customer ID. the unique id of the customer
1820	sales||Sales||ProductID: Product ID. the unique id of the product
1821	sales||Sales||Quantity: trading quantity. commonsense evidence: total price = quantity x Products' Price
1822	menu||Dish||id: unique id number indicating the dishes
1823	menu||Dish||name: the name of the dish
1824	menu||Dish||description: description of the dish. (no value)
1825	menu||Dish||menus_appeared: menus appeared. how many menus have this dish
1826	menu||Dish||times_appeared: times appeared. how many times this dish appears in the menu. commonsense evidence: if times_appeared > menus_appeard: this dish appeared in a menu more than once
1827	"menu||Dish||first_appeared: first appeared. the year that this dish appears first. commonsense evidence: 1.	the year outside of [1851, 2012], it means this data is not correct  2.	if this dish lasts longer (last_appeared - first_appeard), it means its history is long or historical / classical"
1828	"menu||Dish||last_appeared: last appeared. the year that this dish appears the last time. commonsense evidence: 1.	the year outside of [1851, 2012], it means this data is not correct 2.	if this dish lasts longer (last_appeared - first_appeard), it means its history is long or historical / classical"
1829	menu||Dish||lowest_price: lowest price. the lowest price of the dish. commonsense evidence: 0: for free
1830	menu||Dish||highest_price: highest price. the highest price of the dish
1831	menu||Menu||id: the unique number identifying the menu
1832	menu||Menu||name: the name of the menu. commonsense evidence:  if the value is not null or empty, it means this menu has special dishes.  otherwise, this menu is general and nothing special
1833	menu||Menu||sponsor: the sponsor of this menu. commonsense evidence:  if the value is null or empyt, it means this meanu is DIY by the restaurant.
1834	menu||Menu||event: the event that the menu was created for
1835	menu||Menu||venue: the venue that the menu was created for. [None, 'COMMERCIAL', 'SOC;', 'RESTAURANT', 'PROF;', 'COM']
1836	menu||Menu||place: the location that the menu was used. the location that the menu was used
1837	menu||Menu||physical_description: physical description. physical description of the menu
1838	menu||Menu||occasion: occasion of the menu
1839	menu||Menu||notes: 
1840	menu||Menu||call_number: call number. [None, '2006-0000', '1900-4269', '1899-806', '2008-0000', '1901-319']. commonsense evidence: if null: not support for taking out or booking in advance
1841	menu||Menu||keywords: not useful
1842	menu||Menu||language: not useful
1843	menu||Menu||date: the date that this menu was created. [None, '1915-01-01']
1844	menu||Menu||location: the location that the menu was used
1845	menu||Menu||location_type: location type. . not useful
1846	menu||Menu||currency: the currency that the menu was used. [None, 'Dollars', 'Deutsche Marks', 'Francs', 'Canadian Dollars', 'Swiss Francs']
1847	menu||Menu||currency_symbol: currency symbol. the currency symbol. [None, '$', 'DM', 'FF', 'C$', 'Fr']
1848	menu||Menu||status: status of the menu. ['complete']
1849	menu||Menu||page_count: page count. the number of pages of this menu
1850	menu||Menu||dish_count: dish count. the number of dishes of this menu
1851	menu||MenuPage||id: the unique id number indentifying the menupage
1852	menu||MenuPage||menu_id: menu id. the id of the menu
1853	menu||MenuPage||page_number: page number. the page number
1854	menu||MenuPage||image_id: image id. the id of the image
1855	menu||MenuPage||full_height: full height. full height of the menu page. (mm)
1856	menu||MenuPage||full_width: full width. full width of the menu page. (mm)
1857	menu||MenuPage||uuid: . ['d8ba80a0-ef9e-012f-faee-58d385a7b928', '550303c0-ef99-012f-e124-58d385a7b928', '42a8bbd0-e95a-012f-d75a-58d385a7bbd0', 'e7fa9710-ef9a-012f-6756-58d385a7b928', '676c8150-f464-012f-c7bc-58d385a7b928']
1858	menu||MenuItem||id: the unique id representing the menu item
1859	menu||MenuItem||menu_page_id: menu page id. the id of menu page
1860	menu||MenuItem||price: the price of this dish (menu item)
1861	menu||MenuItem||high_price: high price. high price of this dish
1862	menu||MenuItem||dish_id: dish id. the id of the dish
1863	menu||MenuItem||created_at: created at. the dates when the item was created. ['2011-04-29 02:04:21 UTC']
1864	menu||MenuItem||updated_at: updated at. the dates when the item was updated. ['2011-04-29 02:04:21 UTC']
1865	menu||MenuItem||xpos: x position. x-axis position of the dish in this menu page
1866	menu||MenuItem||ypos: y position. y-axis position of the dish in this menu page
1867	shipping||city||city_id: city id. unique identifier for the city
1868	shipping||city||city_name: city name. name of the city. ['Springfield', 'Lakewood', 'Bloomington', 'Wilmington', 'Westminster']
1869	shipping||city||state: state in which the city is. ['California', 'Texas', 'Florida', 'Illinois', 'Michigan']
1870	shipping||city||population: population of the city
1871	shipping||city||area: square miles the city covers. commonsense evidence:  population density (land area per capita) = area / population
1872	shipping||customer||cust_id: customer id. Unique identifier for the customer
1873	shipping||customer||cust_name: customer name. Business name of the customer. ['Ziebart', 'Whitakers', 'Vm & E Inc', 'Universal Products & Service', 'U-haul Co.']
1874	shipping||customer||annual_revenue: annual revenue. Annual revenue of the customer
1875	shipping||customer||cust_type: customer type. Whether the customer is a manufacturer or a wholes. ['manufacturer', 'retailer', 'wholesaler']
1876	shipping||customer||address: Physical street address of the customer. ['9409 Bustleton Avenue', '9263 Orco Parkway Suite E', '907 Hollywood Way', '90054 Prairie Road', '8810 Ih 10 East']
1877	shipping||customer||city: City of the customer's address. ['Portland', 'Knoxville', 'Jacksonville', 'Cleveland', 'San Diego']
1878	shipping||customer||state: State of the customer's address. ['CA', 'TX', 'FL', 'OR', 'TN']. commonsense evidence:  please mention its full name in the question, by referring to  https://www23.statcan.gc.ca/imdb/p3VD.pl?Function=getVD&TVD=53971 e.g., NY --> New York
1879	shipping||customer||zip: Postal code of the customer's address
1880	shipping||customer||phone: Telephone number to reach the customer. ['(972) 263-8080', '(972) 226-3893', '(970) 663-3398', '(970) 224-9618', '(954) 738-4000']
1881	shipping||driver||driver_id: driver id. Unique identifier for the driver
1882	shipping||driver||first_name: first name. First given name of the driver. ['Zachery', 'Sue', 'Roger', 'Maria', 'Leszek']
1883	shipping||driver||last_name: last name. Family name of the driver. ['Sims', 'Simons', 'Oneal', 'Nohr', 'Newell']. commonsense evidence: full name = first_name + last_name
1884	shipping||driver||address: Street address of the driver's home. ['842 E Trigg Ave', '749 E Mckellar Ave', '572 Delta Rd', '4089 Persimmon View Cv', '3649 Park Lake Dr']
1885	shipping||driver||city: City the driver lives in. ['Memphis']
1886	shipping||driver||state: State the driver lives in. ['TN']. commonsense evidence:  please mention its full name in the question, by referring to  https://www23.statcan.gc.ca/imdb/p3VD.pl?Function=getVD&TVD=53971  e.g., NY --> New York
1887	shipping||driver||zip_code: zip code. postal code of the driver's address. [38106, 38135, 38127, 38118, 38114]
1888	shipping||driver||phone: telephone number of the driver. ['(901) 948-1043', '(901) 948-0108', '(901) 947-4433', '(901) 789-7564', '(901) 774-6569']
1889	shipping||truck||truck_id: truck id. Unique identifier of the truck table
1890	shipping||truck||make: The brand of the truck. ['Mack', 'Peterbilt', 'Kenworth']. commonsense evidence:   Peterbilt headquarter: Texas (TX)   Mack headquarter: North Carolina (NC)   Kenworth headquarter: Washington (WA)  can ask question about headquarters of the truck
1891	shipping||truck||model_year: model year. The year the truck was manufactured. [2009, 2008, 2010, 2007, 2006]. commonsense evidence: The truck with earlier model year means this truck is newer.
1892	shipping||shipment||ship_id: ship id. Unique identifier of the shipment
1893	shipping||shipment||cust_id: customer id. A reference to the customer table that indicates which customer the shipment is for
1894	shipping||shipment||weight: The number of pounds being transported on the shipment
1895	shipping||shipment||truck_id: truck id. A reference to the truck table that indicates which truck is used in the shipment
1896	shipping||shipment||driver_id: driver id. A reference to the driver table that indicates which driver transported the goods in the shipment
1897	shipping||shipment||city_id: city id. A reference to the city table that indicates the destination of the shipment
1898	shipping||shipment||ship_date: ship date. the date the items were received by the driver. ['2017-10-10']. yyyy-mm-dd
1899	language_corpus||langs||lid: language id. [1]. commonsense evidence:  lid=1 means it's the Catalan language.
1900	language_corpus||langs||lang: language. language name. ['ca']. commonsense evidence:  ca means Catalan language.
1901	language_corpus||langs||locale: The locale of the language. ['ca_ES']
1902	language_corpus||langs||pages: total pages of Wikipedia in this language. [1129144]
1903	language_corpus||langs||words: total number of words in this pages. [2764996]
1904	language_corpus||pages||pid: page id. page id of Wikipedia about Catalan language
1905	language_corpus||pages||lid: language id. [1]. commonsense evidence:  lid=1 means it's Catalan language
1906	language_corpus||pages||page: wikipedia page id
1907	language_corpus||pages||revision: wikipedia revision page id
1908	language_corpus||pages||title: The title of this Catalan language Wikipedia page
1909	language_corpus||pages||words: number of different words in this page
1910	language_corpus||words||wid: word id. The word id of the Catalan language. The value is unique.
1911	language_corpus||words||word: The word itself
1912	language_corpus||words||occurrences: The occurrences of the specific word
1913	language_corpus||langs_words||lid: language id. [1]. commonsense evidence:  lid=1 means it's Catalan language.
1914	language_corpus||langs_words||wid: word id. The word id of the Catalan language
1915	language_corpus||langs_words||occurrences: repetitions of this word in this language. it's INTEGER and DEFAULT is 0.
1916	language_corpus||pages_words||pid: page id. page id of Wikipedia about Catalan language
1917	language_corpus||pages_words||wid: word id. The word id of the Catalan language. The value is unique.
1918	language_corpus||pages_words||occurrences: times of this word appears into this page
1919	language_corpus||biwords||lid: language id. [1]. commonsense evidence:  lid=1 means it's Catalan language.
1920	language_corpus||biwords||w1st: word id of the first word. The word id of the first word of the biwords pair.. The value is unique.
1921	language_corpus||biwords||w2nd: word id of the second word. The word id of the second word of the biwords pair.. The value is unique.
1922	language_corpus||biwords||occurrences: times of this pair appears in this language/page
1923	airline||Air Carriers||Code: the code of the air carriers
1924	airline||Air Carriers||Description: the description of air carriers
1925	airline||Airports||Code: IATA code of the air airports. ['01A', '03A', '04A', '05A', '06A']
1926	airline||Airports||Description: the description of airports
1927	airline||Airlines||FL_DATE: flight date. ['2018/8/3', '2018/8/2', '2018/8/6', '2018/8/10', '2018/8/9']
1928	airline||Airlines||OP_CARRIER_AIRLINE_ID: operator carrier airline id
1929	airline||Airlines||TAIL_NUM: tail number. plane's tail number. [None, 'N491HA', 'N477HA', 'N495HA', 'N489HA', 'N494HA']. plane's tail number
1930	airline||Airlines||OP_CARRIER_FL_NUM: operator carrier flight number
1931	airline||Airlines||ORIGIN_AIRPORT_ID: origin airport id
1932	airline||Airlines||ORIGIN_AIRPORT_SEQ_ID: origin airport sequence id
1933	airline||Airlines||ORIGIN_CITY_MARKET_ID: origin city market id
1934	airline||Airlines||ORIGIN: airport of origin. ['ORD', 'ATL', 'DFW', 'DEN', 'LAX']. commonsense evidence:   the origin city could be inferred by this code:  you can refer to https://www.iata.org/en/publications/directories/code-search/?airport.search=mia  to quickly check
1935	airline||Airlines||DEST_AIRPORT_ID: destination airport id. ID of the destination airport
1936	airline||Airlines||DEST_AIRPORT_SEQ_ID: destination airport sequence id. 
1937	airline||Airlines||DEST_CITY_MARKET_ID: destination city market id. 
1938	airline||Airlines||DEST: destination. Destination airport. ['ORD', 'ATL', 'DFW', 'DEN', 'LAX']. commonsense evidence:   the dest city could be inferred by this code:  you can refer to https://www.iata.org/en/publications/directories/code-search/?airport.search=mia  to quickly check
1939	airline||Airlines||CRS_DEP_TIME: scheduled local departure time. 
1940	airline||Airlines||DEP_TIME: departure time. Flight departure time. stored as the integer
1941	airline||Airlines||DEP_DELAY: Departure delay. Departure delay indicator. in minutes  commonsense evidence:   if this value is positive: it means this flight delays; if the value is negative, it means this flight departs in advance (-4)   if this value <= 0, it means this flight departs on time
1942	airline||Airlines||DEP_DELAY_NEW: departure delay new. not useful
1943	airline||Airlines||ARR_TIME: arrival time. Flight arrival time.
1944	airline||Airlines||ARR_DELAY: arrival delay. arrival delay time. in minutes  commonsense evidence:   if this value is positive: it means this flight will arrives late (delay); If the value is negative, this flight arrives earlier than scheduled. (-4)   if this value <= 0, it means this flight arrives on time
1945	airline||Airlines||ARR_DELAY_NEW: arrival delay new. not useful
1946	airline||Airlines||CANCELLED: Flight cancellation indicator.. [0, 1]
1947	airline||Airlines||CANCELLATION_CODE: cancellation code. [None, 'C', 'B', 'A']. commonsense evidence:  C--> A: more serious reasons lead to this cancellation
1948	airline||Airlines||CRS_ELAPSED_TIME: scheduled elapsed time
1949	airline||Airlines||ACTUAL_ELAPSED_TIME: actual elapsed time. commonsense evidence:  if ACTUAL_ELAPSED_TIME < CRS_ELAPSED_TIME: this flight is faster than scheduled;  if ACTUAL_ELAPSED_TIME > CRS_ELAPSED_TIME: this flight is slower than scheduled
1950	airline||Airlines||CARRIER_DELAY: carrier delay. minutes
1951	airline||Airlines||WEATHER_DELAY: weather delay. delay caused by the wheather problem. minutes
1952	airline||Airlines||NAS_DELAY: National Aviavtion System delay. delay, in minutes, attributable to the National Aviation System. minutes
1953	airline||Airlines||SECURITY_DELAY: security delay. delay attribute to security. minutes
1954	airline||Airlines||LATE_AIRCRAFT_DELAY: late aircraft delay. delay attribute to late aircraft. minutes
1955	books||address_status||status_id: status id. the unique identifier of the status. [1, 2]
1956	"books||address_status||address_status: address status. the status of the address. ['Inactive', 'Active']. commonsense evidence: 	active: the address is still in use 	inactive: the address is not in use anymore"
1957	books||author||author_id: author id. the unique identifier of the author
1958	books||author||author_name: author name. the name of the author
1959	books||book_language||language_id: language id. the unique identifier of the language
1960	"books||book_language||language_code: language code. the language code. ['zho', 'wel', 'tur', 'swe', 'srp']. commonsense evidence: A language code is a unique identifier for a specific language. It is typically used to identify a language in computing and other technical contexts. Some common language codes include ""en"" for English, ""fr"" for French, and ""es"" for Spanish. The specific codes used for each language can vary depending on the context and the system in which they are being used."
1961	books||book_language||language_name: language name. the language name. ['Welsh', 'United States English', 'Turkish', 'Swedish', 'Spanish']
1962	books||country||country_id: country id. the unique identifier of the country
1963	books||country||country_name: country name. the country name. ['Singapore', 'Zimbabwe (Rhodesia)', 'Zimbabwe', 'Zambia', 'Yugoslavia']
1964	books||address||address_id: address id. the unique identifier of the address
1965	books||address||street_number: street number. the street number of the address. ['5', '1', '4', '0', '9']. commonsense evidence: The street number is typically used to identify a specific building or residence on a street, with higher numbers generally indicating a location further down the street from the starting point. For example, if a street starts at number 1 and goes up to number 100, a building with the number 50 would be closer to the starting point than a building with the number 75.
1966	books||address||street_name: street name. the street name. ['Sauthoff Court', 'John Wall Crossing', 'Vahlen Way', 'Twin Pines Plaza', 'Trailsway Place']
1967	books||address||city: the city where the address belongs. ['Västerås', 'Dallas', 'Chengguan', 'Xinhua', 'Villeneuve-la-Garenne']
1968	books||address||country_id: country id. the id of the country where the address belongs. commonsense evidence: Maps to the country (country id). The full address of the customer is 'No.street_number street_name, city, country'
1969	books||customer||customer_id: customer id. the unique identifier of the customer
1970	books||customer||first_name: first name. the first name of the customer. ['Ardeen', 'Winifield', 'Whitney', 'Robinson', 'Natka']
1971	books||customer||last_name: last name. the last name of the customer. ['Adamec', 'Toombes', 'Theurer', 'Syers', 'Spohrmann']. commonsense evidence: A person's full name is the first name, middle name (if applicable), and last name.
1972	books||customer||email: the email of the customer
1973	books||customer_address||customer_id: customer id. the id of the customer Maps to customer(customer_id)
1974	books||customer_address||address_id: address id. the id of the address Maps to address(address_id)
1975	books||customer_address||status_id: status id. the id of the address status. [1, 2]. commonsense evidence: A customer may have several addresses. If a customer has several addresses, the address that the status_id = 1 is the customer's current address that is in use. The other addresses with 2 as status_id is abandoned addresses.
1976	books||order_status||status_id: status id. the unique identifier of the order status. [1, 2, 3, 4, 5]
1977	books||order_status||status_value: status value. the status value. ['Returned', 'Pending Delivery', 'Order Received', 'Delivery In Progress', 'Delivered']. commonsense evidence: The order statuses include order received, pending delivery, delivery in progress, delivered, canceled, and returned.
1978	books||publisher||publisher_id: publisher id. the unique identifier of the publisher
1979	books||publisher||publisher_name: publisher name. the name of the publisher
1980	books||book||book_id: book id. the unique identifier of the book
1981	books||book||title: the title of the book
1982	books||book||isbn13: the International Standard Book Number of the book. ['9790007672386', '9789998691568', '9789879397503', '9789875801448', '9789875661707']. commonsense evidence: An ISBN is a unique 13-digit number assigned to each book to identify it internationally. The ISBN13 of a book is the specific version of the ISBN that uses 13 digits. It is typically displayed on the back cover of a book, along with the barcode and other information.
1983	books||book||language_id: language id. the id of the book language Maps to book_language (language_id)
1984	books||book||num_pages: number pages. the number of the pages
1985	books||book||publication_date: publication date. the publication date of the book. ['2005-10-01']. commonsense evidence: The publication date of a book can provide information about when the book was released to the public. This can be useful for understanding the context in which the book was written, as well as for determining how current or outdated the information in the book might be. Additionally, the publication date can provide insight into the age of the book and its potential value as a collectible.
1986	books||book||publisher_id: publisher id. the id of the publisher Maps to publisher (publisher_id)
1987	books||book_author||book_id: book id. the id of the book Maps to book(book_id)
1988	books||book_author||author_id: author id. the id of the author Maps to author(author_id). commonsense evidence: Books with the same author id are written by the same author.
1989	books||shipping_method||method_id: method id. the unique identifier of the method. [1, 2, 3, 4]
1990	books||shipping_method||method_name: method name. the method name. ['Standard', 'Priority', 'International', 'Express']
1991	books||shipping_method||cost: the cost of the shipping method. [24.5, 11.9, 8.9, 5.9]. commonsense evidence: The main difference between the various shipping methods, such as standard, priority, express, and international, is the speed at which the item is delivered. Standard shipping is the slowest and least expensive option, while express and priority shipping are faster and more expensive. International shipping is for items that are being shipped to a destination outside of the country where they originated.
1992	books||cust_order||order_id: order id. the unique identifier of the customer order
1993	books||cust_order||order_date: order date. the date of the order. ['2022-10-02 09:42:39']
1994	books||cust_order||customer_id: customer id. the id of the customer Maps to customer(customer_Id). commonsense evidence: The number of orders ordered by the customer = the show-up times of the relative customer id in the table
1995	books||cust_order||shipping_method_id: shipping method id. the id of the shipping method Maps to shipping_method(method_id). [2, 3, 1, 4]
1996	books||cust_order||dest_address_id: destination address id. the id of the destination address Maps to address(address_id)
1997	books||order_history||history_id: history id. the unique identifier of the order history
1998	books||order_history||order_id: order id. the id of the order Maps to cust_order(order_id)
1999	books||order_history||status_id: status id. the id of the order Maps to order_status(status_id). [1, 2, 3, 4, 5]. commonsense evidence: The order statuses include order received, pending delivery, delivery in progress, delivered, canceled, and returned.
2000	books||order_history||status_date: status date. the date of the status updated. ['2022-10-26 12:31:51']
2001	books||order_line||line_id: line id. the unique identifier of the order line
2002	books||order_line||order_id: order id. the id of the order Maps to cust_order(order_id)
2003	books||order_line||book_id: book id. the id of the book Maps to book(book_id)
2004	books||order_line||price: the price of the order. commonsense evidence: Even though the customer ordered the book with the same book id, the price could be different. The price of the order may be influenced by the shipping method, seasonal discount, and the number of books the customer ordered.
2005	food_inspection_2||employee||employee_id: employee id. the unique id for the employee
2006	food_inspection_2||employee||first_name: first name. first name of the employee. ['Rosemary', 'Robert', 'Jessica', 'Donald', 'Zachary']
2007	food_inspection_2||employee||last_name: last name. last name of the employee. ['Kennedy', 'Holder', 'Coleman', 'William', 'Underwood']. commonsense evidence: full name: first name + last_name
2008	food_inspection_2||employee||address: physical street address of the employee. ['PO Box 546', '9118 S Oglesby Ave', '8957 S Justine St', '8633 S Yates Blvd', '860 W Blackhawk St Unit 1806']
2009	food_inspection_2||employee||city: city of the employee's address. ['Chicago', 'Park Forest', 'Hoffman Estates']
2010	food_inspection_2||employee||state: state of the customer's address. ['IL']
2011	food_inspection_2||employee||zip: postal code of the employee's address
2012	food_inspection_2||employee||phone: telephone number to reach the customer. ['(773) 907-7655', '(773) 907-3598', '(773) 891-8653', '(773) 891-5230', '(773) 891-4417']
2013	food_inspection_2||employee||title: career title of the employee. ['Sanitarian', 'Supervisor', 'Division Manager'].  Sanitarian   Supervisor   Division Manager
2014	food_inspection_2||employee||salary: the salary of the employee. us dollars / year commonsense evidence: monthly salary: salary / 12
2015	food_inspection_2||employee||supervisor: the employee id of the employee's supervisor. [186498, 179582, 186742, 182205, 177316]
2016	food_inspection_2||establishment||license_no: license number. the license number of the facility
2017	food_inspection_2||establishment||dba_name: doing business as name. the dba name of the facility. commonsense evidence: DBA stands for doing business as. It's also referred to as your business's assumed, trade or fictitious name.
2018	food_inspection_2||establishment||aka_name: as know as name. the aka name of the facility. [None, '7-ELEVEN', 'WALGREENS', 'SUBWAY', 'CITGO', 'STARBUCKS COFFEE']. commonsense evidence: the aka name is used to indicate another name that a person or thing has or uses
2019	"food_inspection_2||establishment||facility_type: facility type. the facility type. [None, 'Restaurant', 'Grocery Store', 'School', 'Daycare (2 - 6 Years)', 'Daycare Above and Under 2 Years']. commonsense evidence: can ask some questions about its categories, for i.e.:    ""Restaurant"" and ""Cafeteria"" refers to restaurants   PASTRY school and ""CULINARY ARTS SCHOOL"" belongs to ""Education"" or ""School"". Please design this and mention your evidence in the commonsense part of questions, thanks"
2020	food_inspection_2||establishment||risk_level: risk level. the risk level of the facility. [None, 1, 3, 2]. commonsense evidence: Facilities with higher risk level have more serious food safety issues
2021	food_inspection_2||establishment||address: physical street address of the facility. ['11601 W TOUHY AVE ', '324 N LEAVITT ST ', '2637 S THROOP ST ', '500 W MADISON ST ', '2300 S THROOP ST ']
2022	food_inspection_2||establishment||city: city of the facility's address. [None, 'CHICAGO', 'Chicago', 'chicago', 'MAYWOOD', 'CICERO ']
2023	food_inspection_2||establishment||state: state of the facility's address. [None, 'IL']
2024	food_inspection_2||establishment||zip: postal code of the facility's address
2025	food_inspection_2||establishment||latitude: the latitude of the facility
2026	food_inspection_2||establishment||longitude: the longitude of the facility. commonsense evidence: location = POINT(latitude, longitude)
2027	food_inspection_2||establishment||ward: the ward number of the facility. commonsense evidence: Ward number is the number assigned by the local authorities to identify the population count in each town, village and district usually for electoral purposes or to extract property and locality details
2028	food_inspection_2||inspection||inspection_id: inspection id. the unique id for the inspection
2029	food_inspection_2||inspection||inspection_date: inspection date. the date of the inspection. ['2013-11-14']. yyyy-mm-dd
2030	food_inspection_2||inspection||inspection_type: inspection type. the type of the inspection. [None, 'Canvass', 'License', 'Canvass Re-Inspection', 'Complaint', 'License Re-Inspection']
2031	food_inspection_2||inspection||results: the inspection results. ['Pass', 'Fail', 'Pass w/ Conditions', 'Out of Business', 'No Entry'].  Pass   Pass w/ Conditions   Fail   Out of Business   Business Not Located   No Entry   Not Ready  commonsense evidence: the quality is verified: Pass + Pass w/ Conditions
2032	food_inspection_2||inspection||employee_id: employee id. the id of the employee who is responsible for the inspection
2033	food_inspection_2||inspection||license_no: license number. the license number of the facility that is inspected
2034	food_inspection_2||inspection||followup_to: followup to. the id of inspections that this inspection is following up. commonsense evidence: 'No data' means the inspection has no followup. if followup_to has value:   it's the parent inspection id, and this value represents child inspection id    the entire inspection: followup_to + inspection_id
2035	food_inspection_2||inspection_point||point_id: point id. the unique id for the inspection point
2036	food_inspection_2||inspection_point||Description: the specific description of the inspection results
2037	food_inspection_2||inspection_point||category: the inspection category. ['Food Protection', 'Food Maintenance', 'Insect and Rodent Control', 'Food Equipment and Utensil', 'Wash and Waste Water Disposal']
2038	food_inspection_2||inspection_point||code: the sanitary operating requirement code. ['7-38-030, 015, 010 (A), 005 (A)', '7-38-005 (A)', '7-38-031', '7-38-030', '7-38-010 (A) (B)']. commonsense evidence: Each code stands for an operating requirement
2039	food_inspection_2||inspection_point||fine: the fines for food safety problems. [100, 250, 500]. commonsense evidence: The fine of more serious food safety problems will be higher.    Minor: 100    Serious: 250    Critical: 500
2040	food_inspection_2||inspection_point||point_level: point level. ['Minor   ', 'Serious ', 'Critical']. Critical / Serious/ Minor
2041	food_inspection_2||violation||inspection_id: inspection id. the unique id for the inspection
2042	food_inspection_2||violation||point_id: point id. the inspection point id
2043	food_inspection_2||violation||fine: the fine of the violation. [100, 0, 250, 500]. commonsense evidence: The fine of more serious food safety problems will be higher.   Minor: 100   Serious: 250   Critical: 500
2044	food_inspection_2||violation||inspector_comment: inspector comment. the comment of the inspector
2045	coinmarketcap||coins||id: unique id number identifying coins
2046	coinmarketcap||coins||name: name of coins
2047	coinmarketcap||coins||slug: slug names of coins
2048	coinmarketcap||coins||symbol: symbol of names of coins. ['WOW', 'WIN', 'UNI', 'SOUL', 'SCC']
2049	coinmarketcap||coins||status: status of coins. ['active', 'inactive', 'untracked', 'extinct']. commonsense reasoning:   active: this coin is active and available for transactions   untracked: this coin cannot be tracked   inactive: this coin is not available for transactions   extinct: this coin has been disappeared
2050	coinmarketcap||coins||category: category of coins. [None, 'token', 'coin']. commonsense reasoning:   token:    coin:
2051	coinmarketcap||coins||description: description of coins
2052	coinmarketcap||coins||subreddit: name of coins on reddit
2053	coinmarketcap||coins||notice: notice if any
2054	coinmarketcap||coins||tags: tags of coins
2055	coinmarketcap||coins||tag_names: tag names. tag names of coins
2056	coinmarketcap||coins||website: website introduction of coins
2057	coinmarketcap||coins||platform_id: platform id. id number of the platform
2058	coinmarketcap||coins||date_added: date added. the added date. ['2020-08-10T00:00:00.000Z', '2020-08-03T00:00:00.000Z', '2021-04-20T00:00:00.000Z', '2021-05-12T00:00:00.000Z', '2021-03-16T00:00:00.000Z']
2059	coinmarketcap||coins||date_launched: date lanched. lanched date. [None, '2021-05-31T00:00:00.000Z', '2021-04-30T00:00:00.000Z', '2021-05-10T00:00:00.000Z', '2021-05-14T00:00:00.000Z', '2021-05-09T00:00:00.000Z']
2060	coinmarketcap||historical||date: transaction date. ['2021-07-31']
2061	coinmarketcap||historical||coin_id: coin id. id number referring to coins
2062	coinmarketcap||historical||cmc_rank: coinmarketcap rank. CMC rank is a metric used by CoinMarketCap to rank the relative popularity of different cryptocurrencies.
2063	coinmarketcap||historical||market_cap: Market capitalization. Market capitalization refers to how much a coin is worth as determined by the coin market.. dollars market cap (latest trade price x circulating supply).
2064	coinmarketcap||historical||price: how much is a coin. dollars
2065	coinmarketcap||historical||open: the price at which a cryptocurrency (coin) opens at a time period. dollars commonsense reasoning: if null or empty, it means this coins has not opened yet today.
2066	coinmarketcap||historical||high: highest price. dollars
2067	"coinmarketcap||historical||low: lowest price. commonsense reasoning: 1.	It's the best time to purchase this coin 2.	users can make the max profit today by computation: high - low"
2068	coinmarketcap||historical||close: the price at which a cryptocurrency (coin) closes at a time period, for example at the end of the day.
2069	coinmarketcap||historical||time_high: time high. the time to achieve highest price. [None, '00:00:02', '00:00:01', '00:00:03', '00:00:04', '00:00:05']
2070	coinmarketcap||historical||time_low: time low. the time to achieve lowest price. [None, '00:00:01', '00:00:02', '00:00:03', '00:00:04', '00:00:05']
2071	coinmarketcap||historical||volume_24h: volume 24h. the total value of cryptocurrency coined traded in the past 24 hours.
2072	coinmarketcap||historical||percent_change_1h: percent change 1h. price percentage change in the first hour. The change is the difference (in percent) between the price now compared to the price around this time 1 hours ago
2073	coinmarketcap||historical||percent_change_24h: percent change 24h. price percentage change in the first 24 hours. The change is the difference (in percent) between the price now compared to the price around this time 24 hours ago
2074	coinmarketcap||historical||percent_change_7d: percent change 7d. price percentage change in the first 7 days. The change is the difference (in percent) between the price now compared to the price around this time 7 days ago
2075	coinmarketcap||historical||circulating_supply: circulating supply. the best approximation of the number of coins that are circulating in the market and in the general public's hands.
2076	coinmarketcap||historical||total_supply: total supply. the total amount of coins in existence right now
2077	coinmarketcap||historical||max_supply: max supply. Max Supply is the best approximation of the maximum amount of coins that will ever exist in the lifetime of the cryptocurrency.. commonsense reasoning: the number of coins verifiably burned so far = max_supply - total_supply
2078	coinmarketcap||historical||num_market_pairs: number market pairs. number of market pairs across all exchanges trading each currency.. commonsense reasoning: active coins that have gone inactive can easily be identified as having a num_market_pairs of 0
2079	retail_world||Categories||CategoryID: Category ID. the unique id for the category. [1, 2, 3, 4, 5]
2080	retail_world||Categories||CategoryName: Category Name. the category name. ['Seafood', 'Produce', 'Meat/Poultry', 'Grains/Cereals', 'Dairy Products']
2081	retail_world||Categories||Description: the detailed description of the category
2082	retail_world||Customers||CustomerID: Customer ID. the unique id for customers
2083	retail_world||Customers||CustomerName: Customer Name. the customer name. ['Wolski', 'Wilman Kala', 'White Clover Markets', 'Wellington Importadora', 'Wartian Herkku']
2084	retail_world||Customers||ContactName: Contact Name. the contact person's name representing the company. ['Zbyszek', 'Yvonne Moncada', 'Yoshi Tannamuri', 'Yoshi Latimer', 'Yang Wang']
2085	retail_world||Customers||Address: the address of the customer. ['Åkergatan 24', 'ul. Filtrowa 68', 'Walserweg 21', 'Vinbæltet 34', 'Via Monte Bianco 34']
2086	retail_world||Customers||City: the city where the customer is located. ['London', 'México D.F.', 'São Paulo', 'Rio de Janeiro', 'Madrid']
2087	retail_world||Customers||PostalCode: Postal Code. the postal code. ['1010', '5033', '5022', '44000', 'WX3 6FW']
2088	retail_world||Customers||Country: the country. ['USA', 'Germany', 'France', 'Brazil', 'UK']
2089	retail_world||Employees||EmployeeID: Employee ID. the unique id for employees. [1, 2, 3, 4, 5]
2090	retail_world||Employees||LastName: Last Name. the employee's last name. ['West', 'Suyama', 'Peacock', 'Leverling', 'King']
2091	retail_world||Employees||FirstName: First Name. the employee's first name. ['Steven', 'Robert', 'Nancy', 'Michael', 'Margaret']. commonsense evidence: the employee's full name is 'first_name last_name'.
2092	retail_world||Employees||BirthDate: Birth Date. the birth date of the employee. ['1969-07-02']
2093	retail_world||Employees||Photo: the photo of the employee. ['EmpID9.pic', 'EmpID8.pic', 'EmpID7.pic', 'EmpID6.pic', 'EmpID5.pic']
2094	retail_world||Employees||Notes: some additional information of the employee
2095	retail_world||Shippers||ShipperID: Shipper ID. the unique id for shippers. [1, 2, 3]
2096	retail_world||Shippers||ShipperName: Shipper Name. the shipped company name. ['United Package', 'Speedy Express', 'Federal Shipping']
2097	retail_world||Shippers||Phone: the phone of the company. ['(503) 555-9931', '(503) 555-9831', '(503) 555-3199']
2098	retail_world||Suppliers||SupplierID: Supplier ID. the unique id for suppliers
2099	retail_world||Suppliers||SupplierName: Supplier Name. the supplier name. ['Zaanse Snoepfabriek', 'Tokyo Traders', 'Svensk Sjöföda AB', 'Specialty Biscuits, Ltd.', 'Refrescos Americanas LTDA']
2100	retail_world||Suppliers||ContactName: Contact Name. the contact person's name representing the company. ['Yoshi Nagase', 'Wendy Mackenzie', 'Sven Petersen', 'Shelley Burke', 'Robb Merchant']
2101	retail_world||Suppliers||Address: the address of the supplier. ['Viale Dante, 75', 'Via dei Gelsomini, 153', 'Verkoop Rijnweg 22', 'Valtakatu 12', 'Tiergartenstraße 5']
2102	retail_world||Suppliers||City: the city where the supplier is located. ['Zaandam', 'Tokyo', 'São Paulo', 'Sydney', 'Stockholm']
2103	retail_world||Suppliers||PostalCode: Postal Code. the postal code. ['S-345 67', 'S-123 45', 'M14 GSD', 'J2S 7S8', 'H1J 1C3']
2104	retail_world||Suppliers||Country: the country. ['USA', 'Germany', 'France', 'UK', 'Sweden']
2105	retail_world||Suppliers||Phone: the phone number. ['85.57.00.07', '555-8787', '43844108', '38.76.98.06', '08-123 45 67']
2106	retail_world||Products||ProductID: Product ID. the unique id for products
2107	"retail_world||Products||ProductName: Product Name. the name of the product. ['Zaanse koeken', 'Wimmers gute Semmelknödel', 'Vegie-spread', 'Valkoinen suklaa', ""Uncle Bob's Organic Dried Pears""]"
2108	retail_world||Products||SupplierID: Supplier ID. the unique id for supplier
2109	retail_world||Products||CategoryID: Category ID. the unique id for the product category. [3, 8, 2, 1, 4]
2110	retail_world||Products||Unit: the unit of the product. ['24 - 12 oz bottles', '5 kg pkg.', '24 - 250 g pkgs.', '24 - 200 g pkgs.', '10 - 500 g pkgs.']. None
2111	retail_world||Products||Price: the price
2112	retail_world||Orders||OrderID: Order ID. the unique id for orders
2113	retail_world||Orders||CustomerID: Customer ID. the unique id for customers
2114	retail_world||Orders||EmployeeID: Employee ID. the unique id for employees. [4, 3, 1, 8, 2]
2115	retail_world||Orders||OrderDate: Order Date. the order date. ['1997-02-10']
2116	retail_world||Orders||ShipperID: Shipper ID. the id of the shipper. [2, 3, 1]. None
2117	retail_world||OrderDetails||OrderDetailID: order detail id. id of the order detail
2118	retail_world||OrderDetails||OrderID: Order ID. the unique id for orders
2119	retail_world||OrderDetails||ProductID: Product ID. the unique id for products
2120	retail_world||OrderDetails||Quantity: the quantity of the ordered products
2121	retails||customer||c_custkey: customer key. unique id number identifying the customer
2122	retails||customer||c_mktsegment: customer market segment. the segment of the customer. ['FURNITURE', 'MACHINERY', 'BUILDING', 'AUTOMOBILE', 'HOUSEHOLD']
2123	retails||customer||c_nationkey: customer nation key. the nation key number of the customer
2124	retails||customer||c_name: customer name. name of the customer. ['Customer#000150000', 'Customer#000149999', 'Customer#000149998', 'Customer#000149997', 'Customer#000149996']
2125	retails||customer||c_address: customer address. address of the customer. ['zzzjj8vW7XVi2HkFYkx', 'zzoZ12WbRUEIzVWQQ5UGKnA,TCPKqR,k', 'zznd4p,vlUjgXjf7Uwd3UeKBVeMO', 'zzmoaY9q7s98h', 'zzkIHCisusAB4gMsuqF4bfJk5mAWyGRxsS']
2126	retails||customer||c_phone: customer phone. phone of the customer. ['992-708-7653', '987-948-1052', '881-659-8448', '853-103-3122', '698-372-9393']
2127	retails||customer||c_acctbal: customer account balance. account balance. if c_acctbal < 0: this account is in debt
2128	retails||customer||c_comment: customer comment. comment of the customer
2129	retails||lineitem||l_shipdate: line item ship date. ship date of line item. ['1994-06-02']
2130	retails||lineitem||l_orderkey: line item order key. order key number of line item
2131	retails||lineitem||l_discount: line item discount. discount of line item. 0.1: 10% off
2132	retails||lineitem||l_extendedprice: line item extended price. extended price of line item. commonsense evidence: full price before discount discounted price = (l_extendedprice*(1-l_discount))
2133	retails||lineitem||l_suppkey: line item suppkey. suppkey of line item
2134	retails||lineitem||l_quantity: line item quantity. quantity of line item
2135	"retails||lineitem||l_returnflag: line item return flag. return flag of line item. ['N', 'A', 'R']. commonsense evidence:  R ? returned item  A and ""N"": not returned item."
2136	retails||lineitem||l_partkey: line item part key. part key of line item
2137	retails||lineitem||l_linestatus: line item line status. line status of line item. ['O', 'F']. NOT USEFUL
2138	retails||lineitem||l_tax: line item tax. tax of line item. [0.03, 0.01, 0.06, 0.05, 0.02]. commonsense evidence: charge = l_extendedprice * (1- l_discount) * (1+ l_tax)
2139	retails||lineitem||l_commitdate: line item commit date. commit date of line item. ['1997-07-16']
2140	retails||lineitem||l_receiptdate: line item receipt date. receipt date of line item. ['1995-07-06']. commonsense evidence: freight / shipping / delivery time = l_receiptdate - l_commitdate; less shipping / delivery time --> faster shipping speed.
2141	retails||lineitem||l_shipmode: line item ship mode. ship mode of line item. ['REG AIR', 'TRUCK', 'FOB', 'MAIL', 'SHIP']
2142	retails||lineitem||l_linenumber: line item line number. unique id number identifying the line item. [1, 2, 3, 4, 5]
2143	retails||lineitem||l_shipinstruct: line item ship instruct. ship instruct of line item. ['DELIVER IN PERSON', 'COLLECT COD', 'TAKE BACK RETURN', 'NONE']
2144	retails||lineitem||l_comment: line item comment. comment of line item. ['carefully regula', 'carefully reg', 'furiously regu', 'carefully regul', 'slyly regular']
2145	retails||nation||n_nationkey: nation key. unique id number identifying the nation
2146	retails||nation||n_name: nation name. name of the nation. ['VIETNAM', 'UNITED STATES', 'UNITED KINGDOM', 'SAUDI ARABIA', 'RUSSIA']
2147	retails||nation||n_regionkey: nation region key. region key number of the nation. [0, 3, 2, 1, 4]
2148	retails||nation||n_comment: nation comment. comment description of nation
2149	retails||orders||o_orderdate: order date. date of the order. ['1994-12-21']. commonsense evidence: earlier order date --> higher priority in delivery
2150	retails||orders||o_orderkey: order key. unique id number identifying the order
2151	retails||orders||o_custkey: order customer key. customer key of order
2152	retails||orders||o_orderpriority: order priority. priority rate of order. ['4-NOT SPECIFIED', '2-HIGH', '3-MEDIUM', '1-URGENT', '5-LOW']. A smaller number means a higher priority: 0-Urgent
2153	retails||orders||o_shippriority: order ship priority. ship priority of order. [0]. NOT USEFUL
2154	retails||orders||o_clerk: order clerk. clerk of order. ['Clerk#000000343', 'Clerk#000000801', 'Clerk#000000825', 'Clerk#000000776', 'Clerk#000000675']
2155	retails||orders||o_orderstatus: order status. status of order. ['F', 'O', 'P']. NOT USEFUL
2156	retails||orders||o_totalprice: order total price. total price of the order
2157	retails||orders||o_comment: order comment. comment description of order
2158	retails||part||p_partkey: part key. unique id number identifying the part
2159	retails||part||p_type: part type. type of part. ['MEDIUM ANODIZED COPPER', 'LARGE POLISHED TIN', 'PROMO POLISHED NICKEL', 'MEDIUM BRUSHED NICKEL', 'SMALL ANODIZED BRASS']
2160	retails||part||p_size: part size. size number of part. larger number --> larger part
2161	retails||part||p_brand: part brand. brand of part. ['Brand#15', 'Brand#32', 'Brand#41', 'Brand#14', 'Brand#55']
2162	retails||part||p_name: part name. name of part. ['wheat green ivory aquamarine puff', 'black indian navy seashell burlywood', 'yellow yellow yellow pale beige', 'yellow yellow wheat cornflower purple', 'yellow yellow turquoise papaya slate']
2163	retails||part||p_container: part container. container of part. ['WRAP PACK', 'WRAP DRUM', 'WRAP JAR', 'SM BOX', 'MED JAR']
2164	retails||part||p_mfgr: part manufacturer. manufacturer of part. ['Manufacturer#5', 'Manufacturer#1', 'Manufacturer#3', 'Manufacturer#2', 'Manufacturer#4']
2165	retails||part||p_retailprice: part retail price. retail price of part
2166	retails||part||p_comment: part comment. comment description text of part. ['carefully ', 'furious', 'furiousl', 'careful', 'carefull']
2167	retails||partsupp||ps_partkey: part supply part key. unique id number identifying the part key
2168	retails||partsupp||ps_suppkey: part supply supply key. unique id number identifying the supply key
2169	retails||partsupp||ps_supplycost: part supply cost. cost number of the part supply. commonsense evidence: profit = (l_extendedprice*(1-l_discount)) - (ps_supplycost * l_quantity)] l_quantity comes from table lineitem!
2170	retails||partsupp||ps_availqty: part supply available quantity. available quantity of the part supply. if ps_availqty < 10 --> closer to OOS (out of stock)
2171	retails||partsupp||ps_comment: part supply comment. comment description of the part supply.
2172	retails||region||r_regionkey: region key. unique id number identifying the region. [0, 1, 2, 3, 4]
2173	retails||region||r_name: region name. name of the region. ['MIDDLE EAST', 'EUROPE', 'ASIA', 'AMERICA', 'AFRICA']
2174	retails||region||r_comment: region comment. comment description of the region
2175	retails||supplier||s_suppkey: supply key. unique id number identifying the supply
2176	retails||supplier||s_nationkey: supplier nation key. nation key of the supply
2177	retails||supplier||s_comment: supplier comment. comment description of the comment
2178	retails||supplier||s_name: supplier name. name of the supplier. ['Supplier#000010000', 'Supplier#000009999', 'Supplier#000009998', 'Supplier#000009997', 'Supplier#000009996']
2179	retails||supplier||s_address: supplier address. address of the supplier. ['zzpppzghbP02w9qWev8Qc8G80Yeb cS', 'zzXCJwxtujW GrotA7xYp BLEO', 'zzAVld olTu7mpXp8UNO', 'zxYm,hBC2EkFOSdL WzJAIjjd5Fn', 'zxOQRRm7ssB1i5SNg7 zd6OTShNT2bGn9QhhNsit']
2180	retails||supplier||s_phone: supplier phone. phone number of the supplier. ['999-997-7974', '999-862-9063', '999-702-8709', '999-701-6541', '999-529-6934']
2181	retails||supplier||s_acctbal: supplier account balance. account balance of the supplier. commonsense evidence: if c_acctbal < 0: this account is in debt
2182	ice_hockey_draft||height_info||height_id: height id. the unique height id
2183	ice_hockey_draft||height_info||height_in_cm: height in cm. e.g. 180 --> the height is 180 cm
2184	"ice_hockey_draft||height_info||height_in_inch: height in inch. ['6\'9""', '6\'8""', '6\'7""', '6\'6""', '6\'5""']"
2185	ice_hockey_draft||weight_info||weight_id: weight id. the unique weight id
2186	ice_hockey_draft||weight_info||weight_in_kg: weight in kg. e.g. 70: -->70 kg
2187	ice_hockey_draft||weight_info||weight_in_lbs: weight in lbs
2188	ice_hockey_draft||PlayerInfo||ELITEID: ELITE ID. the unique number identifying the players who attended the draft
2189	ice_hockey_draft||PlayerInfo||PlayerName: Player Name. the name of the player. ['Sean Collins', 'Nick Larson', 'Mikko Lehtonen', 'Juraj Mikus', 'Jarkko Immonen']
2190	ice_hockey_draft||PlayerInfo||birthdate: the birthdate of the player. ['1982-02-05']
2191	ice_hockey_draft||PlayerInfo||birthyear: the birth year of the player. [1980, 1982, 1981, 1986, 1983]
2192	ice_hockey_draft||PlayerInfo||birthmonth: the birth month of the player
2193	ice_hockey_draft||PlayerInfo||birthday: the birthday of the player
2194	ice_hockey_draft||PlayerInfo||birthplace: the player of the birthplace. ['Moskva, RUS', 'Toronto, ON, CAN', 'Calgary, AB, CAN', 'Winnipeg, MB, CAN', 'Montreal, QC, CAN']
2195	ice_hockey_draft||PlayerInfo||nation: the nation of the player. ['Canada', 'USA', 'Russia', 'Sweden', 'Czech Rep.']. commonsense evidence: can ask questions about their corresponding continents. or group nations with their continents. You can refer to https://worldpopulationreview.com/country-rankings/list-of-countries-by-continent e.g.: Slovakia --> Europe
2196	ice_hockey_draft||PlayerInfo||height: the id number identifying heights
2197	ice_hockey_draft||PlayerInfo||weight: the id number identifying weights
2198	ice_hockey_draft||PlayerInfo||position_info: position information. position information of the player. ['D', 'C', 'RW', 'LW', 'LW/RW']. commonsense evidence: There are six different positions in hockey:  left wing,   right wing,   center,   left defenseman,  right defenseman  goalie.  Left wings, right wings, and centers are all considered forwards, while left and right defensemen are considered the defense.
2199	ice_hockey_draft||PlayerInfo||shoots: . ['L', 'R', '-']. commonsense evidence:   L: Left-shooted   R: Right-shooted   '-': no preference
2200	ice_hockey_draft||PlayerInfo||draftyear: draft year. [2002, 2000, 2004, 2001, 1999]
2201	ice_hockey_draft||PlayerInfo||draftround: draft round. [2, 4, 5, 7, 3]
2202	ice_hockey_draft||PlayerInfo||overall: overall orders of draft picks
2203	ice_hockey_draft||PlayerInfo||overallby: drafted by which team. ['Chicago Blackhawks', 'New Jersey Devils', 'New York Islanders', 'Colorado Avalanche', 'Washington Capitals']
2204	ice_hockey_draft||PlayerInfo||CSS_rank: Central Scouting Service ranking. commonsense evidence: higher rank refers to higher prospects for the draft
2205	ice_hockey_draft||PlayerInfo||sum_7yr_GP: sum 7-year game plays. Total NHL games played in players first 7 years of NHL career. commonsense evidence: higher --> more attendance in the first 7 years
2206	ice_hockey_draft||PlayerInfo||sum_7yr_TOI: sum 7-year time on ice. Total NHL Time on Ice in players first 7 years of NHL career. commonsense evidence: higher --> more playing time in the first 7 years of career
2207	ice_hockey_draft||PlayerInfo||GP_greater_than_0: game play greater than 0. Played a game or not in players first 7 years of NHL career. ['no', 'yes'].  yes   no
2208	ice_hockey_draft||SeasonStatus||ELITEID: ELITE ID. the id number of the players
2209	ice_hockey_draft||SeasonStatus||SEASON: season when players are playing. ['2001-2002', '2000-2001', '2003-2004', '1999-2000', '1998-1999']
2210	ice_hockey_draft||SeasonStatus||TEAM: which team the player belong to. ['U.S. National U18 Team', 'Russia U18', 'Canada U18', 'Sweden U18 (all)', 'Calgary Hitmen']
2211	ice_hockey_draft||SeasonStatus||LEAGUE: league. ['OHL', 'WHL', 'QMJHL', 'WJC-18', 'International-Jr']
2212	ice_hockey_draft||SeasonStatus||GAMETYPE: GAME TYPE. type of games. ['Regular Season', 'Playoffs'].  Regular season  playoffs (post season)
2213	ice_hockey_draft||SeasonStatus||GP: Game Plays. number of games
2214	ice_hockey_draft||SeasonStatus||G: Goals in Draft Year
2215	ice_hockey_draft||SeasonStatus||A: Assists in Draft Year
2216	ice_hockey_draft||SeasonStatus||P: Points in Draft Year. commonsense evidence: higher --> more valuable
2217	ice_hockey_draft||SeasonStatus||PIM: Penalty Minutes. Penalty Minutes in Draft Year. commonsense evidence: higher --> This player has committed more rule violations.
2218	ice_hockey_draft||SeasonStatus||PLUSMINUS: Plus Minutes. Goal Differential in Draft Year. Goal Differential
2219	works_cycles||CountryRegion||CountryRegionCode: Country Region Code. The unique id number identifying Country Region ISO standard code for countries and regions.. ['AD', 'AE', 'AF', 'AG', 'AI']
2220	works_cycles||CountryRegion||Name: Country or region name.. ['Afghanistan', 'Albania', 'Algeria', 'American Samoa', 'Andorra']
2221	works_cycles||CountryRegion||ModifiedDate: modified date. Date and time the record was last updated.. ['2008-04-30 00:00:00.0', 'ModifiedDate']. Default: getdate()
2222	works_cycles||Culture||CultureID: Culture ID. The unique id string identifying the language in which AdventrueWorks data is stored.. ['ar', 'en', 'es', 'fr', 'he']
2223	works_cycles||Culture||Name: Name of the language.. ['Arabic', 'Chinese', 'English', 'French', 'Hebrew']
2224	works_cycles||Culture||ModifiedDate: modified date. Date and time the record was last updated.. ['2008-04-30 00:00:00.0']. Default: getdate()
2225	works_cycles||Currency||CurrencyCode: Currency Code. The unique id string identifying the currency.. ['AED', 'AFA', 'ALL', 'AMD', 'ANG']
2226	works_cycles||Currency||Name: Currency name.. ['Afghani', 'Algerian Dinar', 'Argentine Peso', 'Armenian Dram', 'Aruban Guilder']
2227	works_cycles||Currency||ModifiedDate: modified date. Date and time the record was last updated.. ['2008-04-30 00:00:00.0']. Default: getdate()
2228	works_cycles||CountryRegionCurrency||CountryRegionCode: Country Region Code. The id number identifying Country Region ISO standard code for countries and regions.. ['AT', 'BE', 'DE', 'ES', 'FI']
2229	works_cycles||CountryRegionCurrency||CurrencyCode: Currency Code. ISO standard currency code.. ['EUR', 'USD', 'ZWD', 'ZAR', 'VND']
2230	works_cycles||CountryRegionCurrency||ModifiedDate: modified date. Date and time the record was last updated.. ['2014-02-08 10:17:21.0']. Default: getdate()
2231	works_cycles||Person||BusinessEntityID: Business Entity ID. The unique id number identifying the person.
2232	works_cycles||Person||PersonType: Person Type. The type of person.. ['IN', 'SC', 'GC', 'EM', 'VC']. Primary type of person: SC = Store Contact, IN = Individual (retail) customer, SP = Sales person, EM = Employee (non-sales), VC = Vendor contact, GC = General contact
2233	works_cycles||Person||NameStyle: Name Style. Name Style.. [0]. 0 = The data in FirstName and LastName are stored in western style (first name, last name) order. 1 = Eastern style (last name, first name) order. Default: 0
2234	works_cycles||Person||Title: A courtesy title.. [None, 'Mr.', 'Ms.', 'Sr.', 'Sra.', 'Mrs.']
2235	works_cycles||Person||FirstName: First Name. First name of the person.. ['Richard', 'Katherine', 'Marcus', 'James', 'Jennifer']. Default: getdate()
2236	works_cycles||Person||MiddleName: Middle Name. Middle name or middle initial of the person.. [None, 'A', 'L', 'M', 'J', 'C']
2237	works_cycles||Person||LastName: Last Name. Last name of the person.. ['Diaz', 'Hernandez', 'Sanchez', 'Martinez', 'Torres']
2238	works_cycles||Person||Suffix: Surname suffix.. [None, 'Jr.', 'Sr.', 'II', 'IV', 'III']
2239	works_cycles||Person||EmailPromotion: Email Promotion. Email Promotion.. [0, 1, 2]. 0 = Contact does not wish to receive e-mail promotions, 1 = Contact does wish to receive e-mail promotions from AdventureWorks, 2 = Contact does wish to receive e-mail promotions from AdventureWorks and selected partners. Default: 0
2240	works_cycles||Person||AdditionalContactInfo: Additional Contact Info. Additional contact information about the person stored in xml format.
2241	works_cycles||Person||Demographics: Personal information such as hobbies, and income collected from online shoppers. Used for sales analysis.
2242	works_cycles||Person||rowguid: Uniquely identifying the record. Used to support a merge replication sample.. ['000191EF-7424-4A5F-AB19-0852B1F0B78D', '00034881-67FA-4CCA-908A-B1D42030979E', '00061FFE-1635-48C6-88DD-FC1E2127B838', '0006B909-E986-4F5D-A180-4E953BBB99D3', '00083CD8-D326-4A31-9980-F40796CB38C1']. Default: newid()
2243	works_cycles||Person||ModifiedDate: modified date. Date and time the record was last updated.. ['2013-07-31 00:00:00.0']. Default: getdate()
2244	works_cycles||BusinessEntityContact||BusinessEntityID: Business Entity ID. The id number identifying the Business Entity ID.
2245	works_cycles||BusinessEntityContact||PersonID: Person ID. The id number identifying the Person ID.
2246	works_cycles||BusinessEntityContact||ContactTypeID: Contact Type ID. The id number identifying the contact type ID.. [11, 15, 14, 17, 18]
2247	works_cycles||BusinessEntityContact||rowguid: Uniquely identifying the record. Used to support a merge replication sample.. ['0022434C-E325-47B0-92A0-7302FFA5046F', '00A811E1-D1A5-47B0-8D94-1C6FBAC4C743', '01422957-23AE-4079-AFBA-07000F64B4A1', '01766FB9-FD85-4213-812C-7B73EC851CA3', '0186491F-6A89-4A4A-92EA-D4938125A635']. Default: newid()
2248	works_cycles||BusinessEntityContact||ModifiedDate: modified date. Date and time the record was last updated.. ['2012-01-25 00:00:00.0']. Default: getdate()
2249	works_cycles||EmailAddress||BusinessEntityID: Business Entity ID. The id number identifying the person associated with this email address.
2250	works_cycles||EmailAddress||EmailAddressID: Email Address ID. The ID of this email address.
2251	works_cycles||EmailAddress||EmailAddress: Email Address. The E-mail address for the person.
2252	works_cycles||EmailAddress||rowguid: Uniquely identifying the record. Used to support a merge replication sample.. ['FFFEB24A-8A31-4F29-B7F1-016801B87C44', 'FFFDEA1B-FC55-440B-96DB-4272E1843E20', 'FFFCF2DD-729E-4772-8772-F4738D170003', 'FFF7AB1D-DDB6-4293-89C4-AB34DCD7C13D', 'FFF44958-98A1-42D6-9ABE-44048656E231']. Default: newid()
2253	works_cycles||EmailAddress||ModifiedDate: modified date. Date and time the record was last updated.. ['2013-07-31 00:00:00.0']. Default: getdate()
2254	works_cycles||Employee||BusinessEntityID: Business Entity ID. The id number identifying the employee.
2255	works_cycles||Employee||NationalIDNumber: National ID Number. The national identification number such as a social security number.. ['10708100', '109272464', '112432117', '112457891', '113393530']
2256	works_cycles||Employee||LoginID: Login ID. Network login.. ['adventure-works\\alan0', 'adventure-works\\alejandro0', 'adventure-works\\alex0', 'adventure-works\\alice0', 'adventure-works\\amy0']
2257	works_cycles||Employee||OrganizationNode: Organization Node. Where the employee is located in corporate hierarchy.. [None, '/6/3/3/', '/6/3/2/', '/6/3/1/', '/6/3/', '/6/2/1/']. Default: newid()
2258	works_cycles||Employee||OrganizationLevel: Organization Level. The depth of the employee in the corporate hierarchy.. [None, 4, 3, 2, 1]. Computed: [OrganizationNode].[GetLevel]()
2259	works_cycles||Employee||JobTitle: Job Title. Work title such as Buyer or Sales Representative.. ['Production Technician - WC60', 'Production Technician - WC50', 'Production Technician - WC40', 'Production Technician - WC30', 'Production Technician - WC20']
2260	works_cycles||Employee||BirthDate: Birth Date. Date of birth.. ['1989-06-25']
2261	works_cycles||Employee||MaritalStatus: Marital Status. Whether this employee is married or not.. ['M', 'S']. M = Married, S = Single
2262	works_cycles||Employee||Gender: The gender of this employee.. ['M', 'F']. M = Male, F = Female
2263	works_cycles||Employee||HireDate: Hire Date. The employee was hired on this date.. ['2011-05-31']
2264	works_cycles||Employee||SalariedFlag: Salaried Flag. Job classification.. [0, 1]. 0 = Hourly, not exempt from collective bargaining. 1 = Salaried, exempt from collective bargaining.
2265	works_cycles||Employee||VacationHours: Vacation Hours. The number of available vacation hours.
2266	works_cycles||Employee||SickLeaveHours: Sick Leave Hours. The number of available sick leave hours.
2267	works_cycles||Employee||CurrentFlag: Current Flag. Whether this employee is active or not. [1]. 0 = Inactive, 1 = Active
2268	works_cycles||Employee||rowguid: Uniquely identifying the record. Used to support a merge replication sample.. ['00027A8C-C2F8-4A31-ABA8-8A203638B8F1', '01B119A2-2AF3-4775-818E-B421FECB07A7', '01BCCE22-D63A-4C3F-9BA8-D3D5A4C3BD52', '0217049E-1566-42B6-8027-41B751E2B00B', '03A9BA14-0D5B-4671-B851-2C1721EFBF01']. Default: newid()
2269	works_cycles||Employee||ModifiedDate: modified date. Date and time the record was last updated.. ['2014-06-30 00:00:00.0']. Default: getdate()
2270	works_cycles||Password||BusinessEntityID: Business Entity ID. The unique id number identifying the person.
2271	works_cycles||Password||PasswordHash: Password Hash. Password for the e-mail account.. ['zzwwJDjwWTc5xXncIe48+fe5nUQo38mFI1tqqnySGGI=', 'zzmVo0ARcJgseluVICkDfW7on9vzQJNwVpP2dm+MeM8=', 'zzjL+IPQHut3ujEvvJw5VHdjyL+LA0p02YWpHPz6lw8=', 'zzfl0uV2HlNpqIYPyT0OEGkVzdkKOi1xMJbEEih3PcI=', 'zzeonZu0yAN1pFWZB9SGmieyOPSpj79zxNY3rqfBdyA=']
2272	works_cycles||Password||PasswordSalt: Password Salt. Random value concatenated with the password string before the password is hashed.. ['zzy0LfY=', 'zzpQsZE=', 'zzhMjoU=', 'zzMtaW8=', 'zz1Nazo=']
2273	works_cycles||Password||rowguid: Uniquely identifying the record. Used to support a merge replication sample.. ['FFFF4ABD-7DE0-42A9-855D-26E06D94FA4D', 'FFFA3B29-C39D-4053-A581-F72B4DFC50C7', 'FFF6FCC8-E4ED-419F-B553-299837FABE8A', 'FFF6F4E0-F88D-4169-AA70-EFFC16F7EDFC', 'FFF349C1-1018-482C-8263-F0E2D18D1C04']. Default: newid()
2274	works_cycles||Password||ModifiedDate: modified date. Date and time the record was last updated.. ['2013-07-31 00:00:00.0']. Default: getdate()
2275	works_cycles||PersonCreditCard||BusinessEntityID: Business Entity ID. The id number identifying the person.
2276	works_cycles||PersonCreditCard||CreditCardID: Credit Card ID. Credit card identification number.
2277	works_cycles||PersonCreditCard||ModifiedDate: modified date. Date and time the record was last updated.. ['2013-07-31 00:00:00.0']. Default: getdate()
2278	works_cycles||ProductCategory||ProductCategoryID: Product Category ID. The unique id number identifying the product category.. [1, 2, 3, 4]
2279	works_cycles||ProductCategory||Name: Category description. ['Accessories', 'Bikes', 'Clothing', 'Components']
2280	works_cycles||ProductCategory||rowguid: Uniquely identifying the record. Used to support a merge replication sample.. ['10A7C342-CA82-48D4-8A38-46A2EB089B74', '2BE3BE36-D9A2-4EEE-B593-ED895D97C2A6', 'C657828D-D808-4ABA-91A3-AF2CE02300E9', 'CFBDA25C-DF71-47A7-B81B-64EE161AA37C']. Default: newid()
2281	works_cycles||ProductCategory||ModifiedDate: modified date. Date and time the record was last updated.. ['2008-04-30 00:00:00.0']. Default: getdate()
2282	works_cycles||ProductDescription||ProductDescriptionID: Product Description ID. The unique id number identifying the product description.
2283	works_cycles||ProductDescription||Description: Description of the product.
2284	works_cycles||ProductDescription||rowguid: Uniquely identifying the record. Used to support a merge replication sample.. ['00FFDFAC-0207-4DF0-8051-7D3C884816F3', '016CBBE9-D51B-4A50-94CD-5FF2DA577C5B', '01FC4BEE-5EE9-4B2A-A5C3-EABA6036A705', '02417873-BDA7-4B1B-902A-5341CD329F5E', '02641AA5-4F32-4CE2-9FA9-DB357C007A50']. Default: newid()
2285	works_cycles||ProductDescription||ModifiedDate: modified date. Date and time the record was last updated.. ['2013-04-30 00:00:00.0']. Default: getdate()
2286	works_cycles||ProductModel||ProductModelID: Product Model ID. The unique id number identifying the product model.
2287	works_cycles||ProductModel||Name: Product model description.. ['All-Purpose Bike Stand', 'Bike Wash', 'Cable Lock', 'Chain', 'Classic Vest']
2288	works_cycles||ProductModel||CatalogDescription: Catalog Description. Detailed product catalog information in xml format.
2289	works_cycles||ProductModel||Instructions: Manufacturing instructions in xml format.
2290	works_cycles||ProductModel||rowguid: Uniquely identifying the record. Used to support a merge replication sample.. ['00CE9171-8944-4D49-BA37-485C1D122F5C', '02200AA0-C369-4D77-A67C-75973EFDA81B', '02A562E2-4DFA-4778-BBAC-BBDDCECF99B0', '0434F63A-A361-4D0B-A9FC-8AC2A866CE85', '0481D7E1-4970-4EFA-A560-020F6579918D']. Default: newid()
2291	works_cycles||ProductModel||ModifiedDate: modified date. Date and time the record was last updated.. ['2013-04-30 00:00:00.0']. Default: getdate()
2292	works_cycles||ProductModelProductDescriptionCulture||ProductModelID: Product Model ID. The id number identifying the product model.
2293	works_cycles||ProductModelProductDescriptionCulture||ProductDescriptionID: Product Description ID. Product description identification number.
2294	works_cycles||ProductModelProductDescriptionCulture||CultureID: Culture ID. Culture identification number.. ['zh-cht', 'th', 'he', 'fr', 'en']
2295	works_cycles||ProductModelProductDescriptionCulture||ModifiedDate: modified date. Date and time the record was last updated.. ['2013-04-30 00:00:00.0']. Default: getdate()
2296	works_cycles||ProductPhoto||ProductPhotoID: Product Photo ID. unique id number identifying the products
2297	"works_cycles||ProductPhoto||ThumbNailPhoto: Thumb Nail Photo. Small image of the product.. The size of small images. commonsense evidence: ""80x49 GIF image 3.07 kB"". ""3.07"" represents the size of images, ""GIF"" refers to type of images like JPEG, GIF, etc."
2298	works_cycles||ProductPhoto||ThumbnailPhotoFileName: Thumbnail Photo File Name. Small image file name. ['wheel_small.gif', 'water_bottle_small.gif', 'water_bottle_cage_small.gif', 'tirepatch_kit_small.gif', 'tail_lights_small.gif']
2299	works_cycles||ProductPhoto||LargePhoto: large photo. Large image of the product.
2300	works_cycles||ProductPhoto||LargePhotoFileName: Large Photo File Name. Large image file name.. ['wheel_large.gif', 'water_bottle_large.gif', 'water_bottle_cage_large.gif', 'tirepatch_kit_large.gif', 'tail_lights_large.gif']. commonsense evidence: similar to ThumbNailPhoto
2301	works_cycles||ProductPhoto||ModifiedDate: Modified Date. Date and time the record was last updated.. ['2012-10-19 09:56:38.0']
2302	works_cycles||ProductSubcategory||ProductSubcategoryID: Product Subcategory ID. Unique id number identifying the subcategory of products.
2303	works_cycles||ProductSubcategory||ProductCategoryID: Product Category ID. Product category identification number.. [2, 4, 3, 1]
2304	works_cycles||ProductSubcategory||Name: Subcategory description.. ['Bib-Shorts', 'Bike Racks', 'Bike Stands', 'Bottles and Cages', 'Bottom Brackets']
2305	works_cycles||ProductSubcategory||rowguid: Uniquely identifying the record. Used to support a merge replication sample.. ['000310C0-BCC8-42C4-B0C3-45AE611AF06B', '02C5061D-ECDC-4274-B5F1-E91D76BC3F37', '049FFFA3-9D30-46DF-82F7-F20730EC02B3', '09E91437-BA4F-4B1A-8215-74184FD95DB8', '1697F8A2-0A08-4883-B7DD-D19117B4E9A7']. Default: newid()
2306	works_cycles||ProductSubcategory||ModifiedDate: modified date. Date and time the record was last updated.. ['2008-04-30 00:00:00.0']. Default: getdate()
2307	works_cycles||SalesReason||SalesReasonID: The unique number identifying SalesReason records.. [1, 2, 3, 4, 5]
2308	works_cycles||SalesReason||Name: Sales reason description. ['Television  Advertisement', 'Sponsorship', 'Review', 'Quality', 'Price']
2309	works_cycles||SalesReason||ReasonType: Category the sales reason belongs to.. ['Other', 'Marketing', 'Promotion']
2310	works_cycles||SalesReason||ModifiedDate: modified date. Date and time the record was last updated.. ['2008-04-30 00:00:00.0']. Default: getdate()
2311	works_cycles||SalesTerritory||TerritoryID: The unique id number for SalesTerritory records.. [1, 2, 3, 4, 5]
2312	works_cycles||SalesTerritory||Name: Sales territory description.. ['Australia', 'Canada', 'Central', 'France', 'Germany']
2313	works_cycles||SalesTerritory||CountryRegionCode: Country Region Code. ISO standard country or region code.. ['US', 'GB', 'FR', 'DE', 'CA']
2314	works_cycles||SalesTerritory||Group: Geographic area to which the sales territory belong.. ['North America', 'Europe', 'Pacific']
2315	works_cycles||SalesTerritory||SalesYTD: Sales Year to Date. Sales in the territory year to date.. [10510853.8739, 7887186.7882, 6771829.1376, 5977814.9154, 5012905.3656]
2316	works_cycles||SalesTerritory||SalesLastYear: Sales Last Year. Sales in the territory the previous year.. [5693988.86, 5366575.7098, 3925071.4318, 3607148.9371, 3298694.4938]
2317	works_cycles||SalesTerritory||CostYTD: Cost Year to Date. Business costs in the territory year to date.. [0.0]
2318	works_cycles||SalesTerritory||CostLastYear: Cost Last Year. Business costs in the territory the previous year.. [0.0]
2319	works_cycles||SalesTerritory||rowguid: Uniquely identifying the record. Used to support a merge replication sample.. ['00FB7309-96CC-49E2-8363-0A1BA72486F2', '05FC7E1F-2DEA-414E-9ECD-09D150516FB5', '06B4AF8A-1639-476E-9266-110461D66B00', '43689A10-E30B-497F-B0DE-11DE20267FF7', '602E612E-DFE9-41D9-B894-27E489747885']. Default: newid()
2320	works_cycles||SalesTerritory||ModifiedDate: modified date. Date and time the record was last updated.. ['2008-04-30 00:00:00.0']. Default: getdate()
2321	works_cycles||SalesPerson||BusinessEntityID: Business Entity ID. The unique id number identifying the business entity.
2322	works_cycles||SalesPerson||TerritoryID: Territory ID. Territory currently assigned to.
2323	works_cycles||SalesPerson||SalesQuota: Sales Quota. Projected yearly sales. [None, 250000.0, 300000.0]
2324	works_cycles||SalesPerson||Bonus: Bonus due if quota is met.. commonsense evidence: if bonus is equal to 0, it means this salesperson doesn't meet quota. vice versa.
2325	works_cycles||SalesPerson||CommissionPct: Commission percentage. . [0.01, 0.015, 0.0, 0.018, 0.012]. Commission percent received per sale
2326	works_cycles||SalesPerson||SalesYTD: sales year to date. Sales total year to date
2327	works_cycles||SalesPerson||SalesLastYear: Sales Last Year. Sales total of previous year.
2328	works_cycles||SalesPerson||rowguid: Uniquely identifying the record. Used to support a merge replication sample.. ['1DD1F689-DF74-4149-8600-59555EEF154B', '1E0A7274-3064-4F58-88EE-4C6586C87169', '224BB25A-62E3-493E-ACAF-4F8F5C72396A', '25F6838D-9DB4-4833-9DDC-7A24283AF1BA', '31FD7FC1-DC84-4F05-B9A0-762519EACACC']. Default: newid()
2329	works_cycles||SalesPerson||ModifiedDate: modified date. Date and time the record was last updated.. ['2011-05-24 00:00:00.0']. Default: getdate()
2330	works_cycles||SalesPersonQuotaHistory||BusinessEntityID: Business Entity ID. Sales person identification number
2331	works_cycles||SalesPersonQuotaHistory||QuotaDate: Quota Date. Sales quota date. ['2014-03-01 00:00:00.0']
2332	works_cycles||SalesPersonQuotaHistory||SalesQuota: Sales Quota. Sales quota amount
2333	works_cycles||SalesPersonQuotaHistory||rowguid: Uniquely identifying the record. Used to support a merge replication sample.. ['00F2F9F8-5158-4436-B134-7E0C462289E5', '0103899F-618C-4478-90BB-815B20856F35', '0323D0BC-C5CC-4D67-8935-DD05074FBA43', '03A84ECC-E299-4B61-A634-892399E0A0EC', '0569DF99-DEAB-46CE-8818-8EEE2DD47BF1']. Default: newid()
2334	works_cycles||SalesPersonQuotaHistory||ModifiedDate: modified date. Date and time the record was last updated.. ['2014-01-15 00:00:00.0']. Default: getdate()
2335	works_cycles||SalesTerritoryHistory||BusinessEntityID: Business Entity ID. The sales representative.
2336	works_cycles||SalesTerritoryHistory||TerritoryID: Territory ID. Territory identification number.. [6, 1, 4, 3, 2]
2337	works_cycles||SalesTerritoryHistory||StartDate: Start Date. Date the sales representive started work in the territory.. ['2011-05-31 00:00:00.0']
2338	works_cycles||SalesTerritoryHistory||EndDate: End Date. Date the sales representative left work in the territory.. [None, '2012-11-29 00:00:00.0']
2339	works_cycles||SalesTerritoryHistory||rowguid: Uniquely identifying the record. Used to support a merge replication sample.. ['009F7660-44A6-4ADF-BD4B-A5D1B79993F5', '132E4721-32DD-4A73-B556-1837F3A2B9AE', '2C9F5240-D8BF-4F85-897D-6083146DBC4B', '2F44304C-EE87-4C72-813E-CA75C5F61F4C', '3E1360CB-32E0-4286-8D98-8539F1AB2550']. Default: newid()
2340	works_cycles||SalesTerritoryHistory||ModifiedDate: modified date. Date and time the record was last updated.. ['2011-05-24 00:00:00.0']. Default: getdate()
2341	works_cycles||ScrapReason||ScrapReasonID: Scrap Reason ID. The unique number identifying for ScrapReason records.
2342	works_cycles||ScrapReason||Name: Failure description.. ['Brake assembly not as ordered', 'Color incorrect', 'Drill pattern incorrect', 'Drill size too large', 'Drill size too small']
2343	works_cycles||ScrapReason||ModifiedDate: modified date. Date and time the record was last updated.. ['2008-04-30 00:00:00.0']. Default: getdate()
2344	works_cycles||Shift||ShiftID: The unique number identifying the shift.. [1, 2, 3]
2345	works_cycles||Shift||Name: Shift description.. ['Day', 'Evening', 'Night']
2346	works_cycles||Shift||StartTime: Start Time. Shift start time.. ['07:00:00', '15:00:00', '23:00:00']
2347	works_cycles||Shift||EndTime: End Time. Shift end time.. ['23:00:00', '15:00:00', '07:00:00']
2348	works_cycles||Shift||ModifiedDate: modified date. Date and time the record was last updated.. ['2008-04-30 00:00:00.0']. Default: getdate()
2349	works_cycles||ShipMethod||ShipMethodID: Ship Method ID. The unique number for ShipMethod records.. [1, 2, 3, 4, 5]
2350	works_cycles||ShipMethod||Name: Shipping company name.. ['CARGO TRANSPORT 5', 'OVERNIGHT J-FAST', 'OVERSEAS - DELUXE', 'XRQ - TRUCK GROUND', 'ZY - EXPRESS']
2351	works_cycles||ShipMethod||ShipBase: Ship Base. Minimum shipping charge.. [29.95, 21.95, 9.95, 8.99, 3.95]
2352	works_cycles||ShipMethod||ShipRate: Ship Rate. Shipping charge per pound.. [2.99, 1.99, 1.49, 1.29, 0.99]
2353	works_cycles||ShipMethod||rowguid: Uniquely identifying the record. Used to support a merge replication sample.. ['107E8356-E7A8-463D-B60C-079FFF467F3F', '22F4E461-28CF-4ACE-A980-F686CF112EC8', '3455079B-F773-4DC6-8F1E-2A58649C4AB8', '6BE756D9-D7BE-4463-8F2C-AE60C710D606', 'B166019A-B134-4E76-B957-2B0490C610ED']. Default: newid()
2354	works_cycles||ShipMethod||ModifiedDate: modified date. Date and time the record was last updated.. ['2008-04-30 00:00:00.0']. Default: getdate()
2355	works_cycles||SpecialOffer||SpecialOfferID: Special Offer ID. The unique id number identifying the special offer.
2356	works_cycles||SpecialOffer||Description: Discount description.. ['Volume Discount over 60', 'Volume Discount 41 to 60', 'Volume Discount 25 to 40', 'Volume Discount 15 to 24', 'Volume Discount 11 to 14']
2357	works_cycles||SpecialOffer||DiscountPct: Discount precentage. Discount percentage.. [0.0]
2358	works_cycles||SpecialOffer||Type: Discount type category.. ['Volume Discount', 'Seasonal Discount', 'Excess Inventory', 'New Product', 'Discontinued Product']
2359	works_cycles||SpecialOffer||Category: Group the discount applies to such as Reseller or Customer.. ['Reseller', 'Customer', 'No Discount']
2360	works_cycles||SpecialOffer||StartDate: Start Date. Discount start date.. ['2011-05-31 00:00:00.0']
2361	works_cycles||SpecialOffer||EndDate: End Date. Discount end date.. ['2014-05-30 00:00:00.0']. commonsense evidence: promotion date = EndDate - StartDate
2362	works_cycles||SpecialOffer||MinQty: Min Quality. Minimum discount percent allowed.. [0, 61, 41, 25, 15]
2363	works_cycles||SpecialOffer||MaxQty: Max Quality. Maximum discount percent allowed.. [None, 60, 40, 24, 14]
2364	works_cycles||SpecialOffer||rowguid: Uniquely identifying the record. Used to support a merge replication sample.. ['0290C4F5-191F-4337-AB6B-0A2DDE03CBF9', '03E3594D-6EBB-46A6-B8EE-A9289C0C2E47', '0CF8472B-F9E6-4945-9E09-549D7DDE2198', '1AF84A9E-A98C-4BD9-B48F-DC2B8B6B010B', '20C5D2CC-A38F-48F8-AC9A-8F15943E52AE']. Default: newid()
2365	works_cycles||SpecialOffer||ModifiedDate: modified date. Date and time the record was last updated.. ['2011-05-01 00:00:00.0']. Default: getdate()
2366	works_cycles||BusinessEntityAddress||BusinessEntityID: Business Entity ID. Number identifying the business entity.
2367	works_cycles||BusinessEntityAddress||AddressID: Address ID. Number identifying the address.
2368	works_cycles||BusinessEntityAddress||AddressTypeID: Address Type ID. Number identifying the address type.. [2, 3, 5]
2369	works_cycles||BusinessEntityAddress||rowguid: Uniquely identifying the record. Used to support a merge replication sample.. ['00013363-E32F-4615-9439-AFF156D480AE', '0001CCDA-AD2B-4BBE-8047-CAC51EFDBB53', '0006A62C-C87F-448E-AE91-F01A2F34466C', '00093C92-BA42-45DA-8603-96E8AD120467', '000C2DD5-D417-47DF-8E5B-0B3679B2C95E']. Default: newid()
2370	works_cycles||BusinessEntityAddress||ModifiedDate: modified date. Date and time the record was last updated.. ['2014-09-12 11:15:06.0']. Default: getdate()
2371	works_cycles||SalesTaxRate||SalesTaxRateID: Sales Tax Rate ID. Unique id number identifying sales tax records.
2372	works_cycles||SalesTaxRate||StateProvinceID: State Province ID. id number identifying state province.
2373	works_cycles||SalesTaxRate||TaxType: Tax Type. [3, 1, 2]. 1 = Tax applied to retail transactions, 2 = Tax applied to wholesale transactions, 3 = Tax applied to all sales (retail and wholesale) transactions
2374	works_cycles||SalesTaxRate||TaxRate: Tax Rate. Tax rate amount
2375	"works_cycles||SalesTaxRate||Name: Tax rate description. ['Canadian GST', 'Washington State Sales Tax', 'Utah State Sales Tax', 'United Kingdom Output Tax', 'Texas State Sales Tax']. commonsense evidence: if there's ""+"" in the value, it means this sales are charged by multiple types of tax."
2376	works_cycles||SalesTaxRate||rowguid: Uniquely identifying the record. Used to support a merge replication sample.. ['05C4FFDB-4F84-4CDF-ABE5-FDF3216EA74E', '06DF529D-EB11-446F-9570-9EE97B8EA1BF', '1753D75F-8357-4497-BC92-543F17BBF514', '1E285D2C-8AF7-47AA-B06A-762CF4D93ACD', '207C7024-85FE-42CB-BF74-9FE88E2F4E1B']. Default: newid()
2377	works_cycles||SalesTaxRate||ModifiedDate: modified date. Date and time the record was last updated.. ['2008-04-30 00:00:00.0']. Default: getdate()
2378	works_cycles||Store||BusinessEntityID: Business Entity ID. The unique number identifying business entity.
2379	works_cycles||Store||Name: Name of the store.. ['Sports Products Store', 'Friendly Bike Shop', 'eCommerce Bikes', 'Yellow Bicycle Company', 'Year-Round Sports']
2380	works_cycles||Store||SalesPersonID: Sales Person ID. ID of the sales person assigned to the customer.
2381	works_cycles||Store||Demographics: Demographic information about the store such as the number of employees, annual sales and store type.
2382	works_cycles||Store||rowguid: Uniquely identifying the record. Used to support a merge replication sample.. ['004EA91C-FCD4-4973-87EF-9059C6E20BB5', '00A7E190-D705-4791-AAB5-AD218497DD06', '00E69DB8-5933-4F61-A963-7808C4BAF0C5', '01351A38-0674-4191-918D-3C10B5932E8A', '019E92AA-628C-4914-ACBC-D540E595E887']. Default: newid()
2383	works_cycles||Store||ModifiedDate: modified date. Date and time the record was last updated.. ['2014-09-12 11:15:07.0']. Default: getdate()
2384	works_cycles||SalesOrderHeaderSalesReason||SalesOrderID: Sales Order ID. The id number of sales order.
2385	works_cycles||SalesOrderHeaderSalesReason||SalesReasonID: Sales Reason ID. The id number for sales reasons.. [1, 2, 5, 9, 10]
2386	works_cycles||SalesOrderHeaderSalesReason||ModifiedDate: modified date. Date and time the record was last updated.. ['2014-05-14 00:00:00.0']. Default: getdate()
2387	works_cycles||TransactionHistoryArchive||TransactionID: Transaction ID. The unique id number identifying TransactionHistory records.
2388	works_cycles||TransactionHistoryArchive||ProductID: Product ID. Product identification number.
2389	works_cycles||TransactionHistoryArchive||ReferenceOrderID: Reference Order ID. Purchase order, sales order, or work order identification number.
2390	works_cycles||TransactionHistoryArchive||ReferenceOrderLineID: Reference Order Line ID. Line number associated with the purchase order, sales order, or work order.
2391	works_cycles||TransactionHistoryArchive||TransactionDate: Transaction Date. Date and time of the transaction.. ['2013-06-30 00:00:00.0']
2392	works_cycles||TransactionHistoryArchive||TransactionType: Transaction Type. Type of transaction records.. ['S', 'W', 'P']. commonsense evidence:  W = WorkOrder, S = SalesOrder, P = PurchaseOrder
2393	works_cycles||TransactionHistoryArchive||Quantity: Product quantity.
2394	works_cycles||TransactionHistoryArchive||ActualCost: Actual Cost. Product cost.
2395	works_cycles||TransactionHistoryArchive||ModifiedDate: modified date. Date and time the record was last updated.. ['2013-06-30 00:00:00.0']. Default: getdate()
2396	works_cycles||UnitMeasure||UnitMeasureCode: Unit Measure Code. The unique identifying numbers for measure.. ['BOX', 'BTL', 'C', 'CAN', 'CAR']
2397	works_cycles||UnitMeasure||Name: Unit of measure description.. ['Bottle', 'Boxes', 'Canister', 'Carton', 'Case']
2398	works_cycles||UnitMeasure||ModifiedDate: modified date. Date and time the record was last updated.. ['2008-04-30 00:00:00.0']. Default: getdate()
2399	works_cycles||ProductCostHistory||ProductID: Product ID. The id number identifying the product.
2400	works_cycles||ProductCostHistory||StartDate: Start Date. Product cost start date. ['2013-05-30 00:00:00.0']
2401	works_cycles||ProductCostHistory||EndDate: End Date. Product cost end date. [None, '2013-05-29 00:00:00.0']
2402	works_cycles||ProductCostHistory||StandardCost: Standard Cost. Standard cost of the product.
2403	works_cycles||ProductCostHistory||ModifiedDate: modified date. Date and time the record was last updated.. ['2013-05-16 00:00:00.0']. Default: getdate()
2404	works_cycles||ProductDocument||ProductID: Product ID. The id number identifying the product.
2405	works_cycles||ProductDocument||DocumentNode: Document Node. The hierarchy id number identifying the Document node.. ['/2/1/', '/3/4/', '/3/3/', '/1/1/', '/3/2/']. Document identification number
2406	works_cycles||ProductDocument||ModifiedDate: modified date. Date and time the record was last updated.. ['2013-12-29 13:51:58.0']. Default: getdate()
2407	works_cycles||ProductInventory||ProductID: Product ID. Product identification number.
2408	works_cycles||ProductInventory||LocationID: Location ID. Inventory location identification number.. Document identification number
2409	works_cycles||ProductInventory||Shelf: Storage compartment within an inventory location.. ['N/A', 'G', 'E', 'A', 'R']
2410	works_cycles||ProductInventory||Bin: Storage container on a shelf in an inventory location.
2411	works_cycles||ProductInventory||Quantity: Quantity of products in the inventory location.. Default: 0
2412	works_cycles||ProductInventory||rowguid: Uniquely identifying the record. Used to support a merge replication sample.. ['FFF200BB-1705-4839-AA84-0ABAA34E4700', 'FFDF35C4-3BED-460B-9821-26D51A95BAF6', 'FFD07590-9F3C-4ABF-80C7-353C66BD8429', 'FFAE06C0-6DC1-4D15-B1E9-74A68A33072D', 'FFACCA72-7E76-4AEC-AF4D-BBE70ADB10BB']. Default: newid()
2413	works_cycles||ProductInventory||ModifiedDate: modified date. Date and time the record was last updated.. ['2013-04-30 00:00:00.0']. Default: getdate()
2414	works_cycles||ProductProductPhoto||ProductID: Product ID. Product identification number.
2415	works_cycles||ProductProductPhoto||ProductPhotoID: Product Photo ID. Product photo identification number.
2416	"works_cycles||ProductProductPhoto||Primary: Whether this photo is the principal image or not.. [1]. 0 = Photo is not the principal image.  1 = Photo is the principal image.  commonsense evidence: staff can mention ""principal"" in the question in order to make the question more realistic."
2417	works_cycles||ProductProductPhoto||ModifiedDate: Modified Date. . ['2008-03-31 00:00:00.0']
2418	works_cycles||ProductReview||ProductReviewID: Product Review ID. The unique id numbers identifying product reviews.. [1, 2, 3, 4]
2419	works_cycles||ProductReview||ProductID: Product ID. Product identification number.. [937, 798, 709]
2420	works_cycles||ProductReview||ReviewerName: Reviewer Name. The name of reviewer.. ['Laura Norman', 'John Smith', 'Jill', 'David']
2421	works_cycles||ProductReview||ReviewDate: Review Date. Date review was submitted.. ['2013-11-15 00:00:00.0']. Default: getdate()
2422	works_cycles||ProductReview||EmailAddress: Email Address. Reviewer's e-mail address.
2423	works_cycles||ProductReview||Rating: Product rating given by the reviewer.. [5, 4, 2]. commonsense evidence: Scale is 1 to 5 with 5 as the highest rating.
2424	works_cycles||ProductReview||Comments: 
2425	works_cycles||ProductReview||ModifiedDate: modified date. Date and time the record was last updated.. ['2013-11-15 00:00:00.0']. Default: getdate()
2426	works_cycles||ShoppingCartItem||ShoppingCartItemID: Shopping CartItem ID. The unique id number identifying the shopping cart item records.. [2, 4, 5]
2427	works_cycles||ShoppingCartItem||ShoppingCartID: Shopping Cart ID. Shopping cart identification number.. ['20621', '14951']
2428	works_cycles||ShoppingCartItem||Quantity: Product quantity ordered.. [7, 4, 3]. Default: 1
2429	works_cycles||ShoppingCartItem||ProductID: Product ID. Product ordered.. [881, 874, 862]
2430	works_cycles||ShoppingCartItem||DateCreated: Date Created. Date the time the record was created.. ['2013-11-09 17:54:07.0']. Default: getdate()
2431	works_cycles||ShoppingCartItem||ModifiedDate: modified date. Date and time the record was last updated.. ['2013-11-09 17:54:07.0']. Default: getdate()
2432	works_cycles||SpecialOfferProduct||SpecialOfferID: Special Offer ID. The id for SpecialOfferProduct records
2433	works_cycles||SpecialOfferProduct||ProductID: Product ID. Product identification number.
2434	works_cycles||SpecialOfferProduct||rowguid: Uniquely identifying the record. Used to support a merge replication sample.. ['0020931C-087C-42F8-B441-EBE3D3B5F51E', '00365938-3422-494E-B92E-C00AFD691469', '005D8818-0E25-4770-9A86-2B05371A5A1B', '00C21E7C-FD29-44D5-96C4-7DC75D83C0A3', '01096D18-0E95-4940-95C2-E036FBCA2E0E']. Default: newid()
2435	works_cycles||SpecialOfferProduct||ModifiedDate: modified date. Date and time the record was last updated.. ['2011-04-01 00:00:00.0']. Default: getdate()
2436	works_cycles||SalesOrderDetail||SalesOrderID: 
2437	works_cycles||SalesOrderDetail||SalesOrderDetailID: 
2438	works_cycles||SalesOrderDetail||CarrierTrackingNumber: . [None, 'AF60-4F2F-9B', '9429-430D-89', 'D859-4DF3-84', '3F3F-4135-B0', '6B7D-4E47-B5']
2439	works_cycles||SalesOrderDetail||OrderQty: 
2440	works_cycles||SalesOrderDetail||ProductID: 
2441	works_cycles||SalesOrderDetail||SpecialOfferID: 
2442	works_cycles||SalesOrderDetail||UnitPrice: 
2443	works_cycles||SalesOrderDetail||UnitPriceDiscount: . [0.0]
2444	works_cycles||SalesOrderDetail||LineTotal: 
2445	works_cycles||SalesOrderDetail||rowguid: . ['0000C99C-2B71-4885-B976-C1CCAE896EF2', '00010EA0-5D0F-4F0A-A3FB-8FE8A8210956', '00015BA1-153F-490E-8D59-4127F02B72E8', '00016F2D-8CB1-4A16-871C-9BA4D25A3FCA', '0001AE0A-7ABE-48B9-ACE8-ABAE4CC83A42']
2446	works_cycles||SalesOrderDetail||ModifiedDate: modified date. ['2013-06-30 00:00:00.0']. Date and time the record was last updated.
2447	works_cycles||TransactionHistory||TransactionID: Transaction ID. The unique id number identifying TransactionHistory records.
2448	works_cycles||TransactionHistory||ProductID: Product ID. Product identification number.
2449	works_cycles||TransactionHistory||ReferenceOrderID: Reference Order ID. Purchase order, sales order, or work order identification number.
2450	works_cycles||TransactionHistory||ReferenceOrderLineID: Reference Order Line ID. Line number associated with the purchase order, sales order, or work order.
2451	works_cycles||TransactionHistory||TransactionDate: Transaction Date. Date and time of the transaction.. ['2013-07-31 00:00:00.0']
2452	works_cycles||TransactionHistory||TransactionType: Transaction Type. Type of transaction records.. ['S', 'W', 'P']. commonsense evidence: W = WorkOrder, S = SalesOrder, P = PurchaseOrder
2453	works_cycles||TransactionHistory||Quantity: Product quantity.
2454	works_cycles||TransactionHistory||ActualCost: Actual Cost. Product cost.
2455	works_cycles||TransactionHistory||ModifiedDate: modified date. Date and time the record was last updated.. ['2013-07-31 00:00:00.0']. Default: getdate()
2456	works_cycles||Vendor||BusinessEntityID: The unique number identifying Vendor records.
2457	works_cycles||Vendor||AccountNumber: Vendor account (identification) number.. ['ADATUM0001', 'ADVANCED0001', 'ALLENSON0001', 'AMERICAN0001', 'AMERICAN0002']
2458	works_cycles||Vendor||Name: Company name.. ['Wood Fitness', 'Wide World Importers', 'WestAmerica Bicycle Co.', 'West Junction Cycles', 'Vista Road Bikes']
2459	works_cycles||Vendor||CreditRating: Rating of credit.. [1, 2, 3, 5, 4]. commonsense evidence:  1 = Superior, 2 = Excellent, 3 = Above average, 4 = Average, 5 = Below average.  commonsense evidence: 1, 2, 3 can represent good credit, 4 is average credit, 5 is bad credit.
2460	works_cycles||Vendor||PreferredVendorStatus: Preferred Vendor Status. [1, 0]. commonsense evidence:  0 = Do not use if another vendor is available. 1 = Preferred over other vendors supplying the same product.
2461	works_cycles||Vendor||ActiveFlag: Active Flag. Vendor URL. [1, 0]. commonsense evidence: 0 = Vendor no longer used. 1 = Vendor is actively used. Default: 1
2462	works_cycles||Vendor||PurchasingWebServiceURL: Purchasing Web Service URL. [None, 'www.wideworldimporters.com/', 'www.treyresearch.net/', 'www.proseware.com/', 'www.northwindtraders.com/', 'www.litwareinc.com/']
2463	works_cycles||Vendor||ModifiedDate: modified date. Date and time the record was last updated.. ['2012-02-02 00:00:00.0']. Default: getdate()
2464	works_cycles||ProductVendor||ProductID: Product ID. The id number identifying the products.
2465	works_cycles||ProductVendor||BusinessEntityID: Business Entity ID. The id number identifying the business entities.
2466	works_cycles||ProductVendor||AverageLeadTime: Average Lead Time. The average span of time between placing an order with the vendor and receiving the purchased product.. in days
2467	works_cycles||ProductVendor||StandardPrice: Standard Price. The vendor's usual selling price.
2468	works_cycles||ProductVendor||LastReceiptCost: Last Receipt Cost. The selling price when last purchased.. commonsense evidence: profit on net can be computed by LastReceiptCost - StandardPrice
2469	works_cycles||ProductVendor||LastReceiptDate: Last Receipt Date. Date the product was last received by the vendor.. ['2011-08-28 00:00:00.0']
2470	works_cycles||ProductVendor||MinOrderQty: Min Order Quantity. The maximum quantity that should be ordered.
2471	works_cycles||ProductVendor||MaxOrderQty: Max Order Quantity. The minimum quantity that should be ordered.
2472	"works_cycles||ProductVendor||OnOrderQty: On Order Quantity. The quantity currently on order.. if it's equal to 0, it means ""out of stock"""
2473	works_cycles||ProductVendor||UnitMeasureCode: Unit Measure Code. The product's unit of measure.. ['CTN', 'EA', 'CAN', 'CS', 'GAL']
2474	works_cycles||ProductVendor||ModifiedDate: modified date. Date and time the record was last updated.. ['2015-08-12 12:20:28.0']. Default: getdate()
2475	works_cycles||PurchaseOrderHeader||PurchaseOrderID: Purchase Order ID. The unique id number identifying purchase order.
2476	works_cycles||PurchaseOrderHeader||RevisionNumber: Revision Number. Incremental number to track changes to the purchase order over time.. [4, 5, 6, 7, 9]
2477	works_cycles||PurchaseOrderHeader||Status: Order current status.. [4, 1, 3, 2]. 1 = Pending; 2 = Approved; 3 = Rejected; 4 = Complete Default: 1
2478	works_cycles||PurchaseOrderHeader||EmployeeID: Employee ID. Employee who created the purchase order.
2479	works_cycles||PurchaseOrderHeader||VendorID: Vendor ID. Vendor with whom the purchase order is placed.
2480	works_cycles||PurchaseOrderHeader||ShipMethodID: Ship Method ID. Shipping method. [5, 4, 2, 1, 3]
2481	works_cycles||PurchaseOrderHeader||OrderDate: Order Date. Purchase order creation date. ['2013-08-21 00:00:00.0']. Default: getdate()
2482	works_cycles||PurchaseOrderHeader||ShipDate: Ship Date. Estimated shipment date from the vendor.. ['2013-08-30 00:00:00.0']
2483	works_cycles||PurchaseOrderHeader||SubTotal: Purchase order subtotal. Computed as SUM (PurchaseOrderDetail.LineTotal)for the appropriate PurchaseOrderID
2484	works_cycles||PurchaseOrderHeader||TaxAmt: Tax Amount. Tax amount
2485	works_cycles||PurchaseOrderHeader||Freight: Shipping cost
2486	works_cycles||PurchaseOrderHeader||TotalDue: Total Due. Total due to vendor. Computed as Subtotal + TaxAmt + Freight. Computed: isnull(([SubTotal]+[TaxAmt])+[Freight],(0))
2487	works_cycles||PurchaseOrderHeader||ModifiedDate: modified date. Date and time the record was last updated.. ['2013-08-30 00:00:00.0']. Default: getdate()
2488	works_cycles||PurchaseOrderDetail||PurchaseOrderID: Purchase Order ID. Purchase order number.
2489	works_cycles||PurchaseOrderDetail||PurchaseOrderDetailID: Purchase Orde rDetail ID. Unique purchase detail order.
2490	works_cycles||PurchaseOrderDetail||DueDate: Due Date. Date the product is expected to be received.. ['2014-06-25 00:00:00.0']
2491	works_cycles||PurchaseOrderDetail||OrderQty: Order Quantity. Quantity ordered.
2492	works_cycles||PurchaseOrderDetail||ProductID: Product ID. The id number identifying products.
2493	works_cycles||PurchaseOrderDetail||UnitPrice: Unit Price. Vendor's selling price of a single product.
2494	works_cycles||PurchaseOrderDetail||LineTotal: Line Total. Per product subtotal. Computed as OrderQty * UnitPrice. Computed: isnull([OrderQty]*[UnitPrice],(0.00))
2495	works_cycles||PurchaseOrderDetail||ReceivedQty: Quantity actually received from the vendor.
2496	works_cycles||PurchaseOrderDetail||RejectedQty: 
2497	works_cycles||PurchaseOrderDetail||StockedQty: 
2498	works_cycles||PurchaseOrderDetail||ModifiedDate: . ['2014-06-18 00:00:00.0']
2499	works_cycles||WorkOrder||WorkOrderID: Work Order ID. The unique id number identifying work order.
2500	works_cycles||WorkOrder||ProductID: Product ID. Product identification number.
2501	works_cycles||WorkOrder||OrderQty: Order Quantity. Product quantity to build.
2502	works_cycles||WorkOrder||StockedQty: Stocked Quantity. Quantity built and put in inventory.. Computed: isnull([OrderQty]-[ScrappedQty],(0))
2503	works_cycles||WorkOrder||ScrappedQty: Scrapped Quantity. Quantity that failed inspection.
2504	works_cycles||WorkOrder||StartDate: Start Date. Work order start date.. ['2013-07-03 00:00:00.0']
2505	works_cycles||WorkOrder||EndDate: End Date. Work order end date.. ['2014-04-13 00:00:00.0']
2506	works_cycles||WorkOrder||DueDate: Due Date. Work order due date.. ['2013-07-14 00:00:00.0']
2507	works_cycles||WorkOrder||ScrapReasonID: Scrap Reason ID. Reason for inspection failure.
2508	works_cycles||WorkOrder||ModifiedDate: modified date. Date and time the record was last updated.. ['2014-04-13 00:00:00.0']. Default: getdate()
2509	works_cycles||WorkOrderRouting||WorkOrderID: The id number of work order.
2510	works_cycles||WorkOrderRouting||ProductID: The id number identifying products.
2511	works_cycles||WorkOrderRouting||OperationSequence: Operation Sequence. Indicates the manufacturing process sequence.. [6, 7, 1, 2, 3]
2512	works_cycles||WorkOrderRouting||LocationID: Location ID. Manufacturing location where the part is processed.. [50, 60, 10, 20, 30]
2513	works_cycles||WorkOrderRouting||ScheduledStartDate: Scheduled Start Date. Planned manufacturing start date.. ['2013-07-03 00:00:00.0']
2514	works_cycles||WorkOrderRouting||ScheduledEndDate: Scheduled End Date. Planned manufacturing end date.. ['2013-07-14 00:00:00.0']
2515	works_cycles||WorkOrderRouting||ActualStartDate: Actual Start Date. Actual start date.. ['2014-04-17 00:00:00.0']
2516	works_cycles||WorkOrderRouting||ActualEndDate: Actual end date.. ['2014-06-01 00:00:00.0']
2517	works_cycles||WorkOrderRouting||ActualResourceHrs: Actual Resource Hours. Number of manufacturing hours used.. [3.0, 4.0, 4.1, 3.5, 2.0]
2518	works_cycles||WorkOrderRouting||PlannedCost: Planned Cost. Estimated manufacturing cost.. [36.75, 49.0, 92.25, 87.5, 14.5]
2519	works_cycles||WorkOrderRouting||ActualCost: Actual manufacturing cost.. [36.75, 49.0, 92.25, 87.5, 14.5]
2520	works_cycles||WorkOrderRouting||ModifiedDate: modified date. Date and time the record was last updated.. ['2014-06-01 00:00:00.0']. Default: getdate()
2521	works_cycles||Customer||CustomerID: Customer ID. The unique id number identifying the customer.
2522	works_cycles||Customer||PersonID: Person ID. The id number identifying the person.
2523	works_cycles||Customer||StoreID: Store ID. The id number identifying the store / bussiness entity.
2524	works_cycles||Customer||TerritoryID: Territory ID. ID of the territory in which the customer is located.
2525	works_cycles||Customer||AccountNumber: Account Number. Unique number identifying the customer assigned by the accounting system.. Computed: isnull('AW'+[ufnLeadingZeros]([CustomerID]),'')
2526	works_cycles||Customer||rowguid: Uniquely identifying the record. Used to support a merge replication sample.. Default: newid()
2527	works_cycles||Customer||ModifiedDate: modified date. Date and time the record was last updated.. Default: getdate()
2528	works_cycles||ProductListPriceHistory||ProductID: Product ID. Product identification number.
2529	works_cycles||ProductListPriceHistory||StartDate: Start Date. List price start date.. ['2013-05-30 00:00:00.0']
2530	works_cycles||ProductListPriceHistory||EndDate: End Date. List price end date.. [None, '2013-05-29 00:00:00.0']
2531	works_cycles||ProductListPriceHistory||ListPrice: Product list price.
2532	works_cycles||ProductListPriceHistory||ModifiedDate: modified date. Date and time the record was last updated.. ['2013-05-09 00:00:00.0']. Default: getdate()
2533	works_cycles||Address||AddressID: address id. Unique id number identifying the address.. Primary key for Address records. Identity / Auto increment column.
2534	works_cycles||Address||AddressLine1: address line 1. First street address line.. ['Attaché de Presse', 'Midi-Couleurs', '88, avenue de l´ Union Centrale', '6, route de Marseille', 'Helsenbergbogen 6']
2535	works_cycles||Address||AddressLine2: address line 2. Second street address line.. [None, 'Verkaufsabteilung', 'Einkaufsabteilung', '# 1', 'Kreditorenbuchhaltung', '# 2']. commonsense evidence: 1. total address = (AddressLine1+AddressLine2)  2. if AddressLine2 is not null, it means the address is too long
2536	works_cycles||Address||City: Name of the city.. ['London', 'Paris', 'Burien', 'Concord', 'Bellingham']
2537	works_cycles||Address||StateProvinceID: state province id. Identification number for the state or province.
2538	works_cycles||Address||PostalCode: postal code. Postal code for the street address.. ['98168', '94519', '98225', '97005', '91910']
2539	works_cycles||Address||SpatialLocation: spatial location. Latitude and longitude of this address.
2540	works_cycles||Address||rowguid: Uniquely identifying the record. Used to support a merge replication sample.. ['00093F9C-0487-4723-B376-D90FF565AD6F', '000A2255-2D8E-4D99-B82F-7013B256EE31', '000A5A3E-E89A-4B5D-A3F8-3D8595D8A7F0', '000C1336-7B16-4B99-9F69-B1CA69B45D2E', '000FC29E-7ADD-4B1D-AC49-32A14FACA797']. Default: newid()
2541	works_cycles||Address||ModifiedDate: modified date. Date and time the record was last updated.. ['2013-12-21 10:09:29.0']. Default: getdate()
2542	works_cycles||AddressType||AddressTypeID: address type id. Unique numbers identifying address type records.. [1, 2, 3, 4, 5]. Primary key for AddressType records. Identity / Auto increment column.
2543	works_cycles||AddressType||Name: Address type description.. ['Archive', 'Billing', 'Home', 'Main Office', 'Primary']
2544	works_cycles||AddressType||rowguid: Uniquely identifying the record. Used to support a merge replication sample.. ['24CB3088-4345-47C4-86C5-17B535133D1E', '41BC2FF6-F0FC-475F-8EB9-CEC0805AA0F2', '8EEEC28C-07A2-4FB9-AD0A-42D4A0BBC575', 'A67F238A-5BA2-444B-966C-0467ED9C427F', 'B29DA3F8-19A3-47DA-9DAA-15C84F4A83A5']. Default: newid()
2545	works_cycles||AddressType||ModifiedDate: modified date. Date and time the record was last updated.. ['2008-04-30 00:00:00.0']. Default: getdate()
2546	works_cycles||BillOfMaterials||BillOfMaterialsID: bill of materials id. The unique number identifying bill of materials.. Primary key for BillOfMaterials records. Identity / Auto increment column.
2547	works_cycles||BillOfMaterials||ProductAssemblyID: product assembly id. Parent product identification number.
2548	works_cycles||BillOfMaterials||ComponentID: component ID. Component identification number.
2549	works_cycles||BillOfMaterials||StartDate: start date. Date the component started being used in the assembly item.. ['2010-03-18 00:00:00.0']
2550	works_cycles||BillOfMaterials||EndDate: end date. Date the component stopped being used in the assembly item.. [None, '2010-07-25 00:00:00.0']. commonsense evidence: 1. assembly item duration = (EndDate - StartDate)  2. if EndDate is null, it means the assembly item doesn't finish (still going on).
2551	works_cycles||BillOfMaterials||UnitMeasureCode: unit measure code. Standard code identifying the unit of measure for the quantity.. ['EA', 'OZ', 'IN']
2552	works_cycles||BillOfMaterials||BOMLevel: bill of materials level. Indicates the depth the component is from its parent (column2)(AssemblyID).. [1, 2, 0, 3, 4]
2553	works_cycles||BillOfMaterials||PerAssemblyQty: per assembly quantity. Quantity of the component needed to create the assembly.
2554	works_cycles||BillOfMaterials||ModifiedDate: modified date. Date and time the record was last updated.. ['2010-03-04 00:00:00.0']. Default: getdate()
2555	works_cycles||BusinessEntity||BusinessEntityID: business entity id. Unique number of identifying business entity.. Primary key for all customers, vendors, and employees. Identity / Auto increment column
2556	works_cycles||BusinessEntity||rowguid: Uniquely identifying the record. Used to support a merge replication sample.. ['00021813-91EF-4A97-9682-0D2AC8C9EA97', '000392B5-933E-4BFF-945B-FF50AABBB7C0', '00046B88-5FAB-4922-B671-C080FD04CDC9', '0004ADE5-82E5-41CC-8EFB-FC27AF8E555E', '000BB0A8-4767-4AD7-B0C3-AD1B58239802']. Default: newid()
2557	works_cycles||BusinessEntity||ModifiedDate: modified date. Date and time the record was last updated.. ['2017-12-13 13:21:45.0']. Default: getdate()
2558	works_cycles||ContactType||ContactTypeID: Contact Type ID. The unique id number identifying the contact type ID.
2559	works_cycles||ContactType||Name: Contact type description.. ['Accounting Manager', 'Assistant Sales Agent', 'Assistant Sales Representative', 'Coordinator Foreign Markets', 'Export Administrator']
2560	works_cycles||ContactType||ModifiedDate: modified date. Date and time the record was last updated.. ['2008-04-30 00:00:00.0']. Default: getdate()
2561	works_cycles||CurrencyRate||CurrencyRateID: Currency Rate ID. The unique id number identifying the currency rate record.
2562	works_cycles||CurrencyRate||CurrencyRateDate: Currency Rate Date. Date and time the exchange rate was obtained.. ['2011-05-31 00:00:00.0']
2563	works_cycles||CurrencyRate||FromCurrencyCode: From Currency Code. Exchange rate was converted from this currency code.. ['USD']
2564	works_cycles||CurrencyRate||ToCurrencyCode: Exchange rate was converted to this currency code.. ['VEB', 'USD', 'SAR', 'MXN', 'JPY']
2565	works_cycles||CurrencyRate||AverageRate: Average Rate. Average exchange rate for the day.
2566	works_cycles||CurrencyRate||EndOfDayRate: End Of Day Rate. Final exchange rate for the day.
2567	works_cycles||CurrencyRate||ModifiedDate: modified date. Date and time the record was last updated.. ['2014-01-02 17:39:45.0']. Default: getdate()
2568	works_cycles||Department||DepartmentID: Department ID. The unique id number identifying the department.
2569	works_cycles||Department||Name: Name of the department.. ['Document Control', 'Engineering', 'Executive', 'Facilities and Maintenance', 'Finance']
2570	works_cycles||Department||GroupName: Group Name. Name of the group to which the department belongs.. ['Executive General and Administration', 'Research and Development', 'Sales and Marketing', 'Quality Assurance', 'Manufacturing']
2571	works_cycles||Department||ModifiedDate: modified date. Date and time the record was last updated.. ['2008-04-30 00:00:00.0']. Default: getdate()
2572	works_cycles||EmployeeDepartmentHistory||BusinessEntityID: Business Entity ID. Employee identification number.
2573	works_cycles||EmployeeDepartmentHistory||DepartmentID: DepartmentI D. Department in which the employee worked including currently.
2574	works_cycles||EmployeeDepartmentHistory||ShiftID: Shift ID. Identifies which 8-hour shift the employee works.. [1, 2, 3]
2575	works_cycles||EmployeeDepartmentHistory||StartDate: Start Date. Date the employee started working in the department.. ['2011-05-31']
2576	works_cycles||EmployeeDepartmentHistory||EndDate: End Date. Date the employee ended working in the department.. [None, '2013-11-13']
2577	works_cycles||EmployeeDepartmentHistory||ModifiedDate: modified date. Date and time the record was last updated.. ['2011-05-30 00:00:00.0']. Default: getdate()
2578	works_cycles||EmployeePayHistory||BusinessEntityID: Business Entity ID. Employee identification number.
2579	works_cycles||EmployeePayHistory||RateChangeDate: Rate Change Date. Date the change in pay is effective.. ['2011-05-31 00:00:00.0']
2580	works_cycles||EmployeePayHistory||Rate: Salary hourly rate.
2581	works_cycles||EmployeePayHistory||PayFrequency: Pay Frequency. Pay Frequency.. [1, 2]. 1 = Salary received monthly, 2 = Salary received biweekly
2582	works_cycles||EmployeePayHistory||ModifiedDate: modified date. Date and time the record was last updated.. ['2014-06-30 00:00:00.0']. Default: getdate()
2583	works_cycles||JobCandidate||JobCandidateID: Job Candidate ID. The unique id number identifying the job candidates.
2584	works_cycles||JobCandidate||BusinessEntityID: Business Entity ID. Employee identification number if applicant was hired.. [None, 274, 212]
2585	works_cycles||JobCandidate||Resume: Rsum in XML format.
2586	works_cycles||JobCandidate||ModifiedDate: modified date. Date and time the record was last updated.. ['2007-06-23 00:00:00.0']. Default: getdate()
2587	works_cycles||Location||LocationID: Location ID. The unique id number identifying the job candidates.
2588	works_cycles||Location||Name: Location description.. ['Debur and Polish', 'Final Assembly', 'Finished Goods Storage', 'Frame Forming', 'Frame Welding']
2589	works_cycles||Location||CostRate: Cost Rate. Standard hourly cost of the manufacturing location.. [0.0, 12.25, 25.0, 22.5, 18.0]. Default: 0.00
2590	works_cycles||Location||Availability: Work capacity (in hours) of the manufacturing location.. [0.0, 120.0, 108.0, 96.0, 80.0]. Default: 0.00
2591	works_cycles||Location||ModifiedDate: modified date. Date and time the record was last updated.. ['2008-04-30 00:00:00.0']. Default: getdate()
2592	works_cycles||PhoneNumberType||PhoneNumberTypeID: Phone Number Type ID. The id number identifying the telephone number type records.. [1, 2, 3]
2593	works_cycles||PhoneNumberType||Name: Phone Number. Name of the telephone number type.. ['Work', 'Home', 'Cell']
2594	works_cycles||PhoneNumberType||ModifiedDate: modified date. Date and time the record was last updated.. ['2017-12-13 13:19:22.0']. Default: getdate()
2595	works_cycles||Product||ProductID: Product ID. The unique id number identifying the product.
2596	works_cycles||Product||Name: Name of the product.. ['AWC Logo Cap', 'Adjustable Race', 'All-Purpose Bike Stand', 'BB Ball Bearing', 'Bearing Ball']
2597	works_cycles||Product||ProductNumber: Product Number. The unique product identification number.. ['AR-5381', 'BA-8327', 'BB-7421', 'BB-8107', 'BB-9108']
2598	works_cycles||Product||MakeFlag: Make Flag. The source of product make.. [0, 1]. 0 = Product is purchased, 1 = Product is manufactured in-house. Default: 1
2599	works_cycles||Product||FinishedGoodsFlag: Finished Goods Flag. Whether the product is salable or not.. [1, 0]. 0 = Product is not a salable item. 1 = Product is salable. Default: 1
2600	works_cycles||Product||Color: [None, 'Black', 'Silver', 'Red', 'Yellow', 'Blue']. Product color.
2601	works_cycles||Product||SafetyStockLevel: Safety Stock Level. The minimum inventory quantity.. [500, 1000, 100, 4, 800]
2602	works_cycles||Product||ReorderPoint: Reorder Point. Inventory level that triggers a purchase order or work order.. [375, 750, 75, 3, 600]
2603	works_cycles||Product||StandardCost: Standard Cost. Standard cost of the product.
2604	works_cycles||Product||ListPrice: List Price. Selling price. commonsense evidence:  profit = ListPrice - StandardCost
2605	works_cycles||Product||Size: Product size. [None, '44', '48', '52', '58', '42']
2606	works_cycles||Product||SizeUnitMeasureCode: Size Unit Measure Code. Unit of measure for Size column.. [None, 'CM']
2607	works_cycles||Product||WeightUnitMeasureCode: Weight Unit Measure Code. Unit of measure for Weight column.. [None, 'LB', 'G']
2608	works_cycles||Product||Weight: Product weight
2609	works_cycles||Product||DaysToManufacture: Days To Manufacture. Number of days required to manufacture the product.. [0, 1, 4, 2]
2610	works_cycles||Product||ProductLine: Product Line. Product Routine. [None, 'R', 'M', 'T', 'S']. R = Road, M = Mountain, T = Touring, S = Standard
2611	works_cycles||Product||Class: Product quality class. [None, 'L', 'H', 'M']. H = High, M = Medium, L = Low
2612	works_cycles||Product||Style: [None, 'U', 'W', 'M']. W = Womens, M = Mens, U = Universal
2613	works_cycles||Product||ProductSubcategoryID: Product Subcategory ID. Product is a member of this product subcategory.
2614	works_cycles||Product||ProductModelID: Product Model ID. Product is a member of this product model.
2615	works_cycles||Product||SellStartDate: Sell Start Date. Date the product was available for sale.. ['2008-04-30 00:00:00.0']
2616	works_cycles||Product||SellEndDate: Sell End Date. Date the product was no longer available for sale.. [None, '2013-05-29 00:00:00.0']
2617	works_cycles||Product||DiscontinuedDate: Discontinued Date. Date the product was discontinued.
2618	works_cycles||Product||rowguid: Uniquely identifying the record. Used to support a merge replication sample.. ['01A8C3FC-ED52-458E-A634-D5B6E2ACCFED', '01C901E3-4323-48ED-AB9E-9BFDA28BDEF6', '02935111-A546-4C6D-941F-BE12D42C158E', '02C48826-21AD-41F3-85A6-BC9A85A4DCE4', '040A4B7D-4060-4507-AA92-7508B434797E']. Default: newid()
2619	works_cycles||Product||ModifiedDate: modified date. Date and time the record was last updated.. ['2014-02-08 10:01:36.0']. Default: getdate()
2620	works_cycles||Document||DocumentNode: Document Node. The unique hierarchy id identifying the document nodes.. ['/', '/1/', '/1/1/', '/1/2/', '/2/']
2621	works_cycles||Document||DocumentLevel: Document Level. Depth in the document hierarchy.. [2, 1, 0]. Computed: [DocumentNode].[GetLevel]()
2622	works_cycles||Document||Title: Title of the document.. ['Training Wheels 2', 'Seat Assembly', 'Repair and Service Guidelines', 'Overview', 'Maintenance']
2623	works_cycles||Document||Owner: Employee who controls the document.. [220, 219, 217]
2624	works_cycles||Document||FolderFlag: Folder Flag. The type of the folders.. [0, 1]. 0 = This is a folder, 1 = This is a document. Default: 0
2625	works_cycles||Document||FileName: File Name. Uniquely identifying the record. Used to support a merge replication sample.. File name of the document
2626	works_cycles||Document||FileExtension: File Extension. File extension indicating the document type.. ['.doc']
2627	works_cycles||Document||Revision: Revision number of the document.. ['0', '1', '8', '4', '3']
2628	works_cycles||Document||ChangeNumber: Change Number. Engineering change approval number.. [0, 288, 55, 32, 28]
2629	works_cycles||Document||Status: Status of document processing.. [2, 1, 3]. 1 = Pending approval, 2 = Approved, 3 = Obsolete
2630	works_cycles||Document||DocumentSummary: Document Summary. Document abstract.. commonsense evidence: if no document Summary: it means this document is private
2631	works_cycles||Document||Document: Complete document.
2632	works_cycles||Document||rowguid: Uniquely identifying the record. Used to support a merge replication sample.. ['26A266F1-1D23-40E2-AF48-6AB8D954FE37', '27CF33AF-C338-4842-966C-75CA11AAA6A3', '2A8BD319-36FB-4FBA-9E07-E303839F1974', '48265174-8451-4967-973A-639C2276CFAF', '5184D96A-EE8C-499A-9316-625496784DE6']. Default: newid()
2633	works_cycles||Document||ModifiedDate: modified date. Date and time the record was last updated.. ['2013-05-30 00:00:00.0']. Default: getdate()
2634	works_cycles||StateProvince||StateProvinceID: State Province ID. The unique number for StateProvince records.
2635	works_cycles||StateProvince||StateProvinceCode: State Province Code. ISO standard state or province code.. ['01', '02', '03', '04', '05']
2636	works_cycles||StateProvince||CountryRegionCode: Country Region Code. ISO standard country or region code.. ['FR', 'US', 'CA', 'DE', 'AU']
2637	works_cycles||StateProvince||IsOnlyStateProvinceFlag: Is Only State Province Flag. . [0, 1]. 0 = StateProvinceCode exists.  1 = StateProvinceCode unavailable, using CountryRegionCode.  Default: 1.  commonsense evidence: To ask whether the StateProvinceCode exists or not.
2638	works_cycles||StateProvince||Name: State or province description.. ['Ain', 'Aisne', 'Alabama', 'Alaska', 'Alberta']
2639	works_cycles||StateProvince||TerritoryID: Territory ID. ID of the territory in which the state or province is located.. [7, 3, 2, 6, 5]
2640	works_cycles||StateProvince||rowguid: Uniquely identifying the record. Used to support a merge replication sample.. ['00723E00-C976-401D-A92B-E582DF3D6E01', '01CEC802-20CE-4F96-B475-2AD263CEA9D0', '0374FD8E-3A19-4A9B-BB9E-DB5871503AFE', '08A673DC-6056-45B2-903C-976E8B6BD0B9', '092C7063-901E-414B-BC61-0BF7919DA883']. Default: newid()
2641	works_cycles||StateProvince||ModifiedDate: modified date. Date and time the record was last updated.. ['2008-04-30 00:00:00.0']. Default: getdate()
2642	works_cycles||CreditCard||CreditCardID: Credit Card ID. The unique id number identifying the credit card.
2643	works_cycles||CreditCard||CardType: Card Type. Credit card name.. ['SuperiorCard', 'Distinguish', 'ColonialVoice', 'Vista']
2644	works_cycles||CreditCard||CardNumber: Card Number. Credit card number.. ['11111000471254', '11111002034157', '11111005230447', '11111007955171', '11111009772675']
2645	works_cycles||CreditCard||ExpMonth: Expiration Month. Credit card expiration month.
2646	works_cycles||CreditCard||ExpYear: Expiration Year. Credit card expiration year.. [2007, 2006, 2005, 2008]
2647	works_cycles||CreditCard||ModifiedDate: modified date. Date and time the record was last updated.. ['2013-07-31 00:00:00.0']. Default: getdate()
2648	works_cycles||SalesOrderHeader||SalesOrderID: Sales Order ID. The id number of sales order.
2649	works_cycles||SalesOrderHeader||RevisionNumber: . [8, 9]
2650	works_cycles||SalesOrderHeader||OrderDate: Order Date. . ['2014-03-31 00:00:00.0']
2651	works_cycles||SalesOrderHeader||DueDate: . ['2014-04-12 00:00:00.0']
2652	works_cycles||SalesOrderHeader||ShipDate: Ship Date. Estimated shipment date from the vendor. ['2014-04-07 00:00:00.0']
2653	works_cycles||SalesOrderHeader||Status: Order current status. [5]. 1 = Pending; 2 = Approved; 3 = Rejected; 4 = Complete Default: 1
2654	works_cycles||SalesOrderHeader||OnlineOrderFlag: . [1, 0]
2655	works_cycles||SalesOrderHeader||SalesOrderNumber: . ['SO43659', 'SO43660', 'SO43661', 'SO43662', 'SO43663']
2656	works_cycles||SalesOrderHeader||PurchaseOrderNumber: . [None, 'PO9976195169', 'PO9976183547', 'PO9976177161', 'PO9976170932', 'PO9976143255']
2657	works_cycles||SalesOrderHeader||AccountNumber: . ['10-4030-011176', '10-4030-011091', '10-4030-011711', '10-4030-011331', '10-4030-011330']
2658	works_cycles||SalesOrderHeader||CustomerID: 
2659	works_cycles||SalesOrderHeader||SalesPersonID: 
2660	works_cycles||SalesOrderHeader||TerritoryID: . [9, 4, 1, 6, 10]
2661	works_cycles||SalesOrderHeader||BillToAddressID: 
2662	works_cycles||SalesOrderHeader||ShipToAddressID: 
2663	works_cycles||SalesOrderHeader||ShipMethodID: Ship Method ID. Shipping method. [1, 5]
2664	works_cycles||SalesOrderHeader||CreditCardID: 
2665	works_cycles||SalesOrderHeader||CreditCardApprovalCode: . [None, '98795Vi7192', '98794Vi14256', '98792Vi7192', '98791Vi7192', '98787Vi7192']
2666	works_cycles||SalesOrderHeader||CurrencyRateID: 
2667	works_cycles||SalesOrderHeader||SubTotal: 
2668	works_cycles||SalesOrderHeader||TaxAmt: Tax Amount. Tax amount
2669	works_cycles||SalesOrderHeader||Freight: Shipping cost
2670	works_cycles||SalesOrderHeader||TotalDue: Total Due. Total due to vendor
2671	works_cycles||SalesOrderHeader||Comment: 
2672	works_cycles||SalesOrderHeader||rowguid: . ['0000DE87-AB3F-4920-AC46-C404834241A0', '00032DF7-5D34-4ECC-9BC2-353D3C918E93', '0004E1D8-4756-4CBE-9F38-C1D8B3E47130', '0007D2E3-1BC0-4DB4-BDFC-AF4B9FEB6A9A', '0008C5D1-3847-4F47-BD7E-70A83FF81835']
2673	works_cycles||SalesOrderHeader||ModifiedDate: modified date. Date and time the record was last updated.. ['2014-04-07 00:00:00.0']. Default: getdate()
2674	image_and_language||ATT_CLASSES||ATT_CLASS_ID: ATTRIBUTE CLASS ID. the unique attribute class ids
2675	image_and_language||ATT_CLASSES||ATT_CLASS: ATTRIBUTE CLASS. the corresponding classes for attributes. ['zebra s', 'zebra', 'young', 'yellow', 'written']
2676	image_and_language||OBJ_CLASSES||OBJ_CLASS_ID: OBJECT CLASS ID. unique id number identifying object classes
2677	image_and_language||OBJ_CLASSES||OBJ_CLASS: OBJECT CLASS. the explanation about object classes. ['zebra', 'writing', 'wrist', 'words', 'wood']
2678	image_and_language||IMG_OBJ||IMG_ID: IMAGE ID. the id representing images
2679	image_and_language||IMG_OBJ||OBJ_SAMPLE_ID: OBJECT SAMPLE ID. the id of the object sample
2680	image_and_language||IMG_OBJ||OBJ_CLASS_ID: OBJECT CLASS ID. the id indicating class of the objects
2681	image_and_language||IMG_OBJ||X: x coordinate
2682	image_and_language||IMG_OBJ||Y: y coordinate
2683	image_and_language||IMG_OBJ||W: width of the bounding box of the object
2684	image_and_language||IMG_OBJ||H: height of the bounding box of the object. commonsense evidence:  bounding box of the object: (x, y, W, H)
2685	image_and_language||IMG_OBJ_ATT||IMG_ID: IMAGE ID. id number of each image
2686	image_and_language||IMG_OBJ_ATT||ATT_CLASS_ID: ATTRIBUTE CLASS ID. attribute class number for image. commonsense evidence:  if one IMG_ID has many ATT_CLASS_ID, it refers to that this image has multiple attributes
2687	image_and_language||IMG_OBJ_ATT||OBJ_SAMPLE_ID: OBJECT SAMPLE ID. object sample id. commonsense evidence:  â¢ if one IMG_ID has many OBJ_SAMPLE_ID, it refers to that this image has multiple objects  â¢ if one ATT_CLASS_ID has many OBJ_SAMPLE_ID, it refers to that this attribute is composed of multiple objects.
2688	image_and_language||PRED_CLASSES||PRED_CLASS_ID: PREDICTION CLASS ID. the unique prediction id for the class
2689	image_and_language||PRED_CLASSES||PRED_CLASS: PREDICTION CLASS. the caption for the prediction class id. ['written on', 'worn by', 'with', 'wears', 'wearing']
2690	image_and_language||IMG_REL||IMG_ID: IMAGE ID. the image id
2691	image_and_language||IMG_REL||PRED_CLASS_ID: PREDICTION CLASS ID. the prediction relationship class between objects. commonsense evidence:  if OBJ1_SAMPLE_ID = OBJ2_SAMPLE_ID, this relationship is the self-relation.
2692	image_and_language||IMG_REL||OBJ1_SAMPLE_ID: OBJECT1 SAMPLE ID. the sample id of the first object
2693	image_and_language||IMG_REL||OBJ2_SAMPLE_ID: OBJECT2 SAMPLE ID. the sample id of the second object. commonsense evidence:  if (OBJ1_SAMPLE_ID, OBJ2_SAMPLE_ID) has multiple PRED_CLASS_ID, it means these two objects have multiple relations.
2694	"hockey||AwardsMisc||name: unique name of awards. ['1960 U.S. Olympic Hockey Team', ""1998 U.S. Olympic Women's Hockey Team"", 'Al Arbour', 'Alex Delvecchio', 'Art Berglund']. unique name of awards"
2695	hockey||AwardsMisc||ID: id number of players or coaches, etc.. [None, 'ziegljo01h', 'yzermst01', 'wirtzwi01h', 'wirtzar01h', 'weilaco01']
2696	hockey||AwardsMisc||award: awarder. ['Patrick']. not useful
2697	hockey||AwardsMisc||year: year of the award
2698	hockey||AwardsMisc||lgID: league ID. league abbreviated name. ['NHL']
2699	hockey||AwardsMisc||note: note if needed. [None, 'posthumous']. commonsense evidence:  noted information
2700	hockey||HOF||year: year of hall of fame
2701	hockey||HOF||hofID: hall of fame id. ['abelsi01h', 'adamsch01h', 'adamsja01h', 'adamswe01h', 'ahearbu01h']
2702	hockey||HOF||name: ['Harry Watson', 'Yvan Cournoyer', 'Woody Dumart', 'William Wirtz', 'William Tutt']
2703	hockey||HOF||category: ['Player', 'Builder', 'Referee/Linesman']
2704	hockey||Teams||year: 
2705	hockey||Teams||lgID: league ID. league ID number. ['NHL', 'WHA', 'NHA', 'PCHA', 'WCHL']
2706	hockey||Teams||tmID: team ID. ['MTL', 'BOS', 'NYR', 'CHI', 'TOR']
2707	hockey||Teams||franchID: Franchise ID. ['MTL', 'TOR', 'BOS', 'NYR', 'DET']
2708	hockey||Teams||confID: Conference ID. [None, 'EC', 'WC', 'WA', 'CC']. see abbrev.csv for details
2709	hockey||Teams||divID: Division ID. [None, 'PT', 'AT', 'SM', 'PC', 'NO']. see abbrev.csv for details
2710	hockey||Teams||rank: Final standing. [1, 2, 3, 4, 5]
2711	hockey||Teams||playoff: playoff results. [None, 'CQF', 'SF', 'SC', 'F', 'DSF']
2712	hockey||Teams||G: games
2713	hockey||Teams||W: wins
2714	hockey||Teams||L: loses
2715	hockey||Teams||T: ties
2716	hockey||Teams||OTL: Overtime losses. [None, '6', '8', '4', '11', '9']
2717	hockey||Teams||Pts: points
2718	hockey||Teams||SoW: Shootout wins. [None, '4', '5', '6', '3', '7']
2719	hockey||Teams||SoL: Shootout loses. [None, '6', '5', '4', '7', '3']
2720	hockey||Teams||GF: Goals for
2721	hockey||Teams||GA: Goals against. goals against
2722	hockey||Teams||name: Full team name. ['Montreal Canadiens', 'Boston Bruins', 'New York Rangers', 'Toronto Maple Leafs', 'Detroit Red Wings']
2723	hockey||Teams||PIM: Penalty minutes. [None, '1301', '1062', '978', '977', '954']
2724	hockey||Teams||BenchMinor: Bench minors (minutes). [None, '16', '10', '12', '14', '18']. commonsense evidence:  A bench minor penalty is a minor penalty committed by a player or coach that is not on the ice. It is like a minor penalty in that it calls for the offending player to serve two minutes in the penalty box.
2725	hockey||Teams||PPG: Power play goals. [None, '52', '51', '60', '57', '55']
2726	hockey||Teams||PPC: Power play chances. [None, '316', '301', '374', '363', '289']. commonsense evidence:  power play percentage (PP%) = PPG / PPC
2727	hockey||Teams||SHA: Shorthanded goals against. [None, '7', '8', '9', '6', '4']
2728	hockey||Teams||PKG: Power play goals against. [None, '55', '58', '53', '49', '51']
2729	hockey||Teams||PKC: Penalty kill chances. [None, '336', '319', '311', '351', '330']
2730	hockey||Teams||SHF: Shorthanded goals for. [None, '7', '8', '6', '9', '5']
2731	hockey||Coaches||coachID: coach ID. number identifying coaches. ['bowmasc01c', 'irvindi01c', 'patrile01c', 'arboual01c', 'adamsja01c']. number identifying coaches
2732	hockey||Coaches||year: In which year did the coach teach this team
2733	hockey||Coaches||tmID: team ID. team abbreviated name. ['MTL', 'NYR', 'CHI', 'BOS', 'TOR']
2734	hockey||Coaches||lgID: league ID. league abbreviated name. ['NHL', 'WHA', 'NHA', 'PCHA', 'WCHL']
2735	hockey||Coaches||stint: [1, 2, 3]
2736	hockey||Coaches||notes: note if needed. [None, 'interim', 'co-coach with Dave Lewis', 'co-coach with Barry Smith']. commonsense evidence:  noted information
2737	hockey||Coaches||g: games. number of games
2738	hockey||Coaches||w: wins. number of wins. commonsense evidence:  winning rates = wins / (wins + loses)
2739	hockey||Coaches||l: loses. number of loses
2740	hockey||Coaches||t: ties. number of ties
2741	hockey||Coaches||postg: post-season games. number of post-season games. [None, '6', '5', '7', '4', '2']
2742	hockey||Coaches||postw: post-season wins. number of post-season wins. [None, '2', '0', '1', '3', '5']
2743	hockey||Coaches||postl: post-season loses. number of post-season loses. [None, '4', '3', '6', '7', '5']
2744	hockey||Coaches||postt: post-season ties. number of post-season ties. [None, '0', '1', '2', '4', '3']
2745	hockey||AwardsCoaches||coachID: coach ID. string ID of the coach. ['irvindi01c', 'patrile01c', 'rossar01c', 'burnspa01c', 'adamsja01c']
2746	hockey||AwardsCoaches||award: awards that the coach achieve. ['Jack Adams', 'Second Team All-Star', 'First Team All-Star', 'Schmertz', 'Baldwin']
2747	hockey||AwardsCoaches||year: year of award
2748	hockey||AwardsCoaches||lgID: league ID. league abbreviated name. ['NHL', 'WHA']
2749	hockey||AwardsCoaches||note: 
2750	hockey||Master||playerID: id number identifying the player. [None, 'zyuzian01', 'zunicru01', 'zukwa01', 'zukemi01', 'zuckeja01']
2751	hockey||Master||coachID: coach ID. coach id number. [None, 'youngwe02c', 'youngga01c', 'yeomi01c', 'yawnetr01c', 'wilsoro02c']. commonsense evidence: if a person has both playerID and coachID, it means this person becomes coach after retirement.
2752	hockey||Master||hofID: hall of fame id. [None, 'ziegljo01h', 'yzermst01h', 'wortero01h', 'worslgu01h', 'wirtzwi01h']
2753	hockey||Master||firstName: first name. [None, 'Mike', 'Bob', 'John', 'Bill', 'Jim']
2754	hockey||Master||lastName: last name. ['Smith', 'Brown', 'Wilson', 'Johnson', 'Murray']
2755	hockey||Master||nameNote: name note. note about name. [None, 'born Tselios', 'born Guoth', 'born Bodnarchuk', 'also listed as Bourdginon', 'also known as Wochy']
2756	hockey||Master||nameGiven: name given. Given name. [None, 'Michael', 'Robert', 'John', 'James', 'David']
2757	"hockey||Master||nameNick: Nickname. [None, 'Red', 'Moose', 'Rocky', 'Killer', 'Doc']. (multiple entries separated by ""/"")"
2758	hockey||Master||height: [None, '72', '71', '73', '74', '70']
2759	hockey||Master||weight: [None, '185', '190', '180', '200', '195']
2760	hockey||Master||shootCatch: shoot catch. Shooting hand (or catching hand for goalies). [None, 'L', 'R', 'B']. commonsense evidence:  Shooting hand (or catching hand for goalies) L: left hand R: right hand if null or 'empty', it means this player is good at both left and right hand
2761	hockey||Master||legendsID: legends ID. ID at Legends Of Hockey. [None, 'P200904', 'P200903', 'P200902', 'P200901', 'P200802']
2762	hockey||Master||ihdbID: Internet Hockey Database ID. ID at the Internet Hockey Database. [None, '9999', '9998', '9996', '9995', '9994']
2763	hockey||Master||hrefID: Hockey-Reference.com ID. ID at Hockey-Reference.com. [None, 'zyuzian01', 'zunicru01', 'zukwa01', 'zukemi01', 'zuckeja01']
2764	hockey||Master||firstNHL: First NHL season. [None, '2005', '1979', '2008', '2003', '1981']
2765	hockey||Master||lastNHL: Last NHL season. [None, '2011', '2003', '2010', '2005', '2002']
2766	hockey||Master||firstWHA: First WHA season. [None, '1972', '1974', '1975', '1978', '1973']
2767	hockey||Master||lastWHA: Last WHA season. [None, '1978', '1975', '1977', '1976', '1974']
2768	"hockey||Master||pos: position. . [None, 'D', 'C', 'L', 'R', 'G']. commonsense evidence: LW: left winger RW: right winger C: center G: goalie D: defenseman W: winger F: forward the player with W (winger) means he can play the role as both LW (left winger) and RW (right winger) some players have two positions, which will be shown as ""L/D"". It means that LW + D --> left winger and defenseman"
2769	hockey||Master||birthYear: birth Year. [None, '1975', '1980', '1966', '1967', '1984']
2770	hockey||Master||birthMon: birth Month. [None, '1', '3', '4', '2', '5']
2771	"hockey||Master||birthDay: birth Day. [None, '1', '28', '29', '11', '12']. commonsense evidence: the entire / detail birth date in this table is ""year"" / ""month"" / ""date"""
2772	hockey||Master||birthCountry: birth Country. [None, 'Canada', 'USA', 'Sweden', 'Czech Republic', 'Russia']
2773	hockey||Master||birthState: birth State. [None, 'ON', 'QC', 'AB', 'SK', 'MB']
2774	hockey||Master||birthCity: birth city. [None, 'Toronto', 'Montreal', 'Winnipeg', 'Edmonton', 'Ottawa']
2775	hockey||Master||deathYear: death year. [None, '9999', '2007', '2006', '2002', '1999']
2776	hockey||Master||deathMon: death month. [None, '5', '12', '8', '11', '1']
2777	hockey||Master||deathDay: death day. [None, '7', '15', '16', '12', '13']
2778	hockey||Master||deathCountry: death country. [None, 'Canada', 'USA', 'Russia', 'Czech Republic', 'Switzerland']
2779	hockey||Master||deathState: death state. [None, 'ON', 'QC', 'BC', 'AB', 'MB']
2780	hockey||Master||deathCity: death city. [None, 'Toronto', 'Ottawa', 'Winnipeg', 'Montreal', 'Calgary']
2781	hockey||AwardsPlayers||playerID: player id. string ID of players. ['gretzwa01', 'howego01', 'lemiema01', 'bourqra01', 'orrbo01']. unique string ID of the player
2782	hockey||AwardsPlayers||award: award name. ['First Team All-Star', 'Second Team All-Star', 'All-Rookie', 'Vezina', 'Art Ross']
2783	hockey||AwardsPlayers||year: year of award
2784	hockey||AwardsPlayers||lgID: league ID. league abbreviated name. ['NHL', 'WHA']
2785	hockey||AwardsPlayers||note: note if needed. [None, 'shared', 'tie', 'Scoring', 'Rookie', 'Most Gentlemanly']
2786	hockey||AwardsPlayers||pos: position. position of players. [None, 'D', 'G', 'C', 'RW', 'LW']. commonsense evidence:  LW: left winger RW: right winger C: center G: goalie D: defenseman W: winger F: forward  the player with W (winger) means he can play the role as both LW (left winger) and RW (right winger)
2787	hockey||CombinedShutouts||year: 
2788	hockey||CombinedShutouts||month: [11, 12, 2, 10, 3]
2789	"hockey||CombinedShutouts||date: day. commonsense evidence:  the entire date in this table is ""year"" / ""month"" / ""date"""
2790	hockey||CombinedShutouts||tmID: team ID. team abbreviated name. ['TOR', 'STL', 'SJS', 'MTL', 'PIT']
2791	hockey||CombinedShutouts||oppID: opposite team ID. Team ID of opponent. ['BOS', 'CAR', 'NYR', 'DET', 'WAS']
2792	"hockey||CombinedShutouts||R/P: regular / postseason. ['R', 'P']. R"" for regular season, or ""P"" for postseason"
2793	hockey||CombinedShutouts||IDgoalie1: ID of goalie 1. ID of first goalie. ['plantja01', 'nabokev01', 'vernomi01', 'schwaco01', 'herrode01']
2794	hockey||CombinedShutouts||IDgoalie2: ID of goalie 2. ID of second goalie. ['lowro01', 'sevigri01', 'legacma01', 'hodsoke01', 'hodgech01']
2795	hockey||Goalies||playerID: id number identifying the player. ['barrato01', 'burkese01', 'worslgu01', 'fuhrgr01', 'sawchte01']. number identifying players
2796	"hockey||Goalies||year: 2005-06 listed as ""2005"""
2797	"hockey||Goalies||stint: order of appearance in a season. [1, 2, 3]. commonsense evidence:  the entire date in this table is ""year"" / ""month"" / ""date"""
2798	hockey||Goalies||tmID: team ID. team abbreviated name. ['BOS', 'TOR', 'DET', 'MTL', 'NYR']
2799	hockey||Goalies||lgID: league ID. league abbreviated name. ['NHL', 'WHA', 'NHA', 'PCHA', 'WCHL']
2800	hockey||Goalies||GP: Games played. [None, '1', '2', '3', '4', '5']
2801	hockey||Goalies||Min: Minutes. Minutes of appearance. [None, '60', '120', '20', '240', '4200']
2802	hockey||Goalies||W: wins. [None, '0', '1', '2', '3', '4']
2803	hockey||Goalies||L: loses. [None, '1', '0', '2', '3', '5']
2804	hockey||Goalies||T/OL: Ties / overtime losses. [None, '0', '1', '2', '3', '4']
2805	"hockey||Goalies||ENG: Empty net goals. [None, '0', '1', '2', '3', '4']. commonsense evidence:  An empty net goal happens when a team scores against their opponent who has pulled their goalie. Since there is no goalie in the net, the net is considered empty"""
2806	hockey||Goalies||SHO: Shutouts. [None, '0', '1', '2', '3', '4']. commonsense evidence:  In ice hockey, a shutout (SHO) is credited to a goaltender who successfully stops the other team from scoring during the entire game.
2807	hockey||Goalies||GA: Goals against. [None, '3', '0', '4', '2', '1']. commonsense evidence:  Goals Against are the number of goals recorded while the goalie is on the ice. Include all goals against during regulation and overtime play.
2808	hockey||Goalies||SA: Shots against. [None, '8', '2', '35', '0', '14']. commonsense evidence:  Shot Against are the number of shots recorded while the goalie is on the ice
2809	hockey||Goalies||PostGP: Postseason games played. [None, '1', '2', '4', '3', '6']
2810	hockey||Goalies||PostMin: Postseason minutes. [None, '120', '60', '20', '180', '300']
2811	hockey||Goalies||PostW: Postseason wins. [None, '0', '1', '2', '3', '4']
2812	hockey||Goalies||PostL: Postseason loses. [None, '4', '1', '2', '0', '3']
2813	hockey||Goalies||PostT: Postseason ties. [None, '0', '1', '2', '4', '3']
2814	"hockey||Goalies||PostENG: Postseason empty net goals. [None, '0', '1', '2', '3', '5']. commonsense evidence:  An empty net goal happens when a team scores against their opponent who has pulled their goalie. Since there is no goalie in the net, the net is considered empty"""
2815	hockey||Goalies||PostSHO: Postseason Shutouts. [None, '0', '1', '2', '3', '4']. commonsense evidence:  In ice hockey, a shutout (SHO) is credited to a goaltender who successfully stops the other team from scoring during the entire game.
2816	hockey||Goalies||PostGA: Postseason Goals against. [None, '1', '5', '0', '8', '6']. commonsense evidence:  Goals Against are the number of goals recorded while the goalie is on the ice. Include all goals against during regulation and overtime play.
2817	hockey||Goalies||PostSA: Postseason Shots against. [None, '0', '6', '11', '9', '8']. commonsense evidence:  Shot Against are the number of shots recorded while the goalie is on the ice.
2818	hockey||GoaliesSC||playerID: id number identifying the player. ['holmeha01', 'lehmahu01', 'benedcl01', 'vezinge01', 'lindsbe01']. number identifying players
2819	"hockey||GoaliesSC||year: 2005-06 listed as ""2005"""
2820	hockey||GoaliesSC||tmID: team ID. team abbreviated name. ['VML', 'OTS', 'SEA', 'MTL', 'VIC']
2821	hockey||GoaliesSC||lgID: league ID. league abbreviated name. ['PCHA', 'NHL', 'NHA', 'WCHL']
2822	hockey||GoaliesSC||GP: Games played. [5, 4, 3, 2, 6]
2823	hockey||GoaliesSC||Min: Minutes. Minutes of appearance
2824	hockey||GoaliesSC||W: Wins. [3, 2, 0, 1, 5]
2825	hockey||GoaliesSC||L: Loses. [3, 2, 1, 0]
2826	hockey||GoaliesSC||T: Ties. [0, 1]
2827	hockey||GoaliesSC||SHO: Shutouts. [0, 1, 3, 2]. commonsense evidence: In ice hockey, a shutout (SHO) is credited to a goaltender who successfully stops the other team from scoring during the entire game.
2828	hockey||GoaliesSC||GA: Goals against. commonsense evidence: Goals Against are the number of goals recorded while the goalie is on the ice. Include all goals against during regulation and overtime play.
2829	hockey||GoaliesShootout||playerID: . ['rolosdw01', 'gigueje01', 'wardca01', 'vokouto01', 'thomati01']
2830	"hockey||GoaliesShootout||year: [2005, 2006, 2009, 2010, 2011]. 2005-06 listed as ""2005"""
2831	hockey||GoaliesShootout||stint: [1, 2]
2832	hockey||GoaliesShootout||tmID: team ID. team abbreviated name. ['NYI', 'TOR', 'STL', 'LAK', 'EDM']
2833	hockey||GoaliesShootout||W: Wins
2834	hockey||GoaliesShootout||L: Loses. [1, 2, 3, 0, 4]
2835	hockey||GoaliesShootout||SA: Shots against. commonsense evidence:  Shot Against are the number of shots recorded while the goalie is on the ice.
2836	hockey||GoaliesShootout||GA: Goals against. commonsense evidence:  Goals Against are the number of goals recorded while the goalie is on the ice. Include all goals against during regulation and overtime play.
2837	hockey||Scoring||playerID: player ID. ['howego01', 'recchma01', 'messima01', 'chelich01', 'sillimi01']
2838	hockey||Scoring||year: play year
2839	hockey||Scoring||stint: Stint (order of appearance in a season). [1, 2, 3, 4]
2840	hockey||Scoring||tmID: team id. ['MTL', 'BOS', 'NYR', 'TOR', 'DET']
2841	hockey||Scoring||lgID: league id. ['NHL', 'WHA', 'NHA', 'PCHA', 'WCHL']
2842	"hockey||Scoring||pos: position. [None, 'D', 'C', 'L', 'R', 'G']. commonsense evidence: LW: left winger RW: right winger C: center G: goalie D: defenseman W: winger F: forward the player with W (winger) means he can play the role as both LW (left winger) and RW (right winger) some players have two positions, which will be shown as ""L/D"". It means that LW + D --> left winger and defenseman"
2843	hockey||Scoring||GP: game played
2844	hockey||Scoring||G: goals
2845	hockey||Scoring||A: assists
2846	hockey||Scoring||Pts: points
2847	hockey||Scoring||PIM: Penalty minutes
2848	"hockey||Scoring||+/-: Plus / minus. [None, '0', '-1', '-2', '1', '-3']. commonsense evidence: The plus minus stat is used to determine how often a player is on the ice when a goal is scored for the team versus against the team. A positive plus minus means that the player has been on for more goals scored than against, while a negative number means they have been on for more against. In another words, higher ""+ / -"" means more importance to the team, lower means less importance"
2849	hockey||Scoring||PPG: Power play goals. [None, '0', '1', '2', '3', '4']. commonsense evidence: When a team with more players on the ice scores a goal it is known as a power play goal. Many goals are scored in power play situations as the team is able to keep possession of the puck and have more scoring chances.
2850	hockey||Scoring||PPA: Power play assists. [None, '0', '1', '2', '3', '4']
2851	hockey||Scoring||SHG: Shorthanded goals. [None, '0', '1', '2', '3', '4']. commonsense evidence:  Sometimes the team with fewer players on the ice known as the short-handed team will score a goal.
2852	hockey||Scoring||SHA: Shorthanded assists. [None, '0', '1', '2', '3', '4']
2853	hockey||Scoring||GWG: Game-winning goals. [None, '0', '1', '2', '3', '4']. commonsense evidence:  A game-winning goal (GWG) is the goal scored to put the winning team in excess of the losing team's final score. commonsense evidence: if a player gets more GWG, it means this player is more trustworthy in the critical moment.
2854	hockey||Scoring||GTG: Game-tying goals. [None, '0', '1', '2', '3', '4']. A game-tying goal (GWG) is the goal scored to put the winning team in the ties of the losing team's final score
2855	hockey||Scoring||SOG: Shots on goal. [None, '0', '1', '2', '3', '4']. commonsense evidence: a shot that enters the goal or would have entered the goal if it had not been blocked by the goalkeeper or another defensive player.
2856	hockey||Scoring||PostGP: Postseason games played. [None, '5', '6', '4', '2', '3']
2857	hockey||Scoring||PostG: Postseason goals. [None, '0', '1', '2', '3', '4']
2858	hockey||Scoring||PostA: Postseason assists. [None, '0', '1', '2', '3', '4']
2859	hockey||Scoring||PostPts: Postseason points. [None, '0', '1', '2', '3', '4']
2860	hockey||Scoring||PostPIM: Postseason penalty minutes. [None, '0', '2', '4', '6', '8']
2861	hockey||Scoring||Post+/-: Postseason Plus / minus. [None, '0', '-1', '-2', '1', '-3']
2862	hockey||Scoring||PostPPG: Postseason power play goals. [None, '0', '1', '2', '3', '4']
2863	hockey||Scoring||PostPPA: Postseason power play assists. [None, '0', '1', '2', '3', '4']
2864	hockey||Scoring||PostSHG: Postseason Shorthanded goals. [None, '0', '1', '2', '3']
2865	hockey||Scoring||PostSHA: Postseason Shorthanded assists. [None, '0', '1', '2', '3', '4']
2866	hockey||Scoring||PostGWG: Postseason game-winning goals. [None, '0', '1', '2', '3', '4']
2867	hockey||Scoring||PostSOG: Postseason shots on goal. [None, '0', '1', '2', '3', '4']
2868	hockey||ScoringSC||playerID: id number identifying the player. ['holmeha01', 'walkeja01', 'mackami01', 'lehmahu01', 'foystfr01']. number identifying the player
2869	"hockey||ScoringSC||year: 2005-06 listed as ""2005"""
2870	hockey||ScoringSC||tmID: team ID. team abbreviated name. ['VML', 'MTL', 'OTS', 'SEA', 'VIC']
2871	hockey||ScoringSC||lgID: league ID. league abbreviated name. ['PCHA', 'NHL', 'NHA', 'WCHL']
2872	hockey||ScoringSC||pos: position. ['D', 'L', 'R', 'C', 'G']
2873	hockey||ScoringSC||GP: Games played. [5, 4, 3, 2, 6]
2874	hockey||ScoringSC||G: Goals. goals
2875	hockey||ScoringSC||A: assists. [0, 1, 2, 3, 6]
2876	hockey||ScoringSC||Pts: points
2877	hockey||ScoringSC||PIM: Penalty minutes
2878	hockey||ScoringShootout||playerID: player id. id number identifying the player. ['chriser01', 'wolskwo01', 'jokinol01', 'willija01', 'vrbatra01']. number identifying the player
2879	"hockey||ScoringShootout||year: [2009, 2006, 2010, 2007, 2011]. 2005-06 listed as ""2005"""
2880	hockey||ScoringShootout||stint: [1, 2, 3]
2881	hockey||ScoringShootout||tmID: team ID. team abbreviated name. ['WAS', 'NYR', 'CBS', 'PHO', 'EDM']
2882	hockey||ScoringShootout||S: shots
2883	hockey||ScoringShootout||G: goals
2884	hockey||ScoringShootout||GDG: game deciding goals. [0, 1, 2, 3, 4]
2885	hockey||ScoringSup||playerID: player id. string ID of players. ['wilsoca01', 'zezelpe01', 'tuckejo01', 'tantito01', 'quinnda01']. unique string ID of the player
2886	hockey||ScoringSup||year: . [1988, 1990, 1989, 1987]
2887	hockey||ScoringSup||PPA: Power play assists. [None, '1', '3', '2', '5', '9']
2888	hockey||ScoringSup||SHA: Shorthanded assists. [None, '1', '2', '4', '3']
2889	hockey||SeriesPost||year: 
2890	hockey||SeriesPost||round: ['CQF', 'SF', 'DSF', 'SCF', 'QF']. see abbrev.csv for details
2891	hockey||SeriesPost||series: [None, 'C', 'B', 'A', 'E', 'D']. used for the NHL designations
2892	hockey||SeriesPost||tmIDWinner: Team ID of winner. ['MTL', 'DET', 'TOR', 'BOS', 'NYR']
2893	hockey||SeriesPost||lgIDWinner: League ID of winner. ['NHL', 'WHA', 'PCHA', 'WCHL', 'NHA']
2894	hockey||SeriesPost||tmIDLoser: Team ID of loser. Team ID of winner. ['BOS', 'MTL', 'CHI', 'NYR', 'TOR']
2895	hockey||SeriesPost||lgIDLoser: league id of loser. ['NHL', 'WHA', 'PCHA', 'WCHL', 'NHA']
2896	hockey||SeriesPost||W: wins. [4, 3, 2, 1, 0]
2897	hockey||SeriesPost||L: loses. [1, 0, 2, 3, 4]
2898	hockey||SeriesPost||T: ties. [0, 1, 2]
2899	hockey||SeriesPost||GoalsWinner: goals for winner
2900	hockey||SeriesPost||GoalsLoser: goals for loser
2901	hockey||SeriesPost||note: [None, 'TG', 'ND', 'EX', 'DEF']. Note: EX = exhibition, ND = no decision, TG = total-goals series
2902	hockey||TeamSplits||year: 
2903	hockey||TeamSplits||lgID: league ID. league ID number. ['NHL', 'WHA', 'NHA', 'PCHA', 'WCHL']
2904	hockey||TeamSplits||tmID: team ID. ['MTL', 'BOS', 'NYR', 'CHI', 'TOR']
2905	hockey||TeamSplits||hW: home wins
2906	hockey||TeamSplits||hL: home loses
2907	hockey||TeamSplits||hT: home ties
2908	hockey||TeamSplits||hOTL: Home overtime losses. [None, '2', '3', '4', '6', '1']
2909	hockey||TeamSplits||rW: Road wins
2910	hockey||TeamSplits||rL: Road loses
2911	hockey||TeamSplits||rT: Road ties
2912	hockey||TeamSplits||rOTL: road overtime loses. [None, '3', '4', '5', '2', '6']
2913	hockey||TeamSplits||SepW: September wins. [None, '1']
2914	hockey||TeamSplits||SepL: September loses. [None, '1']
2915	hockey||TeamSplits||SepT: September ties
2916	hockey||TeamSplits||SepOL: September overtime loses. [None, '0']
2917	hockey||TeamSplits||OctW: October wins. [None, '4', '5', '6', '3', '2']
2918	hockey||TeamSplits||OctL: October loses. [None, '4', '5', '3', '6', '2']
2919	hockey||TeamSplits||OctT: October ties. [None, '1', '2', '0', '3', '4']
2920	hockey||TeamSplits||OctOL: October overtime loses. [None, '0', '1', '2', '3', '5']
2921	hockey||TeamSplits||NovW: November wins. [None, '5', '6', '4', '7', '3']
2922	hockey||TeamSplits||NovL: November loses. [None, '5', '6', '4', '7', '3']
2923	hockey||TeamSplits||NovT: November ties. [None, '1', '2', '0', '3', '4']
2924	hockey||TeamSplits||NovOL: November overtime loses. [None, '1', '0', '2', '3', '4']
2925	hockey||TeamSplits||DecW: December wins. [None, '6', '5', '4', '7', '8']
2926	hockey||TeamSplits||DecL: December loses. [None, '6', '5', '4', '7', '3']
2927	hockey||TeamSplits||DecT: December ties. [None, '1', '2', '0', '3', '4']
2928	hockey||TeamSplits||DecOL: December overtime loses. [None, '1', '0', '2', '3', '4']
2929	hockey||TeamSplits||JanW: January wins
2930	hockey||TeamSplits||JanL: January loses
2931	hockey||TeamSplits||JanT: January ties. [None, 1, 0, 2, 3, 4]
2932	hockey||TeamSplits||JanOL: January overtime loses. [None, '1', '0', '2', '3', '4']
2933	hockey||TeamSplits||FebW: February wins
2934	hockey||TeamSplits||FebL: February loses
2935	hockey||TeamSplits||FebT: February ties. [None, 1, 0, 2, 3, 4]
2936	hockey||TeamSplits||FebOL: February overtime loses. [None, '0', '1', '2', '3', '4']
2937	hockey||TeamSplits||MarW: March wins. [None, '6', '5', '7', '4', '8']
2938	hockey||TeamSplits||MarL: March loses. [None, '5', '4', '6', '7', '3']
2939	hockey||TeamSplits||MarT: March ties. [None, '1', '0', '2', '3', '4']
2940	hockey||TeamSplits||MarOL: March overtime loses. [None, '1', '2', '0', '3', '4']
2941	hockey||TeamSplits||AprW: April wins. [None, '1', '2', '0', '3', '4']
2942	hockey||TeamSplits||AprL: April loses. [None, '1', '2', '0', '3', '4']
2943	hockey||TeamSplits||AprT: April ties. [None, '0', '1', '2', '3', '5']
2944	hockey||TeamSplits||AprOL: April overtime loses. [None, '0', '1', '2', '3']
2945	hockey||TeamVsTeam||year: 
2946	hockey||TeamVsTeam||lgID: league ID. league ID number. ['NHL', 'WHA', 'NHA', 'WCHL', 'PCHA']
2947	hockey||TeamVsTeam||tmID: team ID. ['MTL', 'BOS', 'NYR', 'CHI', 'TOR']
2948	hockey||TeamVsTeam||oppID: opponent ID. ['MTL', 'BOS', 'NYR', 'CHI', 'TOR']
2949	hockey||TeamVsTeam||W: wins
2950	hockey||TeamVsTeam||L: loses
2951	hockey||TeamVsTeam||T: ties. [None, 0, 1, 2, 3, 4]
2952	hockey||TeamVsTeam||OTL: overtime loses. [None, '0', '1', '2', '3', '4']
2953	hockey||TeamsHalf||year: [1916, 1919, 1920, 1917, 1918]
2954	hockey||TeamsHalf||lgID: league ID. league ID number. ['NHL', 'NHA']
2955	hockey||TeamsHalf||tmID: team ID. ['OTS', 'MTL', 'TRS', 'TOA', 'TOB']
2956	hockey||TeamsHalf||half: First or second half of season. [1, 2]
2957	hockey||TeamsHalf||rank: Final standing for the half. [3, 2, 1, 4, 6]
2958	hockey||TeamsHalf||G: Games. [10, 12, 14, 8, 4]
2959	hockey||TeamsHalf||W: wins. [5, 3, 2, 8, 7]
2960	hockey||TeamsHalf||L: loses
2961	hockey||TeamsHalf||T: ties. [0]
2962	hockey||TeamsHalf||GF: goals for
2963	hockey||TeamsHalf||GA: goals against. goal against
2964	hockey||TeamsPost||year: 
2965	hockey||TeamsPost||lgID: league ID. league ID number. ['NHL', 'WHA', 'PCHA', 'WCHL', 'NHA']
2966	hockey||TeamsPost||tmID: team ID. ['MTL', 'BOS', 'TOR', 'DET', 'CHI']
2967	hockey||TeamsPost||G: Games
2968	hockey||TeamsPost||W: wins
2969	hockey||TeamsPost||L: loses
2970	hockey||TeamsPost||T: ties. [0, 1, 2, 4, 3]
2971	hockey||TeamsPost||GF: goals for
2972	hockey||TeamsPost||GA: goals against
2973	hockey||TeamsPost||PIM: penalty minutes. [None, '68', '50', '56', '85', '83']
2974	hockey||TeamsPost||BenchMinor: Bench minors (minutes). [None, '0', '2', '4', '6', '8']
2975	hockey||TeamsPost||PPG: Power play goals. [None, '6', '4', '3', '5', '2']
2976	hockey||TeamsPost||PPC: Power play chances. [None, '27', '16', '35', '23', '36']
2977	hockey||TeamsPost||SHA: Shorthanded goals against. [None, '0', '1', '2', '3', '4']
2978	hockey||TeamsPost||PKG: Power play goals against. [None, '5', '6', '4', '8', '7']
2979	hockey||TeamsPost||PKC: Penalty kill chances. [None, '30', '27', '23', '43', '26']
2980	hockey||TeamsPost||SHF: Shorthanded goals for. [None, '0', '1', '2', '3', '4']
2981	hockey||TeamsSC||year: 
2982	hockey||TeamsSC||lgID: league ID. league ID number. ['PCHA', 'NHL', 'NHA', 'WCHL']
2983	hockey||TeamsSC||tmID: team ID. ['VML', 'SEA', 'OTS', 'MTL', 'VIC']
2984	hockey||TeamsSC||G: Games. [5, 4, 3, 2, 6]
2985	hockey||TeamsSC||W: wins. [3, 2, 1, 0, 5]
2986	hockey||TeamsSC||L: loses. [3, 2, 1, 0]
2987	hockey||TeamsSC||T: ties. [0, 1]
2988	hockey||TeamsSC||GF: goals for
2989	hockey||TeamsSC||GA: goals against
2990	hockey||TeamsSC||PIM: penalty minutes. [None, '50', '75', '53', '49', '24']
2991	hockey||abbrev||Type: type of hockey games. ['Playoffs', 'Division', 'Round', 'Conference']
2992	hockey||abbrev||Code: abbreviated codes. ['SF', 'SCSF', 'QF', 'F', 'DSF']
2993	hockey||abbrev||Fullname: full names of code
2994	world||City||ID: the unique id for the city
2995	world||City||Name: the name of the city. ['Victoria', 'Valencia', 'Toledo', 'Springfield', 'San Miguel']
2996	world||City||CountryCode: Country Code. the country code of the country that the city is belonged. ['CHN', 'IND', 'USA', 'BRA', 'JPN']
2997	world||City||District: the district where the city locates. ['England', 'São Paulo', 'California', 'Punjab', 'West Bengali']
2998	world||City||Population: the number of the population in the area. commonsense evidence:  more population --> more crowded
2999	world||Country||Code: the unique country code of the country. ['ABW', 'AFG', 'AGO', 'AIA', 'ALB']
3000	world||Country||Name: the country name. ['Zimbabwe', 'Zambia', 'Yugoslavia', 'Yemen', 'Western Sahara']
3001	world||Country||Continent: the continent that the country locates. ['Africa', 'Asia', 'Europe', 'North America', 'Oceania']
3002	world||Country||Region: the region that the country locates. ['Caribbean', 'Eastern Africa', 'Middle East', 'Western Africa', 'Southern Europe']
3003	world||Country||SurfaceArea: Surface Area. the surface area of the country
3004	world||Country||IndepYear: Independence Year. the year that the country declared independence
3005	world||Country||Population: the number of the population in the area. commonsense evidence:    more population --> more crowded
3006	world||Country||LifeExpectancy: Life Expectancy. the life expectancy at birth of the country. commonsense evidence:     Life expectancy at birth is defined as how long, on average, a newborn can expect to live if current death rates do not change
3007	world||Country||GNP: Gross National Product. the GNP of the country. commonsense evidence:     GNP measures the total monetary value of the output produced by a country's residents.
3008	world||Country||GNPOld: Gross National Product Old. Gross national product - old value.
3009	world||Country||LocalName: Local Name. The country's local name. ['–', 'Österreich', 'Ísland', '¸esko', '´Uman']
3010	"world||Country||GovernmentForm: Government Form. The country's goverment form.. ['Republic', 'Constitutional Monarchy', 'Federal Republic', 'Dependent Territory of the UK', 'Monarchy']. commonsense evidence:    Republic: governmentform contains ""Republic"""
3011	world||Country||HeadOfState: Head Of State. The head of state full name.. [None, 'Elisabeth II', 'Jacques Chirac', 'George W. Bush', 'Margrethe II', 'Jiang Zemin']
3012	world||Country||Capital: The country's capital. commonsense evidence:    if the capital is null, it means this country doesn't have a city where a region's government is located
3013	world||Country||Code2: The second country code.. ['ZW', 'ZM', 'ZA', 'YU', 'YT']
3014	world||CountryLanguage||CountryCode: Country Code. The unique code for country. ['CAN', 'CHN', 'IND', 'RUS', 'USA']
3015	world||CountryLanguage||Language: Country language. ['English', 'Arabic', 'Spanish', 'French', 'German']
3016	world||CountryLanguage||IsOfficial: Is Official. Information on whether the language is official in a given country. ['F', 'T']. T / F
3017	world||CountryLanguage||Percentage: Percentage of language use
3018	music_platform_2||runs||run_at: run at. The date and time of the podcast review creation.. ['2022-09-07 15:28:17']
3019	music_platform_2||runs||max_rowid: max row id. The id of max row of this run.
3020	music_platform_2||runs||reviews_added: reviews added. The number of reviews added in this run.
3021	music_platform_2||podcasts||podcast_id: podcast id. The unique id of the podcast. ['a00018b54eb342567c94dacfb2a3e504', 'a00043d34e734b09246d17dc5d56f63c', 'a0004b1ef445af9dc84dad1e7821b1e3', 'a00071f9aaae9ac725c3a586701abf4d', 'a000aa69852b276565c4f5eb9cdd999b']
3022	music_platform_2||podcasts||itunes_id: itunes id. The unique id of the itunes.
3023	"music_platform_2||podcasts||slug: The slug of the podcast.. commonsense evidence:  It usually has the same name with the ""title"" column."
3024	music_platform_2||podcasts||itunes_url: itunes url. The iTunes url of the podcast.. commonsense evidence:  Can visit the webpage of the podcast by clicking the itunes_url.
3025	"music_platform_2||podcasts||title: The title of the podcast.. commonsense evidence:  It usually has a very similar name to the ""slug"" column."
3026	music_platform_2||reviews||podcast_id: podcast id. The unique id of the podcast. ['bf5bf76d5b6ffbf9a31bba4480383b7f', 'bc5ddad3898e0973eb541577d1df8004', 'bad6c91efdbee814db985c7a65199604', 'f5fce0325ac6a4bf5e191d6608b95797', 'b1a3eb2aa8e82ecbe9c91ed9a963c362']
3027	music_platform_2||reviews||title: The title of the podcast review.. commonsense evidence:  This usually is the abstract of the whole review.
3028	music_platform_2||reviews||content: The content of the podcast review.. commonsense evidence:  This usually is the detailed explanation of the podcast review title.
3029	"music_platform_2||reviews||rating: The rating of the podcast review.. [5, 1, 4, 3, 2]. commonsense evidence:  Allowed values: 0 to 5.  This rating is highly related with ""title"" and ""content""."
3030	music_platform_2||reviews||author_id: author id. The author id of the podcast review.. ['D3307ADEFFA285C', '791F376ACA3C08D', '96A3F0358E7808D', '04C3B6DEFE22FB1', '8858ED4249110B6']
3031	"music_platform_2||reviews||created_at: created at. The date and time of the podcast review creation.. ['2020-09-23T16:51:36-07:00', '2018-09-11T19:12:46-07:00', '2018-09-11T19:12:37-07:00', '2019-09-13T14:43:09-07:00', '2018-09-11T19:12:36-07:00']. In the format of ""Date time"". e.g., 2018-05-09T18:14:32-07:00"
3032	music_platform_2||categories||podcast_id: podcast id. The unique id of the podcast. ['be905117ff9b3a13b1a065801241903b', 'c4be70db3c16d3607bd7ae4999cb6e86', 'fa8c359031380cd4f3b38358c8a75f92', 'a7ae747331094b205de1e093011f7e1e', 'af4c9ab7e54007e755ed9f063b89a328']
3033	music_platform_2||categories||category: category of the podcast. ['society-culture', 'education', 'comedy', 'religion-spirituality', 'business']. commonsense evidence:  This usually represents the topic of the podcast.
3034	university||country||id: unique id number identifying country
3035	university||country||country_name: country name. the name of the country. ['Uruguay', 'United States of America', 'United Kingdom', 'United Arab Emirates', 'Ukraine']
3036	university||ranking_system||id: unique id number identifying ranking system. [1, 2, 3]
3037	university||ranking_system||system_name: system name. id number identifying ranking system. ['Times Higher Education World University Ranking', 'Shanghai Ranking', 'Center for World University Rankings']
3038	university||ranking_criteria||id: unique id number identifying ranking criteria
3039	university||ranking_criteria||ranking_system_id: ranking system id. id number identifying ranking system. [3, 2, 1]
3040	university||ranking_criteria||criteria_name: criteria name. name of the criteria. ['Total Times', 'Total Shanghai', 'Total CWUR', 'Teaching', 'Research']
3041	university||university||id: unique id number identifying university
3042	university||university||country_id: country id. the country where the university locates
3043	university||university||university_name: university name. name of the university
3044	university||university_ranking_year||university_id: university id. the id of the university
3045	university||university_ranking_year||ranking_criteria_id: ranking criteria id. the id of the ranking criteria
3046	university||university_ranking_year||year: ranking year
3047	university||university_ranking_year||score: ranking score
3048	university||university_year||university_id: university id. id of the university
3049	university||university_year||year: . [2015, 2014, 2013, 2012, 2011]
3050	university||university_year||num_students: number of students. the total number of students for the year
3051	university||university_year||student_staff_ratio: student staff ratio. . commonsense evidence: student_staff_ratio = number of students / number of staff
3052	university||university_year||pct_international_students: pct internation student. the percentage of international students among all students. commonsense evidence: pct_international_student = number of interbational students / number of students
3053	university||university_year||pct_female_students: pct female students. the percentage of female students. commonsense evidence: pct_female_students = number of female students / number of students
3054	sales_in_weather||sales_in_weather||date: the date of sales. ['2014-10-31']
3055	sales_in_weather||sales_in_weather||store_nbr: store number
3056	sales_in_weather||sales_in_weather||item_nbr: item number. item / product number
3057	sales_in_weather||sales_in_weather||units: the quantity sold of an item on a given day
3058	sales_in_weather||weather||station_nbr: station number. the id of weather stations
3059	sales_in_weather||weather||date: ['2014-10-31']
3060	sales_in_weather||weather||tmax: temperature max. max temperature
3061	sales_in_weather||weather||tmin: temperature min. min temperature. commonsense evidence: temperature range / difference = tmax - tmin
3062	sales_in_weather||weather||tavg: temperature average. average temperature
3063	sales_in_weather||weather||depart: departure from normal. . Temperature departure from the normal indicates if the dekadal average temperatures were above or below the 30-year normal. commonsense evidence: â¢ if null: the temperature is 30-year normal â¢ if the value is positive: the temperature is above the 30-year normal,  â¢ if the value is negative: the temperature is below the 30-year normal,
3064	sales_in_weather||weather||dewpoint: dew point. . commonsense evidence: The dew point is the temperature to which air must be cooled to become saturated with water vapor, assuming constant air pressure and water content.
3065	sales_in_weather||weather||wetbulb: wet bulb. . commonsense evidence: â¢ The wet-bulb temperature (WBT) is the temperature read by a thermometer covered in water-soaked (water at ambient temperature) cloth (a wet-bulb thermometer) over which air is passed. â¢ At 100% relative humidity, the wet-bulb temperature is equal to the air temperature (dry-bulb temperature);  â¢ at lower humidity the wet-bulb temperature is lower than dry-bulb temperature because of evaporative cooling.
3066	sales_in_weather||weather||heat: calculated heating degree
3067	sales_in_weather||weather||cool: calculated cooling degree
3068	sales_in_weather||weather||sunrise: calculated sunrise. [None, '05:29:00', '05:25:00', '05:30:00', '05:31:00', '05:26:00']
3069	sales_in_weather||weather||sunset: calculated sunset. [None, '19:32:00', '19:24:00', '19:28:00', '19:30:00', '19:27:00']
3070	"sales_in_weather||weather||codesum: code summarization. code summarization for the weather. ['RA BR', 'BR', 'RA', 'BR HZ', 'HZ']. â¢ PY SPRAY  â¢ SQ SQUALL  â¢ DR LOW DRIFTING  â¢ SH SHOWER  â¢ FZ FREEZING  â¢ MI SHALLOW  â¢ PR PARTIAL  â¢ BC PATCHES  â¢ BL BLOWING  â¢ VC VICINITY  â¢ - LIGHT  â¢ + HEAVY  â¢ ""NO SIGN"" MODERATE"
3071	sales_in_weather||weather||snowfall: snowfall (inches AND tenths)
3072	sales_in_weather||weather||preciptotal: precipitation total. inches (240hr period ending at indicated local standard time)
3073	sales_in_weather||weather||stnpressure: station pressure
3074	sales_in_weather||weather||sealevel: sea level
3075	sales_in_weather||weather||resultspeed: resultant speed. resultant wind speed
3076	sales_in_weather||weather||resultdir: resultant direction. resultant wind direction. who degree
3077	sales_in_weather||weather||avgspeed: average speed. average wind speed. commonsense evidence: if avgspeed is larger: much more wind
3078	sales_in_weather||relation||store_nbr: store number. the id of stores
3079	sales_in_weather||relation||station_nbr: station number. the id of weather stations
3080	mondial_geo||borders||Country1: a country code. ['BR', 'A', 'DZ', 'AFG', 'CAM']
3081	mondial_geo||borders||Country2: a country code. ['TJ', 'R', 'ZRE', 'TR', 'SRB']
3082	mondial_geo||borders||Length: length of the border between country1 and country2
3083	mondial_geo||city||Name: name of city. ['Alexandria', 'Cordoba', 'Kingston', 'La Paz', 'Leon']
3084	mondial_geo||city||Country: the code of the country where it belongs to. ['TJ', 'USA', 'BR', 'R', 'GB']
3085	mondial_geo||city||Province: the name of the province where it belongs to. ['Sao Paulo', 'Nigeria', 'California', 'Indonesia', 'Pakistan']
3086	mondial_geo||city||Population: population of the city
3087	mondial_geo||city||Longitude: geographic longitude
3088	mondial_geo||city||Latitude: geographic latitude
3089	mondial_geo||continent||Name: name of the continent. ['Africa', 'America', 'Asia', 'Australia/Oceania', 'Europe']
3090	mondial_geo||continent||Area: total area of the continent.. [45095300.0, 39872000.0, 30254700.0, 9562490.0, 8503470.0]
3091	mondial_geo||country||Name: the country name. ['Afghanistan', 'Albania', 'Algeria', 'American Samoa', 'Andorra']
3092	mondial_geo||country||Code: country code. ['A', 'AFG', 'AG', 'AL', 'AMSA']
3093	mondial_geo||country||Capital: the name of the capital,. [None, 'Kingston', 'Zagreb', 'Yerevan', 'Yaren', 'Yaounde']
3094	mondial_geo||country||Province: the province where the capital belongs to,. [None, 'Distrito Federal', 'al Khartum', 'Zimbabwe', 'Yemen', 'Yangon']
3095	mondial_geo||country||Area: the total area,
3096	mondial_geo||country||Population: the population number.
3097	mondial_geo||desert||Name: the name of the desert. ['Arabian Desert', 'Atacama', 'Azaouad', 'Baja California Desert', 'Chihuahua']
3098	mondial_geo||desert||Area: the total area of the desert
3099	mondial_geo||desert||Longitude: 
3100	mondial_geo||desert||Latitude: commonsense evidence:    coordinate: (Longitude, Latitude)
3101	mondial_geo||economy||Country: the country code. ['A', 'AFG', 'AG', 'AL', 'AMSA']
3102	mondial_geo||economy||GDP: gross domestic product
3103	mondial_geo||economy||Agriculture: percentage of agriculture of the GDP
3104	mondial_geo||economy||Service: percentage of services of the GDP,
3105	mondial_geo||economy||Industry: percentage of industry of the GDP
3106	mondial_geo||economy||Inflation: inflation rate (per annum),
3107	mondial_geo||encompasses||Country: a country code. ['ET', 'R', 'RI', 'TR', 'A']
3108	mondial_geo||encompasses||Continent: the continent name.. ['Africa', 'Europe', 'Asia', 'America', 'Australia/Oceania']
3109	mondial_geo||encompasses||Percentage: how much of the area of a country belongs to the continent. [100.0, 80.0, 20.0, 95.0, 90.0]. %
3110	mondial_geo||ethnicGroup||Country: the country code. ['EAU', 'SK', 'IR', 'EAK', 'SN']
3111	mondial_geo||ethnicGroup||Name: name of the language. ['Chinese', 'African', 'European', 'Indian', 'Russian']
3112	mondial_geo||ethnicGroup||Percentage: percentage of the language in this country.. %
3113	mondial_geo||geo_desert||Desert: the name of the desert. ['Rub Al Chali', 'Libyan Desert', 'Karakum', 'Kalahari', 'Thar']
3114	mondial_geo||geo_desert||Country: the country code where it is located. ['USA', 'AUS', 'TJ', 'IR', 'DZ']
3115	mondial_geo||geo_desert||Province: the province of this country. ['Algeria', 'Western Australia', 'Arizona', 'Libya', 'Mali']
3116	mondial_geo||geo_estuary||River: the name of the river. ['Nile', 'Enns', 'Guadiana', 'Zambezi', 'Weser']
3117	mondial_geo||geo_estuary||Country: the country code where it is located. ['R', 'D', 'ZRE', 'USA', 'I']
3118	mondial_geo||geo_estuary||Province: the province of this country. ['Bayern', 'Bandundu', 'Equateur', 'Serbia', 'Baden Wurttemberg']
3119	mondial_geo||geo_island||Island: the name of the island. ['Zakinthos', 'Westray', 'West Falkland', 'Wangerooge', 'Vulcano']
3120	mondial_geo||geo_island||Country: the country code where it is located. ['Less', 'Cana', 'Sund', 'Phil', 'Azor']
3121	mondial_geo||geo_island||Province: the province of this country. ['143', '194', '20', '31', '40']
3122	mondial_geo||geo_lake||Lake: the name of the lake. ['Caspian Sea', 'Lake Tanganjika', 'Lake Victoria', 'Vierwaldstattersee', 'Lake Erie']
3123	mondial_geo||geo_lake||Country: the country code where it is located. ['USA', 'CH', 'R', 'S', 'CDN']
3124	mondial_geo||geo_lake||Province: the province of this country. ['Ontario', 'Ethiopia', 'Bayern', 'Bolivia', 'Michigan']
3125	mondial_geo||geo_mountain||Mountain: the name of the mountain. ['Popocatepetl', 'Monte Rosa', 'Moldoveanu', 'Zugspitze', 'Vignemale']
3126	mondial_geo||geo_mountain||Country: the country code where it is located. ['USA', 'I', 'TJ', 'RI', 'E']
3127	mondial_geo||geo_mountain||Province: the province of this country. ['Indonesia', 'Nepal', 'Alaska', 'Tibet', 'Badakhshoni Kuni']
3128	mondial_geo||geo_river||River: the name of the river. ['Donau', 'Weichsel', 'Nile', 'Rhein', 'Tigris']
3129	mondial_geo||geo_river||Country: the country code where it is located. ['R', 'USA', 'D', 'ZRE', 'F']
3130	mondial_geo||geo_river||Province: the province of this country. ['Bayern', 'Bandundu', 'Haut Zaire', 'Shaba/Katanga', 'Baden Wurttemberg']
3131	mondial_geo||geo_sea||Sea: the name of the sea. ['Atlantic Ocean', 'Pacific Ocean', 'Mediterranean Sea', 'Caribbean Sea', 'Indian Ocean']
3132	mondial_geo||geo_sea||Country: the country code where it is located. ['J', 'GB', 'USA', 'R', 'TR']
3133	mondial_geo||geo_sea||Province: the province of this country. ['Indonesia', 'Magadanskaya oblast', 'Denmark', 'Alaska', 'Greenland']
3134	mondial_geo||geo_source||River: the name of the river. ['Ubangi', 'Ruzizi', 'Pjandsh', 'Niagara River', 'Enns']
3135	mondial_geo||geo_source||Country: the country code where it is located. ['R', 'ZRE', 'USA', 'D', 'CDN']
3136	mondial_geo||geo_source||Province: the province of this country. ['Tibet', 'Shaba/Katanga', 'Baden Wurttemberg', 'Bayern', 'Central African Republic']
3137	mondial_geo||island||Name: the name of the island. ['Aland', 'Alicudi', 'Ambon', 'Ameland', 'Amrum']
3138	mondial_geo||island||Islands: the group of islands where it belongs to. [None, 'Lesser Antilles', 'Sunda Islands', 'Phillipines', 'Azores', 'Ostfriesische Inseln']
3139	mondial_geo||island||Area: the area of the island
3140	mondial_geo||island||Height: the maximal elevation of the island
3141	mondial_geo||island||Type: the type of the island. [None, 'volcanic', 'coral', 'atoll', 'lime']
3142	mondial_geo||island||Longitude: 
3143	mondial_geo||island||Latitude: 
3144	mondial_geo||islandIn||Island: . ['Sumatra', 'Great Britain', 'Taiwan', 'Svalbard', 'Kyushu']
3145	mondial_geo||islandIn||Sea: . [None, 'Atlantic Ocean', 'Pacific Ocean', 'Mediterranean Sea', 'Caribbean Sea', 'North Sea']
3146	mondial_geo||islandIn||Lake: . [None, 'Ozero Baikal', 'Lake Toba', 'Lake Nicaragua', 'Lake Manicouagan', 'Lake Huron']
3147	mondial_geo||islandIn||River: . [None, 'River']
3148	mondial_geo||isMember||Country: . ['F', 'GB', 'CDN', 'USA', 'I']
3149	mondial_geo||isMember||Organization: . ['UPU', 'IOC', 'WHO', 'UNESCO', 'UN']
3150	mondial_geo||isMember||Type: . ['member', 'National Olympic Committee', 'National Society', 'observer', 'Part II']
3151	mondial_geo||lake||Name: the name of the lake. ['Ammersee', 'Arresoe', 'Atlin Lake', 'Balaton', 'Barrage de Mbakaou']
3152	mondial_geo||lake||Area: the total area of the lake
3153	mondial_geo||lake||Depth: the depth of the lake
3154	mondial_geo||lake||Altitude: the altitude (above sea level) of the lake
3155	mondial_geo||lake||Type: the type of the lake. [None, 'salt', 'artificial', 'caldera', 'impact', 'crater']
3156	mondial_geo||lake||River: the river that flows out of the lake. [None, 'Missouri', 'Zambezi', 'Vuoksi', 'Victoria Nile', 'Tennessee']
3157	mondial_geo||lake||Longitude: longitude of lake
3158	mondial_geo||lake||Latitude: latitude of lake
3159	mondial_geo||language||Country: the country code. ['PK', 'IR', 'NMIS', 'NA', 'SRB']
3160	mondial_geo||language||Name: name of the language. ['English', 'French', 'Spanish', 'Russian', 'German']
3161	mondial_geo||language||Percentage: percentage of the language in this country. %
3162	mondial_geo||located||City: the name of the city. ['Wiesbaden', 'Victoria', 'Ulm', 'St. Louis', 'Saint Johns']
3163	mondial_geo||located||Province: the province where the city belongs to. ['Indonesia', 'North Korea', 'Baden Wurttemberg', 'Nordrhein Westfalen', 'Morocco']
3164	mondial_geo||located||Country: the country code where the city belongs to. ['USA', 'R', 'D', 'TJ', 'J']
3165	mondial_geo||located||River: the river where it is located at. [None, 'Rhein', 'Jangtse', 'Volga', 'Nile', 'Donau']
3166	mondial_geo||located||Lake: the lake where it is located at. [None, 'Lake Ontario', 'Lake Erie', 'Vaenern', 'Lake Tanganjika', 'Lake Michigan']
3167	mondial_geo||located||Sea: the sea where it is located at. [None, 'Atlantic Ocean', 'Pacific Ocean', 'Mediterranean Sea', 'Caribbean Sea', 'Indian Ocean']. Note that for a given city, there can be several lakes/seas/rivers where it is located at.
3168	mondial_geo||locatedOn||City: the name of the city. ['Kingston', 'Victoria', 'Plymouth', 'Saint Johns', 'Aberdeen']
3169	mondial_geo||locatedOn||Province: the province where the city belongs to. ['Indonesia', 'Taiwan', 'Philippines', 'Greater Manchester', 'West Midlands']
3170	mondial_geo||locatedOn||Country: the country code where the city belongs to. ['GB', 'J', 'RI', 'RC', 'C']
3171	mondial_geo||locatedOn||Island: the island it is (maybe only partially) located on. ['Great Britain', 'Honshu', 'Taiwan', 'Java', 'Cuba']
3172	mondial_geo||mergesWith||Sea1: the name of the mountain. ['Atlantic Ocean', 'Arctic Ocean', 'Pacific Ocean', 'East China Sea', 'Andaman Sea']
3173	mondial_geo||mergesWith||Sea2: the country code where it is located. ['Sunda Sea', 'Pacific Ocean', 'Indian Ocean', 'Norwegian Sea', 'South China Sea']
3174	mondial_geo||mountain||Name: the name of the mountain
3175	mondial_geo||mountain||Mountains: the mountains where it belongs to
3176	mondial_geo||mountain||Height: the maximal elevation of the summit of the mountain
3177	mondial_geo||mountain||Type: the sea where it finally flows to. (note that at most one out of {river,lake,sea} can be non-null
3178	mondial_geo||mountain||Longitude: the length of the river
3179	mondial_geo||mountain||Latitude: the longitude of its source
3180	mondial_geo||mountainOnIsland||Mountain: the name of the mountain. ['Andringitra', 'Asahi-Dake', 'Barbeau Peak', 'Ben Nevis', 'Blue Mountain Peak']
3181	mondial_geo||mountainOnIsland||Island: the name of the island. ['New Guinea', 'Madagaskar', 'Sumatra', 'Reunion', 'Luzon']
3182	mondial_geo||organization||Abbreviation: its abbreviation. ['ABEDA', 'ACC', 'ACCT', 'ACP', 'AFESD']
3183	mondial_geo||organization||Name: the full name of the organization
3184	mondial_geo||organization||City: the city where the headquarters are located. [None, 'Geneva', 'New York', 'Brussels', 'Paris', 'Washington']
3185	mondial_geo||organization||Country: the code of the country where the headquarters are located. [None, 'USA', 'CH', 'F', 'B', 'A']
3186	mondial_geo||organization||Province: the name of the province where the headquarters are located,. [None, 'GE', 'New York', 'Brabant', 'Ile de France', 'Distr. Columbia']
3187	mondial_geo||organization||Established: date of establishment. [None, '1995-03-31']
3188	mondial_geo||politics||Country: the country code. ['A', 'AFG', 'AG', 'AL', 'AMSA']
3189	mondial_geo||politics||Independence: date of independence. [None, '1821-09-15']. Commonsense evidence:    if the value is null or empty, it means this country is not independent
3190	mondial_geo||politics||Dependent: the country code where the area belongs to. [None, 'GB', 'F', 'USA', 'AUS', 'TJ']
3191	mondial_geo||politics||Government: type of government
3192	mondial_geo||population||Country: the country code. ['A', 'AFG', 'AG', 'AL', 'AMSA']
3193	mondial_geo||population||Population_Growth: population growth. population growth rate. per annum
3194	mondial_geo||population||Infant_Mortality: infant mortality. per thousand
3195	mondial_geo||province||Name: the name of the administrative division. ['Amazonas', 'Central', 'Distrito Federal', 'Bolivar', 'Centre']
3196	mondial_geo||province||Country: the country code where it belongs to. ['GB', 'R', 'TR', 'USA', 'PL']
3197	mondial_geo||province||Population: the population of the province
3198	mondial_geo||province||Area: the total area of the province,
3199	mondial_geo||province||Capital: the name of the capital. [None, 'Trujillo', 'San Juan', 'Merida', 'La Paz', 'Kingston']. if null, doesn't have capital
3200	mondial_geo||province||CapProv: capital province. the name of the province where the capital belongs to. [None, 'Distrito Federal', 'Central', 'Amazonas', 'Chandigarh', 'Western']. commonsense evidence:    note that capprov is not necessarily equal to name
3201	mondial_geo||religion||Country: the country code. ['SLB', 'PNG', 'NZ', 'IND', 'BS']
3202	mondial_geo||religion||Name: name of the religion. ['Roman Catholic', 'Muslim', 'Protestant', 'Christian', 'Christian Orthodox']
3203	mondial_geo||religion||Percentage: percentage of the language in this country. %
3204	mondial_geo||river||Name: the name of the river. ['Aare', 'Adda', 'Akagera', 'Allegheny River', 'Aller']
3205	mondial_geo||river||River: the river where it finally flows to. [None, 'Donau', 'Zaire', 'Kwa', 'Rhein', 'White Nile']
3206	mondial_geo||river||Lake: the lake where it finally flows to. [None, 'Caspian Sea', 'Ozero Ladoga', 'Ozero Aral', 'Lake Sese Seko/Albertsee', 'Lake Keban']
3207	mondial_geo||river||Sea: the sea where it finally flows to. [None, 'Atlantic Ocean', 'Baltic Sea', 'Mediterranean Sea', 'Sibirian Sea', 'North Sea']. (note that at most one out of {river,lake,sea} can be non-null
3208	mondial_geo||river||Length: the length of the river
3209	mondial_geo||river||SourceLongitude: the longitude of its source
3210	mondial_geo||river||SourceLatitude: the latitude of its source
3211	mondial_geo||river||Mountains: the mountains where its source is located. [None, 'Alps', 'East African Rift', 'Andes', 'Karpaten', 'Waldai Hills']
3212	mondial_geo||river||SourceAltitude: the elevation (above sea level) of its source
3213	mondial_geo||river||EstuaryLongitude: the coordinates of its estuary
3214	mondial_geo||river||EstuaryLatitude: the latitude of its estuary
3215	mondial_geo||sea||Name: the name of the sea. ['Andaman Sea', 'Arabian Sea', 'Arctic Ocean', 'Atlantic Ocean', 'Baltic Sea']
3216	mondial_geo||sea||Depth: the maximal depth of the sea
3217	mondial_geo||target||Country: . ['A', 'AFG', 'AL', 'AMSA', 'AND']
3218	mondial_geo||target||Target: . ['Christian', 'non-Christian', 'Target']
3219	software_company||Demog||GEOID: GEOGRAPHIC ID. unique geographic identifier
3220	software_company||Demog||INHABITANTS_K: INHABITANTS (THOUSANDS). number of inhabitants. the unit is K (thousands)
3221	software_company||Demog||INCOME_K: INCOME (THOUSANDS). average income per inhabitant per month. the unit is dollar, it indicates the average income per inhabitant per month. commonsense evidence: some computation like: total income per year = INHABITANTS_K x INCOME_K x 12
3222	software_company||Demog||A_VAR1: A VAR1. 
3223	software_company||Demog||A_VAR2: A VAR2. 
3224	software_company||Demog||A_VAR3: A VAR3. 
3225	software_company||Demog||A_VAR4: A VAR4. 
3226	software_company||Demog||A_VAR5: A VAR5. 
3227	software_company||Demog||A_VAR6: A VAR6. 
3228	software_company||Demog||A_VAR7: A VAR7. 
3229	software_company||Demog||A_VAR8: A VAR8. 
3230	software_company||Demog||A_VAR9: A VAR9. 
3231	software_company||Demog||A_VAR10: A VAR10. 
3232	software_company||Demog||A_VAR11: A VAR11. 
3233	software_company||Demog||A_VAR12: A VAR12. 
3234	software_company||Demog||A_VAR13: A VAR13. 
3235	software_company||Demog||A_VAR14: A VAR14. 
3236	software_company||Demog||A_VAR15: A VAR15. 
3237	software_company||Demog||A_VAR16: A VAR16. 
3238	software_company||Demog||A_VAR17: A VAR17. 
3239	software_company||Demog||A_VAR18: A VAR18. 
3240	software_company||mailings3||REFID: REFERENCE ID. unique id number identifying the customer
3241	software_company||mailings3||REF_DATE: REFERENCE DATE. indicating the date when the mailing was sent. ['2007-07-01 12:00:00.0']
3242	software_company||mailings3||RESPONSE: Actual response to the marketing incentive email. ['false', 'true']. True  False  commonsense evidence:  1. any person who has not responded to a mailing within two months is considered to have responded negatively. 2. true respond to the mailing, otherwise, no
3243	software_company||Customers||ID: the unique number identifying the customer
3244	software_company||Customers||SEX: the sex of the customer. ['Male', 'Female']
3245	"software_company||Customers||MARITAL_STATUS: MARITAL STATUS. . ['Married-civ-spouse', 'Never-married', 'Divorced', 'Other', 'Widowed']. � Never-married � Married-civ-spouse � Divorced � Widowed � Other commonsense evidence: ""Married-civ-spouse"", ""Divorced"", ""Widowed"" mean customer has been married."
3246	software_company||Customers||GEOID: GEOGRAPHIC ID. geographic identifier
3247	software_company||Customers||EDUCATIONNUM: EDUCATION NUMBER. the level of education. commonsense evidence: higher education number refers to higher education
3248	software_company||Customers||OCCUPATION: occupation of customers. ['Machine-op-inspct', 'Handlers-cleaners', 'Farming-fishing', 'Other-service', 'Exec-managerial']
3249	software_company||Customers||age: age of customers. commonsense evidence: � teenager: 13-19 years old. � elder: people aged over 65
3250	software_company||Mailings1_2||REFID: REFERENCE ID. unique id number identifying the customer
3251	software_company||Mailings1_2||REF_DATE: REFERENCE DATE. indicating the date when the mailing was sent. ['2007-03-01 12:00:00.0']
3252	software_company||Mailings1_2||RESPONSE: Response to the incentive mailing that marketing department sent. ['false', 'true']. True  False  commonsense evidence:  1. any person who has not responded to a mailing within two months is considered to have responded negatively. 2. true respond to the mailing, otherwise, no
3253	software_company||Sales||EVENTID: EVENT ID. unique id of event (sales)
3254	software_company||Sales||REFID: REFERENCE ID. Reference to customer ID
3255	software_company||Sales||EVENT_DATE: EVENT DATE. date of sales. ['2007-05-14 12:00:00.0']
3256	software_company||Sales||AMOUNT: amount of sales
3257	chicago_crime||Community_Area||community_area_no: community area number. unique community area number
3258	chicago_crime||Community_Area||community_area_name: community area name. ['Woodlawn', 'West Town', 'West Ridge', 'West Pullman', 'West Lawn']
3259	chicago_crime||Community_Area||side: district. ['Southwest ', 'South ', 'Far Southeast ', 'Far North ', 'West ']
3260	chicago_crime||Community_Area||population: population of the community. ['98,514', '94,368', '9,426', '81,432', '80,484']
3261	chicago_crime||District||district_no: district number. unique number identifying the district
3262	chicago_crime||District||district_name: district name. name of the district. ['Wentworth', 'Town Hall', 'South Chicago', 'Shakespeare', 'Rogers Park']
3263	chicago_crime||District||address: Street address of the police district building. ['850 West Addison St.', '7808 South Halsted Street', '727 East 111th St', '7040 South Cottage Grove Ave', '6464 North Clark St']
3264	chicago_crime||District||zip_code: zip code. ZIP code of the police district building
3265	chicago_crime||District||commander: Name of the district's commanding officer. ['Yolanda Talley', 'Stephen C. Chung', 'Sean Joyce', 'Ronald A. Pontecore Jr.', 'Robert A. Rubio']. commonsense evidence:  the person who should be responsible for the crime case.
3266	chicago_crime||District||email: Email address to contact district administrators. ['\xa0caps.009district@chicagopolice.org', '\xa0caps.004district@chicagopolice.org', '\xa0CAPS025District@chicagopolice.org', '\xa0CAPS022District@chicagopolice.org', '\xa0CAPS020District@chicagopolice.org']
3267	chicago_crime||District||phone: Main telephone number for the district. ['312-747-8730', '312-747-8366', '312-747-8227', '312-747-8220', '312-747-8210']
3268	chicago_crime||District||fax: Fax number for the district. ['312-747-8545', '312-747-7429', '312-747-6558', '312-747-5935', '312-747-5479']
3269	chicago_crime||District||tty: Number of the district teletype machine.. [None, '312-747-9172', '312-747-9170', '312-747-9169', '312-747-9168', '312-747-8116']. A teletype machine is a device that lets people who are deaf, hard of hearing, or speech-impaired use the telephone to communicate, by allowing them to type text messages.
3270	"chicago_crime||District||twitter: The district twitter handle.. ['\xa0ChicagoCAPS25', '\xa0ChicagoCAPS24', '\xa0ChicagoCAPS22', '\xa0ChicagoCAPS20', '\xa0ChicagoCAPS19']. Twitter is a social networking service on which users post and interact with brief messages known as ""tweets"""
3271	chicago_crime||FBI_Code||fbi_code_no: fbi code number. unique code made by fbi to classify the crime cases. ['01A', '01B', '04A', '04B', '08A']
3272	chicago_crime||FBI_Code||title: Short description of the kind of crime. ['Weapons Violation', 'Vandalism', 'Stolen Property', 'Simple Battery', 'Simple Assault']
3273	chicago_crime||FBI_Code||description: Detailed description of the kind of crime
3274	"chicago_crime||FBI_Code||crime_against: crime against. States who the crime is against.. ['Property', 'Society', 'Persons', 'Persons and Society']. Values are Persons, Property, Society, or ""Persons and Society"""
3275	chicago_crime||IUCR||iucr_no: iucr number. Unique identifier for the incident classification. ['031A', '031B', '033A', '033B', '041A']
3276	chicago_crime||IUCR||primary_description: primary description. The general description of the incident classification. ['NARCOTICS', 'OTHER OFFENSE', 'DECEPTIVE PRACTICE', 'GAMBLING', 'BATTERY']. commonsense evidence:  It's the general description
3277	chicago_crime||IUCR||secondary_description: secondary description. The specific description of the incident classification. commonsense evidence:  It's the specific description
3278	"chicago_crime||IUCR||index_code: index code. Uses values ""I"" and ""N"" to indicate crimes. ['N', 'I']. commonsense evidence:  â¢ ""Indexed"" (severe, such as murder, rape, arson, and robbery)  â¢ ""Non-Indexed"" (less severe, such as vandalism, weapons violations, and peace disturbance)"
3279	chicago_crime||Neighborhood||neighborhood_name: neighborhood name. The neighborhood name as used in everyday communication. ['Albany Park', 'Altgeld Gardens', 'Andersonville', 'Archer Heights', 'Armour Square']
3280	chicago_crime||Neighborhood||community_area_no: community area number. The community area in which most of the neighborhood is located
3281	chicago_crime||Ward||ward_no: ward no. 
3282	chicago_crime||Ward||alderman_first_name: alderman first name. . ['Michael', 'Matthew', 'James', 'Anthony', 'Walter']
3283	chicago_crime||Ward||alderman_last_name: alderman last name. . ['Lopez', 'Waguespack', 'Villegas', 'Vasquez', 'Tunney']
3284	chicago_crime||Ward||alderman_name_suffix: alderman name suffix. . [None, 'Jr.']
3285	chicago_crime||Ward||ward_office_address: ward office address. . [None, '9011 S. Ashland, Unit B', '8539 S. Cottage Grove Ave.', '8359 S. Pulaski \xa0Rd.', '7442 N. Harlem Ave.', '700 E. 79th\xa0Street\xa0']
3286	chicago_crime||Ward||ward_office_zip: ward office zip. . [None, '60618', '60609', '60659', '60640', '60639']
3287	chicago_crime||Ward||ward_email: ward email. 
3288	chicago_crime||Ward||ward_office_phone: ward office phone. . [None, '\xa0773.762.1771', '872.206.2685', '773.966.5336', '773.928.6961', '773.887.3772']
3289	chicago_crime||Ward||ward_office_fax: ward office fax. . [None, '\xa0773.762.1825', '872-206-6826', '773.881.9383', '773.794.8576', '773.672.5133']
3290	chicago_crime||Ward||city_hall_office_room: city hall office room. . [300, 200, 305, 302]
3291	chicago_crime||Ward||city_hall_office_phone: city hall office phone. . [None, '\xa0312.744.6858', '312.744.8805', '312.744.8734', '312.744.6868', '312.744.6857']
3292	chicago_crime||Ward||city_hall_office_fax: city hall office fax. . [None, '312.744.9182', '312.744.8457', '312.744.7738', '312.744.6860', '312.744.6849']
3293	chicago_crime||Ward||Population: 
3294	chicago_crime||Crime||report_no: report number. unique Numeric identifier of the crime report.
3295	chicago_crime||Crime||case_number: case number. Case number assigned to the reported crime.. ['JB522024', 'JB458747', 'JB560410', 'JB523961', 'JB485287']. commonsense evidence:   There is usually one case number for any reported crime except in the case of multiple homicide where a single report will produce one case number for each victim  if case_number appears > 1, it means this is a multiple homicide
3296	chicago_crime||Crime||date: Date of the occurrence of the incident being reported. ['1/1/2018 0:01', '1/1/2018 0:00', '1/1/2018 12:00', '5/1/2018 12:00', '6/1/2018 12:00']
3297	chicago_crime||Crime||block: A redacted address indicating in which city block the incident occurred. ['001XX N STATE ST', '0000X N STATE ST', '008XX N MICHIGAN AVE', '0000X W TERMINAL ST', '0000X S STATE ST']
3298	chicago_crime||Crime||iucr_no: Illinois Uniform Crime Reporting number. Illinois Uniform Crime Reporting code: a four digit code used to classify criminal incidents when taking reports.. ['820', '486', '460', '810', '560']
3299	chicago_crime||Crime||location_description: location description. A description of the kind of area where incident occurred
3300	chicago_crime||Crime||arrest: A true/false value indicating if an arrest has been made. ['FALSE', 'TRUE']
3301	chicago_crime||Crime||domestic: A true/false value indicating if the incident is as case of domestic violence. ['FALSE', 'TRUE']
3302	chicago_crime||Crime||beat: 
3303	chicago_crime||Crime||district_no: district number. A number indicating the geographic subdivision of the police district where the incident occurred
3304	chicago_crime||Crime||ward_no: ward number. A two digit number identifying the legislative district (ward) where the incident occurred.
3305	chicago_crime||Crime||community_area_no: community area number. A number identifying one of 77 geographic areas where the incident occurred
3306	chicago_crime||Crime||fbi_code_no: fbi code number. A code identifying the type of crime reported according to the classification scheme used by the FBI.. ['6', '08B', '14', '26', '11']
3307	chicago_crime||Crime||latitude: The latitude where incident is reported to have occurred.. [None, '41.88350019', '41.97629041', '41.89789513', '41.86854191', '41.88239406']
3308	chicago_crime||Crime||longitude: The longitude where incident is reported to have occurred.. [None, '-87.6278767', '-87.90522722', '-87.62409661', '-87.63923536', '-87.6278448']. commonsense evidence:   The precise location / coordinate: combines the longitude and latitude for plotting purposes. (latitude, longitude)
3309	food_inspection||businesses||business_id: business id. the unique id of the business
3310	food_inspection||businesses||name: the name of the eatery
3311	food_inspection||businesses||address: the eatery address. [None, 'Off The Grid', '24 Willie Mays Plaza', '428 11th St', '3251 20th Ave', '2948 Folsom St']
3312	food_inspection||businesses||city: the city where the eatery is located in. [None, 'SF', 'San Francisco', 'S.F.', 'SAN FRANCISCO', 'SF.']
3313	food_inspection||businesses||postal_code: postal code. the postal code of the eatery. [None, '94110', '94103', '94102', '94133', '94109']
3314	food_inspection||businesses||latitude: the latitude of the position
3315	food_inspection||businesses||longitude: the longitude of the position. commonsense evidence: the distance between eatery A and eatery B = \sqrt{(latitude_A-latitude_B)^2 + (longitude_A-longitude_B)^2}
3316	food_inspection||businesses||phone_number: phone number. the phone number of the eatery
3317	food_inspection||businesses||tax_code: tax code. the tax code of the eatery. [None, 'H24', 'H25', 'H26', 'H03', 'H07']
3318	food_inspection||businesses||business_certificate: business certificate. the business certificate number
3319	food_inspection||businesses||application_date: application date. the application date of the eatery. [None, '2014-04-09']
3320	food_inspection||businesses||owner_name: owner name. the owner's name
3321	food_inspection||businesses||owner_address: owner address. the owner's address
3322	food_inspection||businesses||owner_city: owner city. the city where the owner is located. [None, 'San Francisco', 'SF', 'SAN FRANCISCO', 'S.F.', 'Daly City']
3323	food_inspection||businesses||owner_state: owner state. the state where the owner is located. [None, 'CA', 'Ca', 'SC', 'WA', 'IL']
3324	food_inspection||businesses||owner_zip: owner zip. the zip code of the owner. ['94110', '94109', '94133', '94102', '94103']
3325	food_inspection||inspections||business_id: business id. the unique id of the business
3326	food_inspection||inspections||score: the inspection score. commonsense evidence: The scores range from 1 to 100, where 100 means that the establishment meets all required standards.
3327	food_inspection||inspections||date: the inspection date. ['2014-05-29']
3328	food_inspection||inspections||type: the inspection type. ['Routine - Unscheduled', 'Reinspection/Followup', 'New Ownership', 'New Construction', 'Complaint']
3329	food_inspection||violations||business_id: business id. the unique id of the business
3330	food_inspection||violations||date: the date of the violation. ['2014-06-03']
3331	food_inspection||violations||violation_type_id: violation type id. the unique type id of the violation. ['103154', '103120', '103119', '103144', '103149']
3332	food_inspection||violations||risk_category: risk category. risk category High / Moderate / Low risk. ['Low Risk', 'Moderate Risk', 'High Risk']. commonsense evidence: High risks have more safety and health hazards than low risks
3333	food_inspection||violations||description: the description of the violation
3334	craftbeer||breweries||id: unique ID of the breweries
3335	craftbeer||breweries||name: name of the breweries. ['Summit Brewing Company', 'Sly Fox Brewing Company', 'Otter Creek Brewing', 'Oskar Blues Brewery', 'Lucette Brewing Company']
3336	craftbeer||breweries||city: ['Portland', 'Seattle', 'Chicago', 'Boulder', 'San Diego']
3337	craftbeer||breweries||state: ['CO', 'CA', 'MI', 'OR', 'TX']
3338	craftbeer||beers||id: unique id number of beers
3339	craftbeer||beers||brewery_id: brewery id. id number of the breweries
3340	craftbeer||beers||abv: alcohol by volume. Alcohol by VolumeABV is the most common measurement of alcohol content in beer; it simply indicates how much of the total volume of liquid in a beer is made up of alcohol.
3341	craftbeer||beers||ibu: International Bitterness Units. IBU stands for International Bitterness Units, a scale to gauge the level of a beer's bitterness. More specifically, IBUs measure the parts per million of is humulone from hops in a beer, which gives beer bitterness.
3342	craftbeer||beers||name: name of beers
3343	craftbeer||beers||style: style / sorts of beers. [None, 'American IPA', 'American Pale Ale (APA)', 'American Amber / Red Ale', 'American Blonde Ale', 'American Double / Imperial IPA']
3344	craftbeer||beers||ounces: [12.0, 16.0, 24.0, 19.2, 32.0]
3345	cookbook||Ingredient||ingredient_id: ingredient id. the unique identifier for the ingredient
3346	cookbook||Ingredient||category: the category of the ingredient. ['fresh vegetables', 'meat/poultry', 'spices and seasonings', 'fresh fruit', 'fresh seafood']
3347	cookbook||Ingredient||name: the name of the ingredient. ['zucchini squash', 'zucchini', 'ziti macaroni', 'zest of 1/2 lemon', 'zest of 1 orange']
3348	cookbook||Ingredient||plural: the plural suffix of the ingredient. [None, 's', 'es', '#NAME?']
3349	cookbook||Recipe||recipe_id: recipe id. the unique identifier for the recipe
3350	cookbook||Recipe||title: the title of the recipe
3351	cookbook||Recipe||subtitle: the subtitle of the recipe. [None, 'with Zinfandel Sauce', 'with Yogurt Herb Sauce', 'with Yogurt', 'with Savory Carrots and Prunes', 'with Salmon or Tuna']
3352	cookbook||Recipe||servings: the number of people the recipe can serve
3353	cookbook||Recipe||yield_unit: yield unit. the unit of the yield for the recipe. [None, '2 cups', '1 cake', '4 cups', '1 pie', '1']
3354	cookbook||Recipe||prep_min: preparation minute. the preparation minute of the recipe
3355	cookbook||Recipe||cook_min: cooked minute. the cooked minute of the recipe
3356	cookbook||Recipe||stnd_min: stand minute. the stand minute of the price. commonsense evidence: The stand minute stands for the time to take the dish away from the heat source.  the total time of the recipe = prep_min + cook_min + stnd_min
3357	cookbook||Recipe||source: the source of the recipe
3358	cookbook||Recipe||intro: introduction. the introduction of the recipe
3359	cookbook||Recipe||directions: the directions of the recipe
3360	cookbook||Nutrition||recipe_id: recipe id. the id of the recipe
3361	cookbook||Nutrition||protein: the protein content in the recipe
3362	cookbook||Nutrition||carbo: the carbo content in the recipe
3363	cookbook||Nutrition||alcohol: the alcohol content in the recipe
3364	cookbook||Nutrition||total_fat: total fat. the total fat content in the recipe. commonsense evidence: higher --> higher possibility to gain weight
3365	cookbook||Nutrition||sat_fat: saturated fat. the saturated fat content in the recipe. commonsense evidence: unsaturated fat = total_fat - saturated fat
3366	cookbook||Nutrition||cholestrl: cholesterol. the cholesterol content in the recipe
3367	cookbook||Nutrition||sodium: the sodium content in the recipe. commonsense evidence: Salt/Sodium-Free - Less than 5 mg of sodium per serving Very Low Sodium - 35 mg of sodium or less per serving Low Sodium -140 mg of sodium or less per serving Reduced Sodium - At least 25% less sodium than the regular product Light in Sodium or Lightly Salted - At least 50% less sodium than the regular product No-Salt-Added or Unsalted - No salt is added during processing - but these products may not be salt/sodium-free unless stated
3368	cookbook||Nutrition||iron: the iron content in the recipe. commonsense evidence: if iron > 20mg, it will lead to    constipation   feeling sick   being sick   stomach pain  question could mention any of functions listed before.
3369	cookbook||Nutrition||vitamin_c: vitamin c. the vitamin c content in the recipe. commonsense evidence: Vitamin C, also known as ascorbic acid, if the VC is higher, it will:  helping to protect cells and keeping them healthy   maintaining healthy skin, blood vessels, bones and cartilage   helping with wound healing  question could mention any of functions listed before.
3370	cookbook||Nutrition||vitamin_a: vitamin a. the vitamin a content in the recipe. commonsense evidence: higher --> beneficial to   helping your body's natural defense against illness and infection (the immune system) work properly   helping vision in dim light   keeping skin and the lining of some parts of the body, such as the nose, healthy  question could mention any of functions listed before.
3371	cookbook||Nutrition||fiber: the fiber a content in the recipe
3372	cookbook||Nutrition||pcnt_cal_carb: percentage calculation carbo. percentage of carbo in total nutrient composition
3373	cookbook||Nutrition||pcnt_cal_fat: percentage calculation fat. percentage of fat in total nutrient composition
3374	cookbook||Nutrition||pcnt_cal_prot: percentage calculation protein. percentage of protein in total nutrient composition
3375	cookbook||Nutrition||calories: the calories of the recipe
3376	cookbook||Quantity||quantity_id: quantity id. the unique identifier for the quantity
3377	cookbook||Quantity||recipe_id: recipe id. the id of the recipe
3378	cookbook||Quantity||ingredient_id: ingredient id. the id of the ingredient
3379	cookbook||Quantity||max_qty: maximum quantity. the max quantity of the ingredient
3380	cookbook||Quantity||min_qty: minimum quantity. the min quantity of the ingredient. commonsense evidence: If max_qty equals to min_qty, it means that the ingredient must be rationed.
3381	cookbook||Quantity||unit: the unit of the ingredient. [None, 'cup(s)', 'teaspoon(s)', 'tablespoon(s)', 'pound(s)', 'ounce(s)']
3382	cookbook||Quantity||preparation: . commonsense evidence: 'No data' means the ingredient doesn't need preprocessing.
3383	cookbook||Quantity||optional: whether the ingredient is optional. [None, 'FALSE', 'TRUE']
3384	human_resources||location||locationID: location id. the unique id for location. [1, 2, 3, 4, 5]
3385	human_resources||location||locationcity: location city. the location city. ['Salt Lake City', 'New York City', 'Miami', 'Los Angeles', 'Denver']
3386	human_resources||location||address: the detailed address of the location. ['500 Loop Highway', '450 Peachtree Rd', '316 S. State St', '312 Mount View Dr', '3 Commons Blvd']
3387	human_resources||location||state: the state abbreviation. ['UT', 'NY', 'MA', 'IL', 'GA']
3388	human_resources||location||zipcode: zip code. zip code of the location. [94235, 84125, 60620, 54657, 33103]
3389	human_resources||location||officephone: office phone. the office phone number of the location. ['(801)459-6652', '(705)639-0227', '(617)123-4444', '(518)256-3100', '(404)333-5555']
3390	human_resources||position||positionID: position id. the unique id for position. [1, 2, 3, 4]
3391	human_resources||position||positiontitle: position title. the position title. ['Trainee', 'Regional Manager', 'Manager', 'Account Representative']
3392	human_resources||position||educationrequired: education required. the required education year. ['4 year degree', '6 year degree', '2 year degree']. commonsense evidence: Generally, more complex work requires more education year.
3393	human_resources||position||minsalary: minimum salary. minimum salary of this position. ['US$50,000.00', 'US$25,000.00', 'US$18,000.00', 'US$100,000.00']
3394	human_resources||position||maxsalary: maximum salary. maximum salary of this position. ['US$75,000.00', 'US$250,000.00', 'US$25,000.00', 'US$150,000.00']
3395	human_resources||employee||ssn: social security number. employee's ssn. ['000-01-0000', '000-02-2222', '109-87-6543', '109-87-6544', '111-12-1111']
3396	human_resources||employee||lastname: last name. employee's last name. ['Smith', 'Wood', 'Whitehead', 'Webster', 'Rubin']
3397	human_resources||employee||firstname: first name. employee's first name. ['David', 'Sandy', 'Patricia', 'Holly', 'Emily']. commonsense evidence: employee's full name is firstname lastname .
3398	human_resources||employee||hiredate: hire date. employee's hire date. ['1/29/91', '9/25/97', '8/26/06', '8/14/05', '7/25/80']. yyyy-mm-dd
3399	human_resources||employee||salary: employee's salary. ['US$69,000.00', 'US$65,000.00', 'US$55,000.00', 'US$79,000.00', 'US$75,000.00']. the unit is dollar per year
3400	human_resources||employee||gender: employee's gender. [None, 'M', 'F']
3401	human_resources||employee||performance: employee's performance. [None, 'Good', 'Average', 'Poor']. Good / Average/ Poor
3402	human_resources||employee||positionID: position id. the unique id for position. [2, 1, 3, 4]
3403	human_resources||employee||locationID: location id. the unique id for location. [3, 2, 5, 1, 4]
3404	bike_share_1||station||id: unique ID for each station
3405	bike_share_1||station||name: Station name. ['Yerba Buena Center of the Arts (3rd @ Howard)', 'Washington at Kearney', 'University and Emerson', 'Townsend at 7th', 'Temporary Transbay Terminal (Howard at Beale)']
3406	bike_share_1||station||lat: latitude. commonsense evidence: Can represent the location of the station when combined with longitude.
3407	bike_share_1||station||long: longitude. commonsense evidence: Can represent the location of the station when combined with  latitude.
3408	bike_share_1||station||dock_count: dock count. number of bikes the station can hold. [15, 19, 23, 27, 11]
3409	bike_share_1||station||city: . ['San Francisco', 'San Jose', 'Redwood City', 'Mountain View', 'Palo Alto']
3410	bike_share_1||station||installation_date: installation date. ['8/23/2013', '8/20/2013', '8/19/2013', '8/6/2013', '8/5/2013']
3411	bike_share_1||status||station_id: station id
3412	bike_share_1||status||bikes_available: bikes available. number of available bikes. commonsense evidence: 0 means no bike can be borrowed.
3413	bike_share_1||status||docks_available: docks available. number of available docks. commonsense evidence: 0 means no bike can be returned to this station.
3414	bike_share_1||status||time: . ['2015-08-31 23:59:02']
3415	bike_share_1||trip||id: 
3416	bike_share_1||trip||duration: The duration of the trip in seconds.. commonsense evidence: duration = end_date - start_date
3417	bike_share_1||trip||start_date: start date. ['10/28/2014 8:47', '9/24/2014 8:47', '8/7/2014 8:45', '2/10/2015 8:51', '11/14/2014 8:51']
3418	bike_share_1||trip||start_station_name: start station name. The name of the start station. ['San Francisco Caltrain (Townsend at 4th)', 'San Francisco Caltrain 2 (330 Townsend)', 'Harry Bridges Plaza (Ferry Building)', 'Embarcadero at Sansome', 'Temporary Transbay Terminal (Howard at Beale)']. commonsense evidence: It represents the station name the bike borrowed from.
3419	bike_share_1||trip||start_station_id: start station id. The ID of the start station
3420	bike_share_1||trip||end_date: end date. ['2/20/2015 17:09', '5/7/2015 9:06', '2/24/2015 9:00', '8/18/2015 9:08', '7/15/2014 8:49']
3421	bike_share_1||trip||end_station_name: end station name. The name of the end station. ['San Francisco Caltrain (Townsend at 4th)', 'San Francisco Caltrain 2 (330 Townsend)', 'Harry Bridges Plaza (Ferry Building)', 'Embarcadero at Sansome', '2nd at Townsend']. commonsense evidence: It represents the station name the bike returned to.
3422	bike_share_1||trip||end_station_id: end station id. The ID of the end station
3423	bike_share_1||trip||bike_id: bike id. The ID of the bike
3424	bike_share_1||trip||subscription_type: subscription type. ['Subscriber', 'Customer']. Allowed input: Subscriber, Customer.
3425	bike_share_1||trip||zip_code: zip code
3426	bike_share_1||weather||date: . ['9/9/2014', '9/9/2013', '9/8/2014', '9/8/2013', '9/7/2014']
3427	bike_share_1||weather||max_temperature_f: max temperature in Fahrenheit degree. commonsense evidence: It represents the hottest temperature.
3428	bike_share_1||weather||mean_temperature_f: mean temperature in Fahrenheit degree
3429	bike_share_1||weather||min_temperature_f: min temperature in Fahrenheit degree. commonsense evidence: It represents the coldest temperature.
3430	bike_share_1||weather||max_dew_point_f: max dew point in Fahrenheit degree
3431	bike_share_1||weather||mean_dew_point_f: mean dew point in Fahrenheit degree
3432	bike_share_1||weather||min_dew_point_f: min dew point in Fahrenheit degree
3433	bike_share_1||weather||max_humidity: max humidity
3434	bike_share_1||weather||mean_humidity: mean humidity
3435	bike_share_1||weather||min_humidity: min humidity
3436	bike_share_1||weather||max_sea_level_pressure_inches: max sea level pressure in inches
3437	bike_share_1||weather||mean_sea_level_pressure_inches: mean sea level pressure in inches
3438	bike_share_1||weather||min_sea_level_pressure_inches: min sea level pressure in inches
3439	bike_share_1||weather||max_visibility_miles: max visibility in miles
3440	bike_share_1||weather||mean_visibility_miles: mean visibility in miles
3441	bike_share_1||weather||min_visibility_miles: min visibility in miles
3442	bike_share_1||weather||max_wind_Speed_mph: max wind Speed in mph
3443	bike_share_1||weather||mean_wind_speed_mph: mean wind Speed in mph
3444	bike_share_1||weather||max_gust_speed_mph: max gust Speed in mph
3445	bike_share_1||weather||precipitation_inches: precipitation in inches. ['0', 'T', '0.01', '0.02', '0.04']
3446	bike_share_1||weather||cloud_cover: cloud cover. [None, 0, 1, 2, 3, 4]
3447	bike_share_1||weather||events: . ['Rain', 'Fog', 'Fog-Rain', 'Rain-Thunderstorm', 'rain']. Allowed input: [null], Rain, other
3448	bike_share_1||weather||wind_dir_degrees: wind direction degrees
3449	bike_share_1||weather||zip_code: zip code. ['95113', '94301', '94107', '94063', '94041']
3450	movie_3||film_text||film_id: film id. unique id number identifying the film
3451	movie_3||film_text||title: title of the film. ['ZORRO ARK', 'ZOOLANDER FICTION', 'ZHIVAGO CORE', 'YOUTH KICK', 'YOUNG LANGUAGE']
3452	movie_3||film_text||description: main content of the film
3453	movie_3||actor||actor_id: actor id. unique id number identifying the actor
3454	movie_3||actor||first_name: first name. First name of the actor. ['PENELOPE', 'KENNETH', 'JULIA', 'RUSSELL', 'NICK']
3455	movie_3||actor||last_name: last name. Last name of the actor. ['KILMER', 'TEMPLE', 'NOLTE', 'ZELLWEGER', 'WILLIS']
3456	movie_3||actor||last_update: last update. The time of the latest update. ['2006-02-15 04:34:33.0']
3457	movie_3||address||address_id: address id. unique id number identifying the address
3458	movie_3||address||address: The first address line. ['999 Sanaa Loop', '992 Klerksdorp Loop', '990 Etawah Loop', '984 Novoterkassk Loop', '984 Effon-Alaiye Avenue']
3459	movie_3||address||address2: address 2. the second address line. commonsense evidence: address2 is the additional address if any
3460	movie_3||address||district: . ['Buenos Aires', 'West Bengali', 'Shandong', 'California', 'Uttar Pradesh']
3461	movie_3||address||city_id: city id. 
3462	movie_3||address||postal_code: postal code. . ['9668', '52137', '22474', '99865', '99780']. a postal code is a series of letters or digits or both, sometimes including spaces or punctuation, included in a postal address for the purpose of sorting mail.
3463	movie_3||address||phone: phone number. ['99883471275', '998009777982', '99760893676', '997453607116', '995527378381']
3464	movie_3||address||last_update: last update. The time of the latest update. ['2006-02-15 04:45:30.0']
3465	movie_3||category||category_id: category id. unique id number identifying the category
3466	movie_3||category||name: name of the category. ['Travel', 'Sports', 'Sci-Fi', 'New', 'Music']
3467	movie_3||category||last_update: last update. The time of the latest update. ['2006-02-15 04:46:27.0']
3468	movie_3||city||city_id: city id. unique id number identifying the city
3469	movie_3||city||city: name of the city. ['London', 's-Hertogenbosch', 'ostka', 'guas Lindas de Gois', 'al-Qatif']
3470	movie_3||city||country_id: country id. number identifying the country which the city belongs to
3471	movie_3||city||last_update: last update. The time of the latest update. ['2006-02-15 04:45:25.0']
3472	movie_3||country||country_id: country id. unique id number identifying the country
3473	movie_3||country||country: the name of the country. number identifying the country. ['Zambia', 'Yugoslavia', 'Yemen', 'Virgin Islands, U.S.', 'Vietnam']. commonsense evidence:  Africa: (Algeria, Angola, Cameroon, Chad, Congo, The Democratic Republic of the, Egypt, Ethiopia, Gambia...)  Asia: (Afghanistan, Armenia, Azerbaijan,  Bahrain, Bangladesh, Brunei, Cambodia, China, Hong Kong, India, Indonesia, Iran, Iraq, Israel...)  Oceania (American Samoa, Australia, French Polynesia...)  North America (Anguilla, Canada, Dominican Republic, Ecuador, Greenland...)  South America (Argentina, Bolivia, Brazil, Chile,  Colombia, Ecuador, French Guiana....)  Europe (Austria, Belarus, Bulgaria, Czech Republic, Estonia, Faroe Islands, Finland, France, Germany, Greece, Holy See (Vatican City State), Hungary, Italy...) details: https://worldpopulationreview.com/country-rankings/list-of-countries-by-continent question can mention i.e., Europe instead of Austria, etc.
3474	movie_3||country||last_update: last update. The time of the latest update. ['2006-02-15 04:44:00.0']
3475	movie_3||customer||customer_id: country id. unique id number identifying the country
3476	movie_3||customer||store_id: store id. unique id number identifying the store. [1, 2]
3477	movie_3||customer||first_name: first name. First name of the customer. ['WILLIE', 'TRACY', 'TERRY', 'MARION', 'LESLIE']
3478	movie_3||customer||last_name: last name. Last name of the customer. ['YOUNG', 'YEE', 'YANEZ', 'WYMAN', 'WRIGHT']
3479	movie_3||customer||email: Email address of the customer
3480	movie_3||customer||address_id: address id. Address id number of the customer.
3481	movie_3||customer||active: Wether the customer is active or not.. [1, 0]. 1: active 0: not active
3482	movie_3||customer||create_date: create date. The date when the record is created.. ['2006-02-14 22:04:37.0']
3483	movie_3||customer||last_update: last update. The time of the latest update. ['2006-02-15 04:57:20.0']
3484	movie_3||film||film_id: film id. unique id number identifying the film
3485	movie_3||film||title: title of the film. ['ZORRO ARK', 'ZOOLANDER FICTION', 'ZHIVAGO CORE', 'YOUTH KICK', 'YOUNG LANGUAGE']
3486	movie_3||film||description: main content of the film
3487	movie_3||film||release_year: release year. the year when the film is released. ['2006']
3488	movie_3||film||language_id: language id. the language id of the film. [1]
3489	movie_3||film||original_language_id: original language id. the original language id of the film
3490	movie_3||film||rental_duration: rental duration. how long this film can be rent at once. [6, 4, 3, 7, 5]. commonsense evidence: days price / day = rental_rate / retal_duration
3491	movie_3||film||rental_rate: rental rate. the rate of renting this film. [0.99, 4.99, 2.99]. higher -> expensive
3492	movie_3||film||length: Duration time of the film screening. minutes
3493	movie_3||film||replacement_cost: replacement cost. cost of replacing this film
3494	movie_3||film||rating: The Motion Picture Association film rating. ['PG-13', 'NC-17', 'R', 'PG', 'G']. commonsense evidence: G ?General Audiences PG ? Parental Guidance Suggested PG-13 ? Parents Strongly Cautioned R ? Restricted NC-17 ? Adults Only
3495	movie_3||film||special_features: special features. features of this film
3496	movie_3||film||last_update: last update. The time of the latest update. ['2006-02-15 05:03:42.0']
3497	movie_3||film_actor||actor_id: actor id. unique id number identifying the actor
3498	movie_3||film_actor||film_id: film id. id number identifying the film
3499	movie_3||film_actor||last_update: last update. The time of the latest update. ['2006-02-15 05:05:03.0']
3500	movie_3||film_category||film_id: film id. unique id number identifying the film
3501	movie_3||film_category||category_id: category id. id number identifying the category
3502	movie_3||film_category||last_update: last update. The time of the latest update. ['2006-02-15 05:07:09.0']
3503	movie_3||inventory||inventory_id: inventory id. unique id number identifying the inventory
3504	movie_3||inventory||film_id: film id. unique id number identifying the film
3505	movie_3||inventory||store_id: store id. id of the store. [2, 1]
3506	movie_3||inventory||last_update: last update. the last update time of the film. ['2006-02-15 05:09:17.0']
3507	movie_3||language||language_id: language id. unique id number identifying the language. [1, 2, 3, 4, 5]
3508	movie_3||language||name: name of the language. ['Mandarin', 'Japanese', 'Italian', 'German', 'French']
3509	movie_3||language||last_update: last update. The time of the latest update. ['2006-02-15 05:02:19.0']
3510	movie_3||payment||payment_id: payment id. unique id number identifying the payment
3511	movie_3||payment||customer_id: customer id. unique id number identifying the customer
3512	movie_3||payment||staff_id: staff id. unique id number identifying the staff. [1, 2]
3513	movie_3||payment||rental_id: rental id. unique id number identifying the rental
3514	movie_3||payment||amount: unique id number identifying the amount
3515	movie_3||payment||payment_date: payment date. the date when the payment ocurs. ['2006-02-14 15:16:03.0']
3516	movie_3||payment||last_update: last update. The time of the latest update. ['2006-02-15 22:12:30.0']
3517	movie_3||rental||rental_id: rental id. unique id number identifying the rental
3518	movie_3||rental||rental_date: rental date. date when the rental occurs. ['2006-02-14 15:16:03.0']
3519	movie_3||rental||inventory_id: inventory id. id number identifying the inventory
3520	movie_3||rental||customer_id: customer id. id number identifying the customer
3521	movie_3||rental||return_date: return date. date when the rental returns. [None, '2005-08-28 20:49:42.0']
3522	movie_3||rental||staff_id: staff id. id number identifying the staff. [1, 2]
3523	movie_3||rental||last_update: last update. The time of the latest update. ['2006-02-15 21:30:53.0']
3524	movie_3||staff||staff_id: staff id. unique id number identifying the staff. [1, 2]
3525	movie_3||staff||first_name: first name. First name of the actor. ['Mike', 'Jon']
3526	movie_3||staff||last_name: last name. Last name of the actor. ['Stephens', 'Hillyer']. full name = (first name, last name)
3527	movie_3||staff||address_id: address id. id number identifying the address. [4, 3]
3528	movie_3||staff||picture: picture of the staff. 
3529	movie_3||staff||email: email of the staff. 
3530	movie_3||staff||store_id: store id. id number identifying the store. [2, 1]
3531	movie_3||staff||active: Whether the staff is active or not.. [1]. 1: active 0: not active
3532	movie_3||staff||username: username to login the staff. ['Mike', 'Jon']
3533	movie_3||staff||password: password to login the staff. ['8cb2237d0679ca88db6464eac60da96345513964']
3534	movie_3||staff||last_update: last update. The time of the latest update. ['2006-02-15 04:57:16.0']
3535	movie_3||store||store_id: store id. unique id number identifying the store. [1, 2]
3536	movie_3||store||manager_staff_id: manager staff id. id number identifying the manager staff. [1, 2]
3537	movie_3||store||address_id: address id. id number identifying the address. [2, 1]
3538	movie_3||store||last_update: last update. The time of the latest update. ['2006-02-15 04:57:12.0']
