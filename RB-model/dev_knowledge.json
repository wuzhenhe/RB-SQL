{
  "california_schools": {
    "tables": {
      "frpm": {
        "CDSCode": {
          "full_column_name": "CDSCode",
          "column_desc": "CDSCode",
          "ctype": "TEXT",
          "notnull": 1,
          "dflt_value": null,
          "primary_key": 1,
          "examples": "['01100170109835', '01100170112607', '01100170118489', '01100170123968', '01100170124172']",
          "value_desc": ""
        },
        "Academic Year": {
          "full_column_name": "Academic Year",
          "column_desc": "Academic Year",
          "ctype": "TEXT",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "['2014-2015']",
          "value_desc": ""
        },
        "County Code": {
          "full_column_name": "County Code",
          "column_desc": "County Code",
          "ctype": "TEXT",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "['19', '37', '30', '36', '33']",
          "value_desc": ""
        },
        "District Code": {
          "full_column_name": "District Code",
          "column_desc": "District Code",
          "ctype": "INTEGER",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "",
          "value_desc": ""
        },
        "School Code": {
          "full_column_name": "School Code",
          "column_desc": "School Code",
          "ctype": "TEXT",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "['0000000', '9010745', '6121081', '6121073', '6121016']",
          "value_desc": ""
        },
        "County Name": {
          "full_column_name": "County Name",
          "column_desc": "County Code",
          "ctype": "TEXT",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "['Los Angeles', 'San Diego', 'Orange', 'San Bernardino', 'Riverside']",
          "value_desc": ""
        },
        "District Name": {
          "full_column_name": "District Name",
          "column_desc": "District Name",
          "ctype": "TEXT",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "",
          "value_desc": ""
        },
        "School Name": {
          "full_column_name": "School Name",
          "column_desc": "School Name",
          "ctype": "TEXT",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "",
          "value_desc": ""
        },
        "District Type": {
          "full_column_name": "District Type",
          "column_desc": "District Type",
          "ctype": "TEXT",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "['Unified School District', 'Elementary School District', 'High School District', 'County Office of Education (COE)', 'State Board of Education']",
          "value_desc": ""
        },
        "School Type": {
          "full_column_name": "School Type",
          "column_desc": "School Type",
          "ctype": "TEXT",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "[None, 'Elementary Schools (Public)', 'High Schools (Public)', 'Intermediate/Middle Schools (Public)', 'Continuation High Schools', 'Alternative Schools of Choice']",
          "value_desc": ""
        },
        "Educational Option Type": {
          "full_column_name": "Educational Option Type",
          "column_desc": "Educational Option Type",
          "ctype": "TEXT",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "[None, 'Traditional', 'Continuation School', 'Alternative School of Choice', 'Community Day School', 'Special Education School']",
          "value_desc": ""
        },
        "NSLP Provision Status": {
          "full_column_name": "NSLP Provision Status",
          "column_desc": "NSLP Provision Status",
          "ctype": "TEXT",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "[None, 'Provision 2', 'Breakfast Provision 2', 'CEP', 'Multiple Provision Types', 'Provision 1']",
          "value_desc": ""
        },
        "Charter School (Y/N)": {
          "full_column_name": "Charter School (Y/N)",
          "column_desc": "Charter School (Y/N)",
          "ctype": "INTEGER",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "[None, 0, 1]",
          "value_desc": "0: N;\n1: Y"
        },
        "Charter School Number": {
          "full_column_name": "Charter School Number",
          "column_desc": "Charter School Number",
          "ctype": "TEXT",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "[None, '00D2', '0756', '00D4', '00D1', '1700']",
          "value_desc": ""
        },
        "Charter Funding Type": {
          "full_column_name": "Charter Funding Type",
          "column_desc": "Charter Funding Type",
          "ctype": "TEXT",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "[None, 'Directly funded', 'Locally funded', 'Not in CS funding model']",
          "value_desc": ""
        },
        "IRC": {
          "full_column_name": "IRC",
          "column_desc": "",
          "ctype": "INTEGER",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "[None, 0, 1]",
          "value_desc": "Not useful"
        },
        "Low Grade": {
          "full_column_name": "Low Grade",
          "column_desc": "Low Grade",
          "ctype": "TEXT",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "['K', '9', '6', '7', 'P']",
          "value_desc": ""
        },
        "High Grade": {
          "full_column_name": "High Grade",
          "column_desc": "High Grade",
          "ctype": "TEXT",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "['12', '5', '8', '6', '3']",
          "value_desc": ""
        },
        "Enrollment (K-12)": {
          "full_column_name": "Enrollment (K-12)",
          "column_desc": "Enrollment (K-12)",
          "ctype": "REAL",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "",
          "value_desc": "commonsense evidence:\n\nK-12: 1st grade - 12nd grade"
        },
        "Free Meal Count (K-12)": {
          "full_column_name": "Free Meal Count (K-12)",
          "column_desc": "Free Meal Count (K-12)",
          "ctype": "REAL",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "",
          "value_desc": "commonsense evidence:\n\neligible free rate = Free Meal Count / Enrollment"
        },
        "Percent (%) Eligible Free (K-12)": {
          "full_column_name": "Percent (%) Eligible Free (K-12)",
          "column_desc": "",
          "ctype": "REAL",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "",
          "value_desc": ""
        },
        "FRPM Count (K-12)": {
          "full_column_name": "FRPM Count (K-12)",
          "column_desc": "Free or Reduced Price Meal Count (K-12)",
          "ctype": "REAL",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "",
          "value_desc": "commonsense evidence:\n\neligible FRPM rate = FRPM / Enrollment"
        },
        "Percent (%) Eligible FRPM (K-12)": {
          "full_column_name": "Percent (%) Eligible FRPM (K-12)",
          "column_desc": "",
          "ctype": "REAL",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "",
          "value_desc": ""
        },
        "Enrollment (Ages 5-17)": {
          "full_column_name": "Enrollment (Ages 5-17)",
          "column_desc": "Enrollment (Ages 5-17)",
          "ctype": "REAL",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "",
          "value_desc": ""
        },
        "Free Meal Count (Ages 5-17)": {
          "full_column_name": "Free Meal Count (Ages 5-17)",
          "column_desc": "Free Meal Count (Ages 5-17)",
          "ctype": "REAL",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "",
          "value_desc": "commonsense evidence:\n\neligible free rate = Free Meal Count / Enrollment"
        },
        "Percent (%) Eligible Free (Ages 5-17)": {
          "full_column_name": "Percent (%) Eligible Free (Ages 5-17)",
          "column_desc": "",
          "ctype": "REAL",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "",
          "value_desc": ""
        },
        "FRPM Count (Ages 5-17)": {
          "full_column_name": "FRPM Count (Ages 5-17)",
          "column_desc": "",
          "ctype": "REAL",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "",
          "value_desc": ""
        },
        "Percent (%) Eligible FRPM (Ages 5-17)": {
          "full_column_name": "Percent (%) Eligible FRPM (Ages 5-17)",
          "column_desc": "",
          "ctype": "REAL",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "",
          "value_desc": ""
        },
        "2013-14 CALPADS Fall 1 Certification Status": {
          "full_column_name": "2013-14 CALPADS Fall 1 Certification Status",
          "column_desc": "2013-14 CALPADS Fall 1 Certification Status",
          "ctype": "INTEGER",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "[1]",
          "value_desc": ""
        }
      },
      "satscores": {
        "cds": {
          "full_column_name": "cds",
          "column_desc": "California Department Schools",
          "ctype": "TEXT",
          "notnull": 1,
          "dflt_value": null,
          "primary_key": 1,
          "examples": "['10101080000000', '10101080109991', '10101080111682', '10101080119628', '10621170000000']",
          "value_desc": ""
        },
        "rtype": {
          "full_column_name": "rtype",
          "column_desc": "rtype",
          "ctype": "TEXT",
          "notnull": 1,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "['S', 'D']",
          "value_desc": "unuseful"
        },
        "sname": {
          "full_column_name": "school name",
          "column_desc": "school name",
          "ctype": "TEXT",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "[None, 'Middle College High', 'John F. Kennedy High', 'Independence High', 'Foothill High', 'Washington High']",
          "value_desc": ""
        },
        "dname": {
          "full_column_name": "district name",
          "column_desc": "district segment",
          "ctype": "TEXT",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "['Los Angeles Unified', 'San Diego Unified', 'Oakland Unified', 'San Francisco Unified', 'Kern High']",
          "value_desc": ""
        },
        "cname": {
          "full_column_name": "county name",
          "column_desc": "county name",
          "ctype": "TEXT",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "['Los Angeles', 'San Diego', 'San Bernardino', 'Riverside', 'Orange']",
          "value_desc": ""
        },
        "enroll12": {
          "full_column_name": "enrollment (1st-12nd grade)",
          "column_desc": "enrollment (1st-12nd grade)",
          "ctype": "INTEGER",
          "notnull": 1,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "",
          "value_desc": ""
        },
        "NumTstTakr": {
          "full_column_name": "Number of Test Takers",
          "column_desc": "Number of Test Takers in this school",
          "ctype": "INTEGER",
          "notnull": 1,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "",
          "value_desc": "number of test takers in each school"
        },
        "AvgScrRead": {
          "full_column_name": "average scores in Reading",
          "column_desc": "average scores in Reading",
          "ctype": "INTEGER",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "",
          "value_desc": "average scores in Reading"
        },
        "AvgScrMath": {
          "full_column_name": "average scores in Math",
          "column_desc": "average scores in Math",
          "ctype": "INTEGER",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "",
          "value_desc": "average scores in Math"
        },
        "AvgScrWrite": {
          "full_column_name": "average scores in writing",
          "column_desc": "average scores in writing",
          "ctype": "INTEGER",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "",
          "value_desc": "average scores in writing"
        },
        "NumGE1500": {
          "full_column_name": "Number of Test Takers Whose Total SAT Scores Are Greater or Equal to 1500",
          "column_desc": "Number of Test Takers Whose Total SAT Scores Are Greater or Equal to 1500",
          "ctype": "INTEGER",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "",
          "value_desc": "Number of Test Takers Whose Total SAT Scores Are Greater or Equal to 1500\n\ncommonsense evidence:\n\nExcellence Rate = NumGE1500 / NumTstTakr"
        }
      },
      "schools": {
        "CDSCode": {
          "full_column_name": "CDSCode",
          "column_desc": "CDSCode",
          "ctype": "TEXT",
          "notnull": 1,
          "dflt_value": null,
          "primary_key": 1,
          "examples": "['01100170000000', '01100170109835', '01100170112607', '01100170118489', '01100170123968']",
          "value_desc": ""
        },
        "NCESDist": {
          "full_column_name": "National Center for Educational Statistics school district identification number",
          "column_desc": "This field represents the 7-digit National Center for Educational Statistics (NCES) school district identification number. The first 2 digits identify the state and the last 5 digits identify the school district. Combined, they make a unique 7-digit ID for each school district.",
          "ctype": "TEXT",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "[None, '0622710', '0634320', '0628050', '0634410', '0614550']",
          "value_desc": ""
        },
        "NCESSchool": {
          "full_column_name": "National Center for Educational Statistics school identification number",
          "column_desc": "This field represents the 5-digit NCES school identification number. The NCESSchool combined with the NCESDist form a unique 12-digit ID for each school.",
          "ctype": "TEXT",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "[None, '12271', '13785', '13747', '12909', '12311']",
          "value_desc": ""
        },
        "StatusType": {
          "full_column_name": "StatusType",
          "column_desc": "This field identifies the status of the district.",
          "ctype": "TEXT",
          "notnull": 1,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "['Active', 'Closed', 'Merged', 'Pending']",
          "value_desc": "Definitions of the valid status types are listed below:\n·       Active: The district is in operation and providing instructional services.\n·       Closed: The district is not in operation and no longer providing instructional services.\n·       Merged: The district has combined with another district or districts.\n·       Pending: The district has not opened for operation and instructional services yet, but plans to open within the next 9–12 months."
        },
        "County": {
          "full_column_name": "County",
          "column_desc": "County name",
          "ctype": "TEXT",
          "notnull": 1,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "['Los Angeles', 'San Diego', 'Orange', 'San Bernardino', 'Santa Clara']",
          "value_desc": ""
        },
        "District": {
          "full_column_name": "District",
          "column_desc": "District",
          "ctype": "TEXT",
          "notnull": 1,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "",
          "value_desc": ""
        },
        "School": {
          "full_column_name": "School",
          "column_desc": "School",
          "ctype": "TEXT",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "",
          "value_desc": ""
        },
        "Street": {
          "full_column_name": "Street",
          "column_desc": "Street",
          "ctype": "TEXT",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "",
          "value_desc": ""
        },
        "StreetAbr": {
          "full_column_name": "street address",
          "column_desc": "The abbreviated street address of the school, district, or administrative authority’s physical location.",
          "ctype": "TEXT",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "",
          "value_desc": "The abbreviated street address of the school, district, or administrative authority’s physical location. Note: Some records (primarily records of closed or retired schools) may not have data in this field."
        },
        "City": {
          "full_column_name": "City",
          "column_desc": "City",
          "ctype": "TEXT",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "[None, 'Los Angeles', 'San Diego', 'San Jose', 'Sacramento', 'Fresno']",
          "value_desc": ""
        },
        "Zip": {
          "full_column_name": "Zip",
          "column_desc": "Zip",
          "ctype": "TEXT",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "[None, '91723', '95959', '94558', '92345', '90278']",
          "value_desc": ""
        },
        "State": {
          "full_column_name": "State",
          "column_desc": "State",
          "ctype": "TEXT",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "[None, 'CA']",
          "value_desc": ""
        },
        "MailStreet": {
          "full_column_name": "MailStreet",
          "column_desc": "MailStreet",
          "ctype": "TEXT",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "",
          "value_desc": "The unabbreviated mailing address of the school, district, or administrative authority. Note: 1) Some entities (primarily closed or retired schools) may not have data in this field; 2) Many active entities have not provided a mailing street address. For your convenience we have filled the unpopulated MailStreet cells with Street data."
        },
        "MailStrAbr": {
          "full_column_name": "mailing street address",
          "column_desc": "",
          "ctype": "TEXT",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "",
          "value_desc": "the abbreviated mailing street address of the school, district, or administrative authority.Note: Many active entities have not provided a mailing street address. For your convenience we have filled the unpopulated MailStrAbr cells with StreetAbr data."
        },
        "MailCity": {
          "full_column_name": "mailing city",
          "column_desc": "",
          "ctype": "TEXT",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "[None, 'Los Angeles', 'San Diego', 'San Jose', 'Sacramento', 'Oakland']",
          "value_desc": "The city associated with the mailing address of the school, district, or administrative authority. Note: Many entities have not provided a mailing address city. For your convenience we have filled the unpopulated MailCity cells with City data."
        },
        "MailZip": {
          "full_column_name": "mailing zip",
          "column_desc": "",
          "ctype": "TEXT",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "[None, '94606', '91710-4130', '92626-4300', '90266', '95336-0032']",
          "value_desc": "The zip code associated with the mailing address of the school, district, or administrative authority. Note: Many entities have not provided a mailing address zip code. For your convenience we have filled the unpopulated MailZip cells with Zip data."
        },
        "MailState": {
          "full_column_name": "mailing state",
          "column_desc": "",
          "ctype": "TEXT",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "[None, 'CA']",
          "value_desc": "The state within the mailing address. For your convenience we have filled the unpopulated MailState cells with State data."
        },
        "Phone": {
          "full_column_name": "Phone",
          "column_desc": "Phone",
          "ctype": "TEXT",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "[None, '(805) 581-0202', '(619) 243-5014', '(562) 698-8121', '(559) 683-4667', '(650) 329-2800']",
          "value_desc": ""
        },
        "Ext": {
          "full_column_name": "extension",
          "column_desc": "The phone number extension of the school, district, or administrative authority.",
          "ctype": "TEXT",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "[None, '200', '201', '111', '352', '221']",
          "value_desc": "The phone number extension of the school, district, or administrative authority."
        },
        "Website": {
          "full_column_name": "Website",
          "column_desc": "The website address of the school, district, or administrative authority.",
          "ctype": "TEXT",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "",
          "value_desc": "The website address of the school, district, or administrative authority."
        },
        "OpenDate": {
          "full_column_name": "OpenDate",
          "column_desc": "The date the school opened.",
          "ctype": "DATE",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "[None, '1980-07-01']",
          "value_desc": ""
        },
        "ClosedDate": {
          "full_column_name": "ClosedDate",
          "column_desc": "The date the school closed.",
          "ctype": "DATE",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "[None, '1989-06-30']",
          "value_desc": ""
        },
        "Charter": {
          "full_column_name": "Charter",
          "column_desc": "This field identifies a charter school.",
          "ctype": "INTEGER",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "[None, 0, 1]",
          "value_desc": "The field is coded as follows:\n\n·       1 = The school is a charter\n\n·       0 = The school is not a charter"
        },
        "CharterNum": {
          "full_column_name": "CharterNum",
          "column_desc": "The charter school number,",
          "ctype": "TEXT",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "[None, '00D2', '0756', '00D4', '00D1', '1826']",
          "value_desc": "4-digit number assigned to a charter school."
        },
        "FundingType": {
          "full_column_name": "FundingType",
          "column_desc": "Indicates the charter school funding type",
          "ctype": "TEXT",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "[None, 'Directly funded', 'Locally funded', 'Not in CS funding model']",
          "value_desc": "Values are as follows:\n\n·       Not in CS (California School) funding model\n\n·       Locally funded\n\n·       Directly funded"
        },
        "DOC": {
          "full_column_name": "District Ownership Code",
          "column_desc": "District Ownership Code",
          "ctype": "TEXT",
          "notnull": 1,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "['54', '52', '00', '56', '98']",
          "value_desc": "The District Ownership Code (DOC) is the numeric code used to identify the category of the Administrative Authority.\n       00 - County Office of Education\n       02 – State Board of Education\n       03 – Statewide Benefit Charter\n       31 – State Special Schools\n       34 – Non-school Location*\n       52 – Elementary School District\n       54 – Unified School District\n       56 – High School District\n       98 – Regional Occupational Center/Program (ROC/P)\ncommonsense evidence:\n*Only the California Education Authority has been included in the non-school location category."
        },
        "DOCType": {
          "full_column_name": "The District Ownership Code Type",
          "column_desc": "The District Ownership Code Type is the text description of the DOC category.",
          "ctype": "TEXT",
          "notnull": 1,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "['Unified School District', 'Elementary School District', 'County Office of Education (COE)', 'High School District', 'Regional Occupation Center/Program (ROC/P)']",
          "value_desc": "(See text values in DOC field description above)"
        },
        "SOC": {
          "full_column_name": "School Ownership Code",
          "column_desc": "The School Ownership Code is a numeric code used to identify the type of school.",
          "ctype": "TEXT",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "[None, '60', '66', '62', '68', '09']",
          "value_desc": "08 - Preschool      \n       09 – Special Education Schools (Public)\n      11 – Youth Authority Facilities (CEA)\n       13 – Opportunity Schools\n       14 – Juvenile Court Schools\n       15 – Other County or District Programs\n       31 – State Special Schools\n       60 – Elementary School (Public)\n       61 – Elementary School in 1 School District (Public)\n       62 – Intermediate/Middle Schools (Public)\n       63 – Alternative Schools of Choice\n       64 – Junior High Schools (Public)\n       65 – K-12 Schools (Public)\n       66 – High Schools (Public)\n       67 – High Schools in 1 School District (Public)\n       68 – Continuation High Schools\n       69 – District Community Day Schools\n       70 – Adult Education Centers\n       98 – Regional Occupational Center/Program (ROC/P)"
        },
        "SOCType": {
          "full_column_name": "School Ownership Code Type",
          "column_desc": "The School Ownership Code Type is the text description of the type of school.",
          "ctype": "TEXT",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "[None, 'Elementary Schools (Public)', 'High Schools (Public)', 'Intermediate/Middle Schools (Public)', 'Continuation High Schools', 'Special Education Schools (Public)']",
          "value_desc": "The School Ownership Code Type is the text description of the type of school."
        },
        "EdOpsCode": {
          "full_column_name": "Education Option Code",
          "column_desc": "The Education Option Code is a short text description of the type of education offered.",
          "ctype": "TEXT",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "[None, 'TRAD', 'CON', 'COMMDAY', 'ALTSOC', 'SPEC']",
          "value_desc": "ALTSOC – Alternative School of Choice\n      COMM – County Community School\n       COMMDAY – Community Day School\n       CON – Continuation School\n       JUV – Juvenile Court School\n       OPP – Opportunity School\n       YTH – Youth Authority School\n       SSS – State Special School\n       SPEC – Special Education School\n       TRAD – Traditional\n       ROP – Regional Occupational Program\n       HOMHOS – Home and Hospital\n       SPECON – District Consortia Special Education School"
        },
        "EdOpsName": {
          "full_column_name": "Educational Option Name",
          "column_desc": "Educational Option Name",
          "ctype": "TEXT",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "[None, 'Traditional', 'Continuation School', 'Community Day School', 'Alternative School of Choice', 'Special Education School']",
          "value_desc": "The Educational Option Name is the long text description of the type of education being offered."
        },
        "EILCode": {
          "full_column_name": "Educational Instruction Level Code",
          "column_desc": "The Educational Instruction Level Code is a short text description of the institution's type relative to the grade range served.",
          "ctype": "TEXT",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "[None, 'ELEM', 'HS', 'UG', 'INTMIDJR', 'ELEMHIGH']",
          "value_desc": "A – Adult\n       ELEM – Elementary\n       ELEMHIGH – Elementary-High Combination\n       HS – High School\n       INTMIDJR – Intermediate/Middle/Junior High\n       PS – Preschool\n       UG – Ungraded"
        },
        "EILName": {
          "full_column_name": "Educational Instruction Level Name",
          "column_desc": "The Educational Instruction Level Name is the long text description of the institution’s type relative to the grade range served.",
          "ctype": "TEXT",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "[None, 'Elementary', 'High School', 'Ungraded', 'Intermediate/Middle/Junior High', 'Elementary-High Combination']",
          "value_desc": "The Educational Instruction Level Name is the long text description of the institution’s type relative to the grade range served."
        },
        "GSoffered": {
          "full_column_name": "grade span offered",
          "column_desc": "The grade span offered is the lowest grade and the highest grade offered or supported by the school, district, or administrative authority. This field might differ from the grade span served as reported in the most recent certified California Longitudinal Pupil Achievement (CALPADS) Fall 1 data collection.",
          "ctype": "TEXT",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "[None, 'K-5', '9-12', 'K-6', 'K-8', '6-8']",
          "value_desc": "For example XYZ School might display the following data:\n\nGSoffered = P–Adult\n\nGSserved = K–12"
        },
        "GSserved": {
          "full_column_name": "grade span served.",
          "column_desc": "It is the lowest grade and the highest grade of student enrollment as reported in the most recent certified CALPADS Fall 1 data collection. Only K–12 enrollment is reported through CALPADS. This field may differ from the grade span offered.",
          "ctype": "TEXT",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "[None, 'K-5', 'K-6', '9-12', 'K-8', '6-8']",
          "value_desc": "commonsense evidence:\n\n1.     Only K–12 enrollment is reported through CALPADS\n\n2.     Note: Special programs at independent study, alternative education, and special education schools will often exceed the typical grade span for schools of that type"
        },
        "Virtual": {
          "full_column_name": "Virtual",
          "column_desc": "This field identifies the type of virtual instruction offered by the school. Virtual instruction is instruction in which students and teachers are separated by time and/or location, and interaction occurs via computers and/or telecommunications technologies.",
          "ctype": "TEXT",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "[None, 'N', 'P', 'F']",
          "value_desc": "The field is coded as follows:\n\n·       F = Exclusively Virtual – The school has no physical building where students meet with each other or with teachers, all instruction is virtual.\n\n·       V = Primarily Virtual – The school focuses on a systematic program of virtual instruction but includes some physical meetings among students or with teachers.\n\n·       C = Primarily Classroom – The school offers virtual courses but virtual instruction is not the primary means of instruction.\n\n·       N = Not Virtual – The school does not offer any virtual instruction.\n\n·       P = Partial Virtual – The school offers some, but not all, instruction through virtual instruction. Note: This value was retired and replaced with the Primarily Virtual and Primarily Classroom values beginning with the 2016–17 school year."
        },
        "Magnet": {
          "full_column_name": "Magnet",
          "column_desc": "This field identifies whether a school is a magnet school and/or provides a magnet program.",
          "ctype": "INTEGER",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "[None, 0, 1]",
          "value_desc": "The field is coded as follows:\n\n·       Y = Magnet - The school is a magnet school and/or offers a magnet program.\n\n·       N = Not Magnet - The school is not a magnet school and/or does not offer a magnet program.\n\ncommonsense evidence:\n\nNote: Preschools and adult education centers do not contain a magnet school indicator."
        },
        "Latitude": {
          "full_column_name": "Latitude",
          "column_desc": "The angular distance (expressed in degrees) between the location of the school, district, or administrative authority and the equator measured north to south.",
          "ctype": "REAL",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "",
          "value_desc": "The angular distance (expressed in degrees) between the location of the school, district, or administrative authority and the equator measured north to south."
        },
        "Longitude": {
          "full_column_name": "Longitude",
          "column_desc": "The angular distance (expressed in degrees) between the location of the school, district, or administrative authority and the prime meridian (Greenwich, England) measured from west to east.",
          "ctype": "REAL",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "",
          "value_desc": "The angular distance (expressed in degrees) between the location of the school, district, or administrative authority and the prime meridian (Greenwich, England) measured from west to east."
        },
        "AdmFName1": {
          "full_column_name": "administrator's first name 1",
          "column_desc": "administrator's first name",
          "ctype": "TEXT",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "[None, 'David', 'Michael', 'John', 'Jennifer', 'Lisa']",
          "value_desc": "The superintendent’s or principal’s first name.\n\ncommonsense evidence:\n\nOnly active and pending districts and schools will display administrator information, if applicable."
        },
        "AdmLName1": {
          "full_column_name": "administrator's last name 1",
          "column_desc": "administrator's last name",
          "ctype": "TEXT",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "",
          "value_desc": "The superintendent’s or principal’s last name.\n\ncommonsense evidence:\nOnly active and pending districts and schools will display administrator information, if applicable."
        },
        "AdmEmail1": {
          "full_column_name": "administrator's email address 1",
          "column_desc": "administrator's email address",
          "ctype": "TEXT",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "",
          "value_desc": "The superintendent’s or principal’s email address.\n\ncommonsense evidence:\n\nOnly active and pending districts and schools will display administrator information, if applicable."
        },
        "AdmFName2": {
          "full_column_name": "administrator's first name 2",
          "column_desc": "",
          "ctype": "TEXT",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "[None, 'Steve', 'Delphine', 'Tim', 'Michael', 'Lisa']",
          "value_desc": "SAME as 1"
        },
        "AdmLName2": {
          "full_column_name": "administrator's last name 2",
          "column_desc": "",
          "ctype": "TEXT",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "[None, 'Sherman', 'Jones', 'Wilson', 'Petersen', 'Landry']",
          "value_desc": ""
        },
        "AdmEmail2": {
          "full_column_name": "administrator's email address 2",
          "column_desc": "",
          "ctype": "TEXT",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "",
          "value_desc": ""
        },
        "AdmFName3": {
          "full_column_name": "administrator's first name 3",
          "column_desc": "",
          "ctype": "TEXT",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "[None, 'Mark', 'Eric', 'Vickie', 'Tracie', 'Shawn']",
          "value_desc": "not useful"
        },
        "AdmLName3": {
          "full_column_name": "administrator's last name 3",
          "column_desc": "",
          "ctype": "TEXT",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "[None, 'Zerpoli', 'Yount', 'Woodruff', 'Wood', 'Wolk']",
          "value_desc": "not useful"
        },
        "AdmEmail3": {
          "full_column_name": "administrator's email address 3",
          "column_desc": "",
          "ctype": "TEXT",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "",
          "value_desc": "not useful"
        },
        "LastUpdate": {
          "full_column_name": "Last Update",
          "column_desc": "",
          "ctype": "DATE",
          "notnull": 1,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "['2015-06-18']",
          "value_desc": "when is this record updated last time"
        }
      }
    },
    "foreign_keys": [
      "frpm.CDSCode=schools.CDSCode",
      "satscores.cds=schools.CDSCode"
    ]
  },
  "financial": {
    "tables": {
      "account": {
        "account_id": {
          "full_column_name": "account id",
          "column_desc": "the id of the account",
          "ctype": "INTEGER",
          "notnull": 1,
          "dflt_value": "0",
          "primary_key": 1,
          "examples": "",
          "value_desc": ""
        },
        "district_id": {
          "full_column_name": "location of branch",
          "column_desc": "location of branch",
          "ctype": "INTEGER",
          "notnull": 1,
          "dflt_value": "0",
          "primary_key": 0,
          "examples": "",
          "value_desc": ""
        },
        "frequency": {
          "full_column_name": "frequency",
          "column_desc": "frequency of the acount",
          "ctype": "TEXT",
          "notnull": 1,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "['POPLATEK MESICNE', 'POPLATEK TYDNE', 'POPLATEK PO OBRATU']",
          "value_desc": ""
        },
        "date": {
          "full_column_name": "date",
          "column_desc": "the creation date of the account",
          "ctype": "DATE",
          "notnull": 1,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "['1993-02-08']",
          "value_desc": "in the form YYMMDD"
        }
      },
      "card": {
        "card_id": {
          "full_column_name": "credit card id",
          "column_desc": "id number of credit card",
          "ctype": "INTEGER",
          "notnull": 1,
          "dflt_value": "0",
          "primary_key": 1,
          "examples": "",
          "value_desc": ""
        },
        "disp_id": {
          "full_column_name": "disposition id",
          "column_desc": "disposition id",
          "ctype": "INTEGER",
          "notnull": 1,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "",
          "value_desc": ""
        },
        "type": {
          "full_column_name": "type",
          "column_desc": "type of credit card",
          "ctype": "TEXT",
          "notnull": 1,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "['classic', 'junior', 'gold']",
          "value_desc": "\"junior\": junior class of credit card; \n\"classic\": standard class of credit card; \n\"gold\": high-level credit card"
        },
        "issued": {
          "full_column_name": "issued",
          "column_desc": "the date when the credit card issued",
          "ctype": "DATE",
          "notnull": 1,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "['1998-09-29']",
          "value_desc": "in the form YYMMDD"
        }
      },
      "client": {
        "client_id": {
          "full_column_name": "client id",
          "column_desc": "the unique number",
          "ctype": "INTEGER",
          "notnull": 1,
          "dflt_value": null,
          "primary_key": 1,
          "examples": "",
          "value_desc": ""
        },
        "gender": {
          "full_column_name": "gender",
          "column_desc": "",
          "ctype": "TEXT",
          "notnull": 1,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "['M', 'F']",
          "value_desc": "F：female \nM：male"
        },
        "birth_date": {
          "full_column_name": "birth date",
          "column_desc": "birth date",
          "ctype": "DATE",
          "notnull": 1,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "['1971-02-28']",
          "value_desc": ""
        },
        "district_id": {
          "full_column_name": "location of branch",
          "column_desc": "location of branch",
          "ctype": "INTEGER",
          "notnull": 1,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "",
          "value_desc": ""
        }
      },
      "disp": {
        "disp_id": {
          "full_column_name": "disposition id",
          "column_desc": "unique number of identifying this row of record",
          "ctype": "INTEGER",
          "notnull": 1,
          "dflt_value": null,
          "primary_key": 1,
          "examples": "",
          "value_desc": ""
        },
        "client_id": {
          "full_column_name": "client id",
          "column_desc": "id number of client",
          "ctype": "INTEGER",
          "notnull": 1,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "",
          "value_desc": ""
        },
        "account_id": {
          "full_column_name": "account id",
          "column_desc": "id number of account",
          "ctype": "INTEGER",
          "notnull": 1,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "",
          "value_desc": ""
        },
        "type": {
          "full_column_name": "type",
          "column_desc": "type of disposition",
          "ctype": "TEXT",
          "notnull": 1,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "['OWNER', 'DISPONENT']",
          "value_desc": "\"OWNER\" : \"USER\" : \"DISPONENT\"\ncommonsense evidence:\nthe account can only have the right to issue permanent orders or apply for loans"
        }
      },
      "district": {
        "district_id": {
          "full_column_name": "location of branch",
          "column_desc": "location of branch",
          "ctype": "INTEGER",
          "notnull": 1,
          "dflt_value": "0",
          "primary_key": 1,
          "examples": "",
          "value_desc": ""
        },
        "A2": {
          "full_column_name": "district name",
          "column_desc": "district_name",
          "ctype": "TEXT",
          "notnull": 1,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "['Znojmo', 'Zlin', 'Zdar nad Sazavou', 'Vyskov', 'Vsetin']",
          "value_desc": ""
        },
        "A3": {
          "full_column_name": "region",
          "column_desc": "region",
          "ctype": "TEXT",
          "notnull": 1,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "['south Moravia', 'central Bohemia', 'north Moravia', 'east Bohemia', 'west Bohemia']",
          "value_desc": ""
        },
        "A4": {
          "full_column_name": "number of inhabitants",
          "column_desc": "",
          "ctype": "TEXT",
          "notnull": 1,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "['95907', '95616', '94812', '94725', '93931']",
          "value_desc": ""
        },
        "A5": {
          "full_column_name": "no. of municipalities with inhabitants < 499",
          "column_desc": "municipality < district < region",
          "ctype": "TEXT",
          "notnull": 1,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "['0', '60', '38', '87', '8']",
          "value_desc": ""
        },
        "A6": {
          "full_column_name": "no. of municipalities with inhabitants 500-1999",
          "column_desc": "municipality < district < region",
          "ctype": "TEXT",
          "notnull": 1,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "['41', '26', '19', '16', '29']",
          "value_desc": ""
        },
        "A7": {
          "full_column_name": "no. of municipalities with inhabitants 2000-9999",
          "column_desc": "municipality < district < region",
          "ctype": "TEXT",
          "notnull": 1,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "['4', '6', '7', '5', '8']",
          "value_desc": ""
        },
        "A8": {
          "full_column_name": "no. of municipalities with inhabitants > 10000",
          "column_desc": "municipality < district < region",
          "ctype": "INTEGER",
          "notnull": 1,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "[1, 2, 3, 0, 4]",
          "value_desc": ""
        },
        "A9": {
          "full_column_name": "A9",
          "column_desc": "",
          "ctype": "INTEGER",
          "notnull": 1,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "",
          "value_desc": "not useful"
        },
        "A10": {
          "full_column_name": "ratio of urban inhabitants",
          "column_desc": "ratio of urban inhabitants",
          "ctype": "REAL",
          "notnull": 1,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "",
          "value_desc": ""
        },
        "A11": {
          "full_column_name": "average salary",
          "column_desc": "average salary",
          "ctype": "INTEGER",
          "notnull": 1,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "",
          "value_desc": ""
        },
        "A12": {
          "full_column_name": "unemployment rate 1995",
          "column_desc": "unemployment rate 1995",
          "ctype": "REAL",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "",
          "value_desc": ""
        },
        "A13": {
          "full_column_name": "unemployment rate 1996",
          "column_desc": "unemployment rate 1996",
          "ctype": "REAL",
          "notnull": 1,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "",
          "value_desc": ""
        },
        "A14": {
          "full_column_name": "no. of entrepreneurs per 1000 inhabitants",
          "column_desc": "no. of entrepreneurs per 1000 inhabitants",
          "ctype": "INTEGER",
          "notnull": 1,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "",
          "value_desc": ""
        },
        "A15": {
          "full_column_name": "no. of committed crimes 1995",
          "column_desc": "no. of committed crimes 1995",
          "ctype": "INTEGER",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "",
          "value_desc": ""
        },
        "A16": {
          "full_column_name": "no. of committed crimes 1996",
          "column_desc": "no. of committed crimes 1996",
          "ctype": "INTEGER",
          "notnull": 1,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "",
          "value_desc": ""
        }
      },
      "loan": {
        "loan_id": {
          "full_column_name": "loan id",
          "column_desc": "the id number identifying the loan data",
          "ctype": "INTEGER",
          "notnull": 1,
          "dflt_value": "0",
          "primary_key": 1,
          "examples": "",
          "value_desc": ""
        },
        "account_id": {
          "full_column_name": "account id",
          "column_desc": "the id number identifying the account",
          "ctype": "INTEGER",
          "notnull": 1,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "",
          "value_desc": ""
        },
        "date": {
          "full_column_name": "date",
          "column_desc": "the date when the loan is approved",
          "ctype": "DATE",
          "notnull": 1,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "['1998-07-12']",
          "value_desc": ""
        },
        "amount": {
          "full_column_name": "amount",
          "column_desc": "approved amount",
          "ctype": "INTEGER",
          "notnull": 1,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "",
          "value_desc": "unit：US dollar"
        },
        "duration": {
          "full_column_name": "duration",
          "column_desc": "loan duration",
          "ctype": "INTEGER",
          "notnull": 1,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "[60, 48, 24, 12, 36]",
          "value_desc": "unit：month"
        },
        "payments": {
          "full_column_name": "monthly payments",
          "column_desc": "monthly payments",
          "ctype": "REAL",
          "notnull": 1,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "",
          "value_desc": "unit：month"
        },
        "status": {
          "full_column_name": "status",
          "column_desc": "repayment status",
          "ctype": "TEXT",
          "notnull": 1,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "['C', 'A', 'D', 'B']",
          "value_desc": "'A' stands for contract finished, no problems;\n'B' stands for contract finished, loan not paid;\n'C' stands for running contract, OK so far;\n'D' stands for running contract, client in debt"
        }
      },
      "order": {
        "order_id": {
          "full_column_name": "order id",
          "column_desc": "identifying the unique order",
          "ctype": "INTEGER",
          "notnull": 1,
          "dflt_value": "0",
          "primary_key": 1,
          "examples": "",
          "value_desc": ""
        },
        "account_id": {
          "full_column_name": "account id",
          "column_desc": "id number of account",
          "ctype": "INTEGER",
          "notnull": 1,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "",
          "value_desc": ""
        },
        "bank_to": {
          "full_column_name": "bank of the recipient",
          "column_desc": "bank of the recipient",
          "ctype": "TEXT",
          "notnull": 1,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "['QR', 'YZ', 'AB', 'WX', 'ST']",
          "value_desc": ""
        },
        "account_to": {
          "full_column_name": "account of the recipient",
          "column_desc": "account of the recipient",
          "ctype": "INTEGER",
          "notnull": 1,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "",
          "value_desc": "each bank has unique two-letter code"
        },
        "amount": {
          "full_column_name": "debited amount",
          "column_desc": "debited amount",
          "ctype": "REAL",
          "notnull": 1,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "",
          "value_desc": ""
        },
        "k_symbol": {
          "full_column_name": "characterization of the payment",
          "column_desc": "purpose of the payment",
          "ctype": "TEXT",
          "notnull": 1,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "['SIPO', 'UVER', 'POJISTNE', 'LEASING']",
          "value_desc": "\"POJISTNE\" stands for insurance payment\n\"SIPO\" stands for household payment\n\"LEASING\" stands for leasing\n\"UVER\" stands for loan payment"
        }
      },
      "trans": {
        "trans_id": {
          "full_column_name": "transaction id",
          "column_desc": "transaction id",
          "ctype": "INTEGER",
          "notnull": 1,
          "dflt_value": "0",
          "primary_key": 1,
          "examples": "",
          "value_desc": ""
        },
        "account_id": {
          "full_column_name": "account id",
          "column_desc": "",
          "ctype": "INTEGER",
          "notnull": 1,
          "dflt_value": "0",
          "primary_key": 0,
          "examples": "",
          "value_desc": ""
        },
        "date": {
          "full_column_name": "date of transaction",
          "column_desc": "date of transaction",
          "ctype": "DATE",
          "notnull": 1,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "['1998-06-30']",
          "value_desc": ""
        },
        "type": {
          "full_column_name": "+/- transaction",
          "column_desc": "+/- transaction",
          "ctype": "TEXT",
          "notnull": 1,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "['VYDAJ', 'PRIJEM', 'VYBER']",
          "value_desc": "\"PRIJEM\" stands for credit\n\"VYDAJ\" stands for withdrawal"
        },
        "operation": {
          "full_column_name": "mode of transaction",
          "column_desc": "mode of transaction",
          "ctype": "TEXT",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "[None, 'VYBER', 'PREVOD NA UCET', 'VKLAD', 'PREVOD Z UCTU', 'VYBER KARTOU']",
          "value_desc": "\"VYBER KARTOU\": credit card withdrawal\n\"VKLAD\": credit in cash\n\"PREVOD Z UCTU\" :collection from another bank\n\"VYBER\": withdrawal in cash\n\"PREVOD NA UCET\": remittance to another bank"
        },
        "amount": {
          "full_column_name": "amount of money",
          "column_desc": "amount of money",
          "ctype": "INTEGER",
          "notnull": 1,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "",
          "value_desc": "Unit：USD"
        },
        "balance": {
          "full_column_name": "balance after transaction",
          "column_desc": "balance after transaction",
          "ctype": "INTEGER",
          "notnull": 1,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "",
          "value_desc": "Unit：USD"
        },
        "k_symbol": {
          "full_column_name": "characterization of the transaction",
          "column_desc": "",
          "ctype": "TEXT",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "[None, 'UROK', 'SLUZBY', 'SIPO', 'DUCHOD', 'POJISTNE']",
          "value_desc": "\"POJISTNE\": stands for insurrance payment\n\"SLUZBY\": stands for payment for statement\n\"UROK\": stands for interest credited\n\"SANKC. UROK\": sanction interest if negative balance\n\"SIPO\": stands for household\n\"DUCHOD\": stands for old-age pension\n\"UVER\": stands for loan payment"
        },
        "bank": {
          "full_column_name": "bank of the partner",
          "column_desc": "",
          "ctype": "TEXT",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "[None, 'QR', 'AB', 'ST', 'YZ', 'GH']",
          "value_desc": "each bank has unique two-letter code"
        },
        "account": {
          "full_column_name": "account of the partner",
          "column_desc": "",
          "ctype": "INTEGER",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "",
          "value_desc": ""
        }
      }
    },
    "foreign_keys": [
      "account.district_id=district.district_id",
      "card.disp_id=disp.disp_id",
      "client.district_id=district.district_id",
      "disp.client_id=client.client_id",
      "disp.account_id=account.account_id",
      "loan.account_id=account.account_id",
      "order.account_id=account.account_id",
      "trans.account_id=account.account_id"
    ]
  },
  "toxicology": {
    "tables": {
      "atom": {
        "atom_id": {
          "full_column_name": "atom id",
          "column_desc": "the unique id of atoms",
          "ctype": "TEXT",
          "notnull": 1,
          "dflt_value": null,
          "primary_key": 1,
          "examples": "['TR000_1', 'TR000_2', 'TR000_3', 'TR000_4', 'TR000_5']",
          "value_desc": ""
        },
        "molecule_id": {
          "full_column_name": "molecule id",
          "column_desc": "identifying the molecule to which the atom belongs",
          "ctype": "TEXT",
          "notnull": 0,
          "dflt_value": "NULL",
          "primary_key": 0,
          "examples": "['TR338', 'TR496', 'TR060', 'TR059', 'TR397']",
          "value_desc": "commonsense evidence:\nTRXXX_i represents ith atom of molecule TRXXX"
        },
        "element": {
          "full_column_name": "element",
          "column_desc": "the element of the toxicology",
          "ctype": "TEXT",
          "notnull": 0,
          "dflt_value": "NULL",
          "primary_key": 0,
          "examples": "['h', 'c', 'o', 'n', 'cl']",
          "value_desc": " cl: chlorine\n c: carbon\n h: hydrogen\n o: oxygen\n s: sulfur\n n: nitrogen\n p: phosphorus\n na: sodium\n br: bromine\n f: fluorine\n i: iodine\n sn: Tin\n pb: lead\n te: tellurium\n ca: Calcium"
        }
      },
      "bond": {
        "bond_id": {
          "full_column_name": "bond id",
          "column_desc": "unique id representing bonds",
          "ctype": "TEXT",
          "notnull": 1,
          "dflt_value": null,
          "primary_key": 1,
          "examples": "['TR000_1_2', 'TR000_2_3', 'TR000_2_4', 'TR000_2_5', 'TR001_10_11']",
          "value_desc": "TRxxx_A1_A2:\nTRXXX refers to which molecule\nA1 and A2 refers to which atom"
        },
        "molecule_id": {
          "full_column_name": "molecule id",
          "column_desc": "identifying the molecule in which the bond appears",
          "ctype": "TEXT",
          "notnull": 0,
          "dflt_value": "NULL",
          "primary_key": 0,
          "examples": "['TR338', 'TR496', 'TR060', 'TR059', 'TR397']",
          "value_desc": ""
        },
        "bond_type": {
          "full_column_name": "bond type",
          "column_desc": "type of the bond",
          "ctype": "TEXT",
          "notnull": 0,
          "dflt_value": "NULL",
          "primary_key": 0,
          "examples": "[None, '-', '=', '#']",
          "value_desc": "commonsense evidence:\n-: single bond\n'=': double bond\n'#': triple bond"
        }
      },
      "connected": {
        "atom_id": {
          "full_column_name": "atom id",
          "column_desc": "id of the first atom",
          "ctype": "TEXT",
          "notnull": 1,
          "dflt_value": null,
          "primary_key": 1,
          "examples": "['TR000_2', 'TR001_1', 'TR001_2', 'TR001_3', 'TR001_4']",
          "value_desc": ""
        },
        "atom_id2": {
          "full_column_name": "atom id 2",
          "column_desc": "id of the second atom",
          "ctype": "TEXT",
          "notnull": 1,
          "dflt_value": null,
          "primary_key": 2,
          "examples": "['TR502_3', 'TR502_1', 'TR501_1', 'TR496_9', 'TR496_8']",
          "value_desc": ""
        },
        "bond_id": {
          "full_column_name": "bond id",
          "column_desc": "bond id representing bond between two atoms",
          "ctype": "TEXT",
          "notnull": 0,
          "dflt_value": "NULL",
          "primary_key": 0,
          "examples": "['TR502_7_10', 'TR502_6_9', 'TR502_3_5', 'TR502_3_4', 'TR502_2_3']",
          "value_desc": ""
        }
      },
      "molecule": {
        "molecule_id": {
          "full_column_name": "molecule id",
          "column_desc": "unique id of molecule",
          "ctype": "TEXT",
          "notnull": 1,
          "dflt_value": null,
          "primary_key": 1,
          "examples": "['TR000', 'TR001', 'TR002', 'TR004', 'TR006']",
          "value_desc": "\"+\" --> this molecule / compound is carcinogenic\n'-' this molecule is not / compound carcinogenic"
        },
        "label": {
          "full_column_name": "label",
          "column_desc": "whether this molecule is carcinogenic or not",
          "ctype": "TEXT",
          "notnull": 0,
          "dflt_value": "NULL",
          "primary_key": 0,
          "examples": "['-', '+']",
          "value_desc": ""
        }
      }
    },
    "foreign_keys": [
      "atom.molecule_id=molecule.molecule_id",
      "bond.molecule_id=molecule.molecule_id",
      "connected.bond_id=bond.bond_id",
      "connected.atom_id2=atom.atom_id",
      "connected.atom_id=atom.atom_id"
    ]
  },
  "card_games": {
    "tables": {
      "cards": {
        "id": {
          "full_column_name": "unique id number identifying the cards",
          "column_desc": "",
          "ctype": "INTEGER",
          "notnull": 1,
          "dflt_value": null,
          "primary_key": 1,
          "examples": "",
          "value_desc": ""
        },
        "artist": {
          "full_column_name": "artist",
          "column_desc": "The name of the artist that illustrated the card art.",
          "ctype": "TEXT",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "[None, 'John Avon', 'Kev Walker', 'Dan Frazier', 'Mark Tedin', 'Greg Staples']",
          "value_desc": ""
        },
        "asciiName": {
          "full_column_name": "ascii Name",
          "column_desc": "The ASCII(opens new window) (Basic/128) code formatted card name with no special unicode characters.",
          "ctype": "TEXT",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "",
          "value_desc": ""
        },
        "availability": {
          "full_column_name": "availability",
          "column_desc": "A list of the card's available printing types.",
          "ctype": "TEXT",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "[None, 'mtgo,paper', 'paper', 'arena,mtgo,paper', 'mtgo', 'arena']",
          "value_desc": "\"arena\", \"dreamcast\", \"mtgo\", \"paper\", \"shandalar\""
        },
        "borderColor": {
          "full_column_name": "border Color",
          "column_desc": "The color of the card border.",
          "ctype": "TEXT",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "['black', 'white', 'gold', 'silver', 'borderless']",
          "value_desc": "\"black\", \"borderless\", \"gold\", \"silver\", \"white\""
        },
        "cardKingdomFoilId": {
          "full_column_name": "card Kingdom Foil Id",
          "column_desc": "card Kingdom Foil Id",
          "ctype": "TEXT",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "[None, '73290', '73289', '73288', '73287', '73286']",
          "value_desc": "commonsense evidence:\ncardKingdomFoilId, when paired with cardKingdomId that is not Null, is incredibly powerful."
        },
        "cardKingdomId": {
          "full_column_name": "card Kingdom Id",
          "column_desc": "card Kingdom Id",
          "ctype": "TEXT",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "[None, '72285', '72284', '72283', '72282', '72281']",
          "value_desc": "A list of all the colors in the color indicator"
        },
        "colorIdentity": {
          "full_column_name": "color Identity",
          "column_desc": "A list of all the colors found in manaCost, colorIndicator, and text",
          "ctype": "TEXT",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "[None, 'G', 'B', 'R', 'U', 'W']",
          "value_desc": ""
        },
        "colorIndicator": {
          "full_column_name": "color Indicator",
          "column_desc": "A list of all the colors in the color indicator (The symbol prefixed to a card's types).",
          "ctype": "TEXT",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "[None, 'R', 'G', 'U', 'B', 'W']",
          "value_desc": ""
        },
        "colors": {
          "full_column_name": "colors",
          "column_desc": "A list of all the colors in manaCost and colorIndicator.",
          "ctype": "TEXT",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "[None, 'G', 'B', 'R', 'W', 'U']",
          "value_desc": "Some cards may not have values, such as cards with \"Devoid\" in its text."
        },
        "convertedManaCost": {
          "full_column_name": "converted Mana Cost",
          "column_desc": "The converted mana cost of the card. Use the manaValue property.",
          "ctype": "REAL",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "",
          "value_desc": "if value is higher, it means that this card cost more converted mana"
        },
        "duelDeck": {
          "full_column_name": "duel Deck",
          "column_desc": "The indicator for which duel deck the card is in.",
          "ctype": "TEXT",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "[None, 'a', 'b']",
          "value_desc": ""
        },
        "edhrecRank": {
          "full_column_name": "rec Rank in edh",
          "column_desc": "The card rank on EDHRec",
          "ctype": "INTEGER",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "",
          "value_desc": ""
        },
        "faceConvertedManaCost": {
          "full_column_name": "face Converted Mana Cost",
          "column_desc": "The converted mana cost or mana value for the face for either half or part of the card.",
          "ctype": "REAL",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "[None, 2.0, 3.0, 0.0, 4.0, 1.0]",
          "value_desc": "if value is higher, it means that this card cost more converted mana for the face"
        },
        "faceName": {
          "full_column_name": "face Name",
          "column_desc": "The name on the face of the card.",
          "ctype": "TEXT",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "[None, 'Fire', 'Ice', 'Nighteyes the Desecrator', 'Nezumi Graverobber', 'Stomp']",
          "value_desc": ""
        },
        "flavorName": {
          "full_column_name": "flavor Name",
          "column_desc": "The promotional card name printed above the true card name on special cards that has no game function.",
          "ctype": "TEXT",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "[None, 'Spacegodzilla, Void Invader', 'Spacegodzilla, Death Corona', 'Rodan, Titan of Winged Fury', 'Mothra, Supersonic Queen', \"Mothra's Great Cocoon\"]",
          "value_desc": "The promotional card name printed above the true card name on special cards that has no game function."
        },
        "flavorText": {
          "full_column_name": "flavor Text",
          "column_desc": "The italicized text found below the rules text that has no game function.",
          "ctype": "TEXT",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "",
          "value_desc": "The italicized text found below the rules text that has no game function."
        },
        "frameEffects": {
          "full_column_name": "frame Effects",
          "column_desc": "The visual frame effects.",
          "ctype": "TEXT",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "[None, 'legendary', 'extendedart', 'nyxtouched', 'sunmoondfc', 'showcase']",
          "value_desc": "\"colorshifted\", \"companion\", \"compasslanddfc\", \"devoid\", \"draft\", \"etched\", \"extendedart\", \"fullart\", \"inverted\", \"legendary\", \"lesson\", \"miracle\", \"mooneldrazidfc\", \"nyxtouched\", \"originpwdfc\", \"showcase\", \"snow\", \"sunmoondfc\", \"textless\", \"tombstone\", \"waxingandwaningmoondfc\""
        },
        "frameVersion": {
          "full_column_name": "frame Version",
          "column_desc": "The version of the card frame style.",
          "ctype": "TEXT",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "['2015', '2003', '1997', '1993', 'future']",
          "value_desc": "\"1993\", \"1997\", \"2003\", \"2015\", \"future\""
        },
        "hand": {
          "full_column_name": "hand",
          "column_desc": "The starting maximum hand size total modifier.",
          "ctype": "TEXT",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "[None, '0', '1', '-1', '-2', '2']",
          "value_desc": "A + or - character precedes an integer. \ncommonsense evidence:\npositive maximum hand size: +1, +2, ....\nnegative maximum hand size: -1, ....\nneural maximum hand size: 0...."
        },
        "hasAlternativeDeckLimit": {
          "full_column_name": "has Alternative Deck Limit",
          "column_desc": "If the card allows a value other than 4 copies in a deck.",
          "ctype": "INTEGER",
          "notnull": 1,
          "dflt_value": "0",
          "primary_key": 0,
          "examples": "[0, 1]",
          "value_desc": "0: disallow 1: allow"
        },
        "hasContentWarning": {
          "full_column_name": "has Content Warning",
          "column_desc": "If the card marked by Wizards of the Coast (opens new window) for having sensitive content. See this official article (opens new window) for more information.",
          "ctype": "INTEGER",
          "notnull": 1,
          "dflt_value": "0",
          "primary_key": 0,
          "examples": "[0, 1]",
          "value_desc": "0: doesn't have 1: has sensitve content or Wizards of the Coast\ncommonsense evidence:\nCards with this property may have missing or degraded properties and values."
        },
        "hasFoil": {
          "full_column_name": "has Foil",
          "column_desc": "If the card can be found in foil",
          "ctype": "INTEGER",
          "notnull": 1,
          "dflt_value": "0",
          "primary_key": 0,
          "examples": "[1, 0]",
          "value_desc": "0: cannot be found 1: can be found"
        },
        "hasNonFoil": {
          "full_column_name": "has Non Foil",
          "column_desc": "If the card can be found in non-foil",
          "ctype": "INTEGER",
          "notnull": 1,
          "dflt_value": "0",
          "primary_key": 0,
          "examples": "[1, 0]",
          "value_desc": "0: cannot be found 1: can be found"
        },
        "isAlternative": {
          "full_column_name": "is Alternative",
          "column_desc": "If the card is an alternate variation to an original printing",
          "ctype": "INTEGER",
          "notnull": 1,
          "dflt_value": "0",
          "primary_key": 0,
          "examples": "[0, 1]",
          "value_desc": "0: is not 1: is"
        },
        "isFullArt": {
          "full_column_name": "is Full Art",
          "column_desc": "If the card has full artwork.",
          "ctype": "INTEGER",
          "notnull": 1,
          "dflt_value": "0",
          "primary_key": 0,
          "examples": "[0, 1]",
          "value_desc": "0: doesn't have, 1: has full artwork"
        },
        "isOnlineOnly": {
          "full_column_name": "is Online Only",
          "column_desc": "If the card is only available in online game variations.",
          "ctype": "INTEGER",
          "notnull": 1,
          "dflt_value": "0",
          "primary_key": 0,
          "examples": "[0, 1]",
          "value_desc": "0: is not 1: is"
        },
        "isOversized": {
          "full_column_name": "is Oversized",
          "column_desc": "If the card is oversized.",
          "ctype": "INTEGER",
          "notnull": 1,
          "dflt_value": "0",
          "primary_key": 0,
          "examples": "[0, 1]",
          "value_desc": "0: is not 1: is"
        },
        "isPromo": {
          "full_column_name": "is Promotion",
          "column_desc": "If the card is a promotional printing.",
          "ctype": "INTEGER",
          "notnull": 1,
          "dflt_value": "0",
          "primary_key": 0,
          "examples": "[0, 1]",
          "value_desc": "0: is not 1: is"
        },
        "isReprint": {
          "full_column_name": "is Reprint",
          "column_desc": "If the card has been reprinted.",
          "ctype": "INTEGER",
          "notnull": 1,
          "dflt_value": "0",
          "primary_key": 0,
          "examples": "[1, 0]",
          "value_desc": "0: has not 1: has not been"
        },
        "isReserved": {
          "full_column_name": "is Reserved",
          "column_desc": "If the card is on the Magic: The Gathering Reserved List (opens new window)",
          "ctype": "INTEGER",
          "notnull": 1,
          "dflt_value": "0",
          "primary_key": 0,
          "examples": "[0, 1]",
          "value_desc": "If the card is on the Magic, it will appear in The Gathering Reserved List"
        },
        "isStarter": {
          "full_column_name": "is Starter",
          "column_desc": "If the card is found in a starter deck such as Planeswalker/Brawl decks.",
          "ctype": "INTEGER",
          "notnull": 1,
          "dflt_value": "0",
          "primary_key": 0,
          "examples": "[0, 1]",
          "value_desc": "0: is not 1: is"
        },
        "isStorySpotlight": {
          "full_column_name": "is Story Spotlight",
          "column_desc": "If the card is a Story Spotlight card.",
          "ctype": "INTEGER",
          "notnull": 1,
          "dflt_value": "0",
          "primary_key": 0,
          "examples": "[0, 1]",
          "value_desc": "0: is not 1: is"
        },
        "isTextless": {
          "full_column_name": "is Text less",
          "column_desc": "If the card does not have a text box.",
          "ctype": "INTEGER",
          "notnull": 1,
          "dflt_value": "0",
          "primary_key": 0,
          "examples": "[0, 1]",
          "value_desc": "commonsense evidence:\n0: has a text box;\n1: doesn't have a text box;"
        },
        "isTimeshifted": {
          "full_column_name": "is Time shifted",
          "column_desc": "If the card is time shifted",
          "ctype": "INTEGER",
          "notnull": 1,
          "dflt_value": "0",
          "primary_key": 0,
          "examples": "[0, 1]",
          "value_desc": "commonsense evidence:\nIf the card is \"timeshifted\", a feature of certain sets where a card will have a different frameVersion."
        },
        "keywords": {
          "full_column_name": "keywords",
          "column_desc": "A list of keywords found on the card.",
          "ctype": "TEXT",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "",
          "value_desc": ""
        },
        "layout": {
          "full_column_name": "layout",
          "column_desc": "The type of card layout. For a token card, this will be \"token\"",
          "ctype": "TEXT",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "['normal', 'transform', 'modal_dfc', 'adventure', 'split']",
          "value_desc": ""
        },
        "leadershipSkills": {
          "full_column_name": "leadership Skills",
          "column_desc": "A list of formats the card is legal to be a commander in",
          "ctype": "TEXT",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "",
          "value_desc": ""
        },
        "life": {
          "full_column_name": "life",
          "column_desc": "The starting life total modifier. A plus or minus character precedes an integer.",
          "ctype": "TEXT",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "[None, '-3', '-2', '-5', '4', '3']",
          "value_desc": ""
        },
        "loyalty": {
          "full_column_name": "loyalty",
          "column_desc": "The starting loyalty value of the card.",
          "ctype": "TEXT",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "[None, '5', '4', '3', '7', '6']",
          "value_desc": "Used only on cards with \"Planeswalker\" in its types. empty means unkown"
        },
        "manaCost": {
          "full_column_name": "mana Cost",
          "column_desc": "The mana cost of the card wrapped in brackets for each value.",
          "ctype": "TEXT",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "[None, '{1}{W}', '{1}{G}', '{1}{U}', '{2}{G}', '{2}{R}']",
          "value_desc": "commonsense evidence:\nmanaCost is unconverted mana cost"
        },
        "mcmId": {
          "full_column_name": "mcmId",
          "column_desc": "",
          "ctype": "TEXT",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "[None, '288658', '438469', '14883', '495254', '19407']",
          "value_desc": "NOT USEFUL"
        },
        "mcmMetaId": {
          "full_column_name": "mcmMetaId",
          "column_desc": "",
          "ctype": "TEXT",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "[None, '2177', '3743', '5739', '4251', '2923']",
          "value_desc": "NOT USEFUL"
        },
        "mtgArenaId": {
          "full_column_name": "mtgArenaId",
          "column_desc": "",
          "ctype": "TEXT",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "[None, '76885', '75426', '75424', '75420', '75418']",
          "value_desc": "NOT USEFUL"
        },
        "mtgjsonV4Id": {
          "full_column_name": "mtgjsonV4Id",
          "column_desc": "",
          "ctype": "TEXT",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "['fffcc2f5-28c7-5ba2-bb78-a4c4d3adc9f9', 'fffcc00a-7b3f-5dbf-8a68-d4ff3fa94e44', 'fffb6b7a-dce1-5011-a3be-061b83195937', 'fffad55b-adc1-5c6b-a8d1-ca258ffcae4f', 'fff8e480-729b-5668-83be-18a41dc819ce']",
          "value_desc": "NOT USEFUL"
        },
        "mtgoFoilId": {
          "full_column_name": "mtgoFoilId",
          "column_desc": "",
          "ctype": "TEXT",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "[None, '65529', '65525', '65511', '65493', '65489']",
          "value_desc": "NOT USEFUL"
        },
        "mtgoId": {
          "full_column_name": "mtgoId",
          "column_desc": "",
          "ctype": "TEXT",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "[None, '87871', '87857', '87851', '87847', '87705']",
          "value_desc": "NOT USEFUL"
        },
        "multiverseId": {
          "full_column_name": "multiverseId",
          "column_desc": "",
          "ctype": "TEXT",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "[None, '74358', '479463', '476230', '87600', '87599']",
          "value_desc": "NOT USEFUL"
        },
        "name": {
          "full_column_name": "name",
          "column_desc": "The name of the card.",
          "ctype": "TEXT",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "",
          "value_desc": "Cards with multiple faces, like \"Split\" and \"Meld\" cards are given a delimiter."
        },
        "number": {
          "full_column_name": "number",
          "column_desc": "The number of the card",
          "ctype": "TEXT",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "['1', '2', '3', '5', '4']",
          "value_desc": ""
        },
        "originalReleaseDate": {
          "full_column_name": "originalReleaseDate",
          "column_desc": "original Release Date",
          "ctype": "TEXT",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "[None, '2014/10/17', '2013/1/11', '2018/12/6', '2017/5/31', '2010/11/4']",
          "value_desc": "The original release date in ISO 8601(opens new window) format for a promotional card printed outside of a cycle window, such as Secret Lair Drop promotions."
        },
        "originalText": {
          "full_column_name": "originalText",
          "column_desc": "original Text",
          "ctype": "TEXT",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "",
          "value_desc": "The text on the card as originally printed."
        },
        "originalType": {
          "full_column_name": "originalType",
          "column_desc": "original Type",
          "ctype": "TEXT",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "[None, 'Instant', 'Sorcery', 'Land', 'Enchantment', 'Artifact']",
          "value_desc": "The type of the card as originally printed. Includes any supertypes and subtypes."
        },
        "otherFaceIds": {
          "full_column_name": "otherFaceIds",
          "column_desc": "other Face Ids",
          "ctype": "TEXT",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "",
          "value_desc": "A list of card UUID's to this card's counterparts, such as transformed or melded faces."
        },
        "power": {
          "full_column_name": "power",
          "column_desc": "The power of the card.",
          "ctype": "TEXT",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "[None, '2', '1', '3', '4', '5']",
          "value_desc": "commonsense evidence:\n∞ means infinite power\nnull or * refers to unknown power"
        },
        "printings": {
          "full_column_name": "printings",
          "column_desc": "A list of set printing codes the card was printed in, formatted in uppercase.",
          "ctype": "TEXT",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "",
          "value_desc": ""
        },
        "promoTypes": {
          "full_column_name": "promo Types",
          "column_desc": "A list of promotional types for a card.",
          "ctype": "TEXT",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "",
          "value_desc": "\"arenaleague\", \"boosterfun\", \"boxtopper\", \"brawldeck\", \"bundle\", \"buyabox\", \"convention\", \"datestamped\", \"draculaseries\", \"draftweekend\", \"duels\", \"event\", \"fnm\", \"gameday\", \"gateway\", \"giftbox\", \"gilded\", \"godzillaseries\", \"instore\", \"intropack\", \"jpwalker\", \"judgegift\", \"league\", \"mediainsert\", \"neonink\", \"openhouse\", \"planeswalkerstamped\", \"playerrewards\", \"playpromo\", \"premiereshop\", \"prerelease\", \"promopack\", \"release\", \"setpromo\", \"stamped\", \"textured\", \"themepack\", \"thick\", \"tourney\", \"wizardsplaynetwork\""
        },
        "purchaseUrls": {
          "full_column_name": "purchase Urls",
          "column_desc": "Links that navigate to websites where the card can be purchased.",
          "ctype": "TEXT",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "",
          "value_desc": ""
        },
        "rarity": {
          "full_column_name": "rarity",
          "column_desc": "The card printing rarity.",
          "ctype": "TEXT",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "['common', 'rare', 'uncommon', 'mythic']",
          "value_desc": ""
        },
        "scryfallId": {
          "full_column_name": "scryfallId",
          "column_desc": "",
          "ctype": "TEXT",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "['fea4a077-718b-44af-87be-90df61aab643', '8987644d-5a31-4a4e-9a8a-3d6260ed0fd6', '25d09421-08d5-4ca9-8937-5f937bc9c929', 'ffc5eb51-14ba-4f31-b47c-3c9b7aee96e0', 'ff984a4c-1818-4f8f-a9d7-fce57e77937d']",
          "value_desc": "NOT USEFUL"
        },
        "scryfallIllustrationId": {
          "full_column_name": "scryfallIllustrationId",
          "column_desc": "",
          "ctype": "TEXT",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "[None, 'c6230ffb-dd2c-4a2c-aeaf-13ba42c89472', '78034c44-88d3-47ab-8cc5-2c211c5ded76', '49e42a5f-3347-4aa4-a600-dad810304420', '74980bb4-4270-404b-a441-1dd53bdb4682', '0b60df74-f3ad-4573-9a88-7bf8858e4d6f']",
          "value_desc": "NOT USEFUL"
        },
        "scryfallOracleId": {
          "full_column_name": "scryfallOracleId",
          "column_desc": "",
          "ctype": "TEXT",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "['b34bb2dc-c1af-4d77-b0b3-a0fb342a5fc6', '56719f6a-1a6c-4c0a-8d21-18f7d7350b68', 'b2c6aa39-2d2a-459c-a555-fb48ba993373', 'a3fb7228-e76b-4e96-a40e-20b5fed75685', 'bc71ebf6-2056-41f7-be35-b2e5c34afa99']",
          "value_desc": "NOT USEFUL"
        },
        "setCode": {
          "full_column_name": "Set Code",
          "column_desc": "The set printing code that the card is from.",
          "ctype": "TEXT",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "['MB1', 'PRM', 'PSAL', 'CMR', '10E']",
          "value_desc": ""
        },
        "side": {
          "full_column_name": "side",
          "column_desc": "The identifier of the card side.",
          "ctype": "TEXT",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "[None, 'a', 'b', 'c', 'e', 'd']",
          "value_desc": "Used on cards with multiple faces on the same card.\ncommonsense evidence:\nif this value is empty, then it means this card doesn't have multiple faces on the same card."
        },
        "subtypes": {
          "full_column_name": "subtypes",
          "column_desc": "A list of card subtypes found after em-dash.",
          "ctype": "TEXT",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "[None, 'Aura', 'Human,Wizard', 'Elemental', 'Human,Soldier', 'Forest']",
          "value_desc": ""
        },
        "supertypes": {
          "full_column_name": "super types",
          "column_desc": "A list of card supertypes found before em-dash.",
          "ctype": "TEXT",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "[None, 'Legendary', 'Basic', 'Snow', 'World', 'Basic,Snow']",
          "value_desc": "commonsense evidence:\nlist of all types should be the union of subtypes and supertypes"
        },
        "tcgplayerProductId": {
          "full_column_name": "tcg player ProductId",
          "column_desc": "",
          "ctype": "TEXT",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "[None, '37950', '208535', '202685', '99958', '96603']",
          "value_desc": ""
        },
        "text": {
          "full_column_name": "text",
          "column_desc": "The rules text of the card.",
          "ctype": "TEXT",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "",
          "value_desc": ""
        },
        "toughness": {
          "full_column_name": "toughness",
          "column_desc": "The toughness of the card.",
          "ctype": "TEXT",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "[None, '2', '1', '3', '4', '5']",
          "value_desc": ""
        },
        "type": {
          "full_column_name": "type",
          "column_desc": "The type of the card as visible, including any supertypes and subtypes.",
          "ctype": "TEXT",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "['Instant', 'Sorcery', 'Artifact', 'Enchantment', 'Land']",
          "value_desc": "\"Artifact\", \"Card\", \"Conspiracy\", \"Creature\", \"Dragon\", \"Dungeon\", \"Eaturecray\", \"Elemental\", \"Elite\", \"Emblem\", \"Enchantment\", \"Ever\", \"Goblin\", \"Hero\", \"Instant\", \"Jaguar\", \"Knights\", \"Land\", \"Phenomenon\", \"Plane\", \"Planeswalker\", \"Scariest\", \"Scheme\", \"See\", \"Sorcery\", \"Sticker\", \"Summon\", \"Token\", \"Tribal\", \"Vanguard\", \"Wolf\", \"You’ll\", \"instant\""
        },
        "types": {
          "full_column_name": "types",
          "column_desc": "A list of all card types of the card, including Un‑sets and gameplay variants.",
          "ctype": "TEXT",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "['Creature', 'Instant', 'Land', 'Sorcery', 'Enchantment']",
          "value_desc": ""
        },
        "uuid": {
          "full_column_name": "uuid",
          "column_desc": "The universal unique identifier (v5) generated by MTGJSON. Each entry is unique.",
          "ctype": "TEXT",
          "notnull": 1,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "['00010d56-fe38-5e35-8aed-518019aa36a5', '0001e0d0-2dcd-5640-aadc-a84765cf5fc9', '0003caab-9ff5-5d1a-bc06-976dd0457f19', '0003d249-25d9-5223-af1e-1130f09622a7', '0004a4fb-92c6-59b2-bdbe-ceb584a9e401']",
          "value_desc": "NOT USEFUL"
        },
        "variations": {
          "full_column_name": "variations",
          "column_desc": "",
          "ctype": "TEXT",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "",
          "value_desc": ""
        },
        "watermark": {
          "full_column_name": "watermark",
          "column_desc": "The name of the watermark on the card.",
          "ctype": "TEXT",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "[None, 'mirran', 'phyrexian', 'golgari', 'dimir', 'izzet']",
          "value_desc": ""
        }
      },
      "foreign_data": {
        "id": {
          "full_column_name": "id",
          "column_desc": "unique id number identifying this row of data",
          "ctype": "INTEGER",
          "notnull": 1,
          "dflt_value": null,
          "primary_key": 1,
          "examples": "",
          "value_desc": ""
        },
        "flavorText": {
          "full_column_name": "flavor Text",
          "column_desc": "The foreign flavor text of the card.",
          "ctype": "TEXT",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "",
          "value_desc": ""
        },
        "language": {
          "full_column_name": "language",
          "column_desc": "The foreign language of card.",
          "ctype": "TEXT",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "['Japanese', 'French', 'German', 'Italian', 'Spanish']",
          "value_desc": ""
        },
        "multiverseid": {
          "full_column_name": "multiverseid",
          "column_desc": "The foreign multiverse identifier of the card.",
          "ctype": "INTEGER",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "",
          "value_desc": ""
        },
        "name": {
          "full_column_name": "name",
          "column_desc": "The foreign name of the card.",
          "ctype": "TEXT",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "",
          "value_desc": ""
        },
        "text": {
          "full_column_name": "text",
          "column_desc": "The foreign text ruling of the card.",
          "ctype": "TEXT",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "",
          "value_desc": ""
        },
        "type": {
          "full_column_name": "type",
          "column_desc": "The foreign type of the card. Includes any supertypes and subtypes.",
          "ctype": "TEXT",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "",
          "value_desc": ""
        },
        "uuid": {
          "full_column_name": "uuid",
          "column_desc": "",
          "ctype": "TEXT",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "['fffa4546-e7ac-5291-b878-2e66ea1b1dfa', 'fff52524-bc7c-5c5d-b790-22b5b32bb5e9', 'fff27b15-ccc8-555f-a0df-a26e3bc1a3d4', 'fff1ecb0-c0e3-538d-bfda-6336ed71ba42', 'ffeef7c1-8ef2-5322-bbe0-4817db9143ae']",
          "value_desc": ""
        }
      },
      "legalities": {
        "id": {
          "full_column_name": "id",
          "column_desc": "unique id identifying this legality",
          "ctype": "INTEGER",
          "notnull": 1,
          "dflt_value": null,
          "primary_key": 1,
          "examples": "",
          "value_desc": ""
        },
        "format": {
          "full_column_name": "format",
          "column_desc": "format of play",
          "ctype": "TEXT",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "['vintage', 'legacy', 'commander', 'duel', 'modern']",
          "value_desc": "each value refers to different rules to play"
        },
        "status": {
          "full_column_name": "status",
          "column_desc": "",
          "ctype": "TEXT",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "['Legal', 'Banned', 'Restricted']",
          "value_desc": "legal\n banned\n restricted"
        },
        "uuid": {
          "full_column_name": "uuid",
          "column_desc": "",
          "ctype": "TEXT",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "['fed8bfd4-eea9-5466-acf5-0421c83789fa', 'fea502b2-f7ed-5947-8c11-2659905e539a', 'fdc50021-e80d-5470-9915-080a682d9905', 'fcd9b6fc-0ca3-508e-9889-d8a0f1002919', 'fa713115-b691-5686-807b-8ab39c9cb66f']",
          "value_desc": ""
        }
      },
      "sets": {
        "id": {
          "full_column_name": "id",
          "column_desc": "unique id identifying this set",
          "ctype": "INTEGER",
          "notnull": 1,
          "dflt_value": null,
          "primary_key": 1,
          "examples": "",
          "value_desc": ""
        },
        "baseSetSize": {
          "full_column_name": "base Set Size",
          "column_desc": "The number of cards in the set.",
          "ctype": "INTEGER",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "",
          "value_desc": ""
        },
        "block": {
          "full_column_name": "block",
          "column_desc": "The block name the set was in.",
          "ctype": "TEXT",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "[None, 'Core Set', 'Judge Gift Cards', 'Commander', 'Friday Night Magic', 'Theros']",
          "value_desc": ""
        },
        "booster": {
          "full_column_name": "booster",
          "column_desc": "A breakdown of possibilities and weights of cards in a booster pack.",
          "ctype": "TEXT",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "",
          "value_desc": ""
        },
        "code": {
          "full_column_name": "code",
          "column_desc": "The set code for the set.",
          "ctype": "TEXT",
          "notnull": 1,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "['10E', '2ED', '2XM', '3ED', '4BB']",
          "value_desc": ""
        },
        "isFoilOnly": {
          "full_column_name": "is Foil Only",
          "column_desc": "If the set is only available in foil.",
          "ctype": "INTEGER",
          "notnull": 1,
          "dflt_value": "0",
          "primary_key": 0,
          "examples": "[0, 1]",
          "value_desc": ""
        },
        "isForeignOnly": {
          "full_column_name": "is Foreign Only",
          "column_desc": "If the set is available only outside the United States of America.",
          "ctype": "INTEGER",
          "notnull": 1,
          "dflt_value": "0",
          "primary_key": 0,
          "examples": "[0, 1]",
          "value_desc": ""
        },
        "isNonFoilOnly": {
          "full_column_name": "is Non Foil Only",
          "column_desc": "If the set is only available in non-foil.",
          "ctype": "INTEGER",
          "notnull": 1,
          "dflt_value": "0",
          "primary_key": 0,
          "examples": "[0, 1]",
          "value_desc": ""
        },
        "isOnlineOnly": {
          "full_column_name": "is Online Only",
          "column_desc": "If the set is only available in online game variations.",
          "ctype": "INTEGER",
          "notnull": 1,
          "dflt_value": "0",
          "primary_key": 0,
          "examples": "[0, 1]",
          "value_desc": ""
        },
        "isPartialPreview": {
          "full_column_name": "is Partial Preview",
          "column_desc": "If the set is still in preview (spoiled). Preview sets do not have complete data.",
          "ctype": "INTEGER",
          "notnull": 1,
          "dflt_value": "0",
          "primary_key": 0,
          "examples": "[0, 1]",
          "value_desc": ""
        },
        "keyruneCode": {
          "full_column_name": "keyrune Code",
          "column_desc": "The matching Keyrune code for set image icons.",
          "ctype": "TEXT",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "['PMEI', 'DEFAULT', 'DCI', 'PARL', 'ZNR']",
          "value_desc": ""
        },
        "mcmId": {
          "full_column_name": "magic card market id",
          "column_desc": "The Magic Card Marketset identifier.",
          "ctype": "INTEGER",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "",
          "value_desc": ""
        },
        "mcmIdExtras": {
          "full_column_name": "magic card market ID Extras",
          "column_desc": "The split Magic Card Market set identifier if a set is printed in two sets. This identifier represents the second set's identifier.",
          "ctype": "INTEGER",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "",
          "value_desc": ""
        },
        "mcmName": {
          "full_column_name": "magic card market name",
          "column_desc": "",
          "ctype": "TEXT",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "[None, 'Zendikar Rising Expeditions', 'Zendikar Rising', 'Zendikar Expeditions', 'Zendikar', 'Worldwake']",
          "value_desc": ""
        },
        "mtgoCode": {
          "full_column_name": "magic the gathering online code",
          "column_desc": "The set code for the set as it appears on Magic: The Gathering Online",
          "ctype": "TEXT",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "[None, 'ZNR', 'ZEN', 'XLN', 'WWK', 'WL']",
          "value_desc": "commonsense evidence:\nif the value is null or empty, then it doesn't appear on Magic: The Gathering Online"
        },
        "name": {
          "full_column_name": "name",
          "column_desc": "The name of the set.",
          "ctype": "TEXT",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "['Zendikar Rising Substitute Cards', 'Zendikar Rising Promos', 'Zendikar Rising Minigames', 'Zendikar Rising Expeditions', 'Zendikar Rising Commander']",
          "value_desc": ""
        },
        "parentCode": {
          "full_column_name": "parent Code",
          "column_desc": "The parent set code for set variations like promotions, guild kits, etc.",
          "ctype": "TEXT",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "[None, 'ZNR', 'XLN', 'THS', 'M19', 'M15']",
          "value_desc": ""
        },
        "releaseDate": {
          "full_column_name": "release Date",
          "column_desc": "The release date in ISO 8601 format for the set.",
          "ctype": "DATE",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "['2011-01-01']",
          "value_desc": ""
        },
        "tcgplayerGroupId": {
          "full_column_name": "tcg player Group Id",
          "column_desc": "The group identifier of the set on TCGplayer",
          "ctype": "INTEGER",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "",
          "value_desc": ""
        },
        "totalSetSize": {
          "full_column_name": "total Set Size",
          "column_desc": "The total number of cards in the set, including promotional and related supplemental products but excluding Alchemy modifications - however those cards are included in the set itself.",
          "ctype": "INTEGER",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "",
          "value_desc": ""
        },
        "type": {
          "full_column_name": "type",
          "column_desc": "The expansion type of the set.",
          "ctype": "TEXT",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "['promo', 'expansion', 'memorabilia', 'duel_deck', 'box']",
          "value_desc": "\"alchemy\", \"archenemy\", \"arsenal\", \"box\", \"commander\", \"core\", \"draft_innovation\", \"duel_deck\", \"expansion\", \"from_the_vault\", \"funny\", \"masterpiece\", \"masters\", \"memorabilia\", \"planechase\", \"premium_deck\", \"promo\", \"spellbook\", \"starter\", \"token\", \"treasure_chest\", \"vanguard\""
        }
      },
      "set_translations": {
        "id": {
          "full_column_name": "id",
          "column_desc": "",
          "ctype": "INTEGER",
          "notnull": 1,
          "dflt_value": null,
          "primary_key": 1,
          "examples": "",
          "value_desc": ""
        },
        "language": {
          "full_column_name": "language",
          "column_desc": "",
          "ctype": "TEXT",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "['Spanish', 'Russian', 'Portuguese (Brazil)', 'Korean', 'Japanese']",
          "value_desc": ""
        },
        "setCode": {
          "full_column_name": "set code",
          "column_desc": "",
          "ctype": "TEXT",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "['WTH', 'WAR', 'V16', 'V15', 'V14']",
          "value_desc": ""
        },
        "translation": {
          "full_column_name": "translation",
          "column_desc": "",
          "ctype": "TEXT",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "[None, 'Venser vs. Koth', 'Tempest Remastered', 'Speed vs. Cunning', 'Sorin vs. Tibalt', 'Premium Deck Series: Fire & Lightning']",
          "value_desc": ""
        }
      },
      "rulings": {
        "id": {
          "full_column_name": "",
          "column_desc": "",
          "ctype": "INTEGER",
          "notnull": 1,
          "dflt_value": null,
          "primary_key": 1,
          "examples": "",
          "value_desc": ""
        },
        "date": {
          "full_column_name": "",
          "column_desc": "",
          "ctype": "DATE",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "['2004-10-04']",
          "value_desc": ""
        },
        "text": {
          "full_column_name": "",
          "column_desc": "",
          "ctype": "TEXT",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "",
          "value_desc": ""
        },
        "uuid": {
          "full_column_name": "",
          "column_desc": "",
          "ctype": "TEXT",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "['f2ef8f0a-ea29-5750-9f86-f4ee22b1af7e', 'a9290322-839e-5942-a907-bbe6349cb22c', '8ae00a8c-0670-5a96-9cf4-49f375a903c2', '23a64ed6-aeda-5607-8cc9-35ae7ac6a0ce', 'f62e6139-9a0e-52a9-8b7d-25eff991d07a']",
          "value_desc": ""
        }
      }
    },
    "foreign_keys": [
      "foreign_data.uuid=cards.uuid",
      "legalities.uuid=cards.uuid",
      "set_translations.setCode=sets.code",
      "ruling.uuid=cards.uuid"
    ]
  },
  "codebase_community": {
    "tables": {
      "badges": {
        "Id": {
          "full_column_name": "Id",
          "column_desc": "the badge id",
          "ctype": "INTEGER",
          "notnull": 1,
          "dflt_value": null,
          "primary_key": 1,
          "examples": "",
          "value_desc": ""
        },
        "UserId": {
          "full_column_name": "User Id",
          "column_desc": "the unique id of the user",
          "ctype": "INTEGER",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "",
          "value_desc": ""
        },
        "Name": {
          "full_column_name": "Name",
          "column_desc": "the badge name the user obtained",
          "ctype": "TEXT",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "['Student', 'Supporter', 'Editor', 'Scholar', 'Teacher']",
          "value_desc": ""
        },
        "Date": {
          "full_column_name": "Date",
          "column_desc": "the date that the user obtained the badge",
          "ctype": "DATETIME",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "['2014-07-02 16:05:34.0']",
          "value_desc": ""
        }
      },
      "comments": {
        "Id": {
          "full_column_name": "Id",
          "column_desc": "the comment Id",
          "ctype": "INTEGER",
          "notnull": 1,
          "dflt_value": null,
          "primary_key": 1,
          "examples": "",
          "value_desc": ""
        },
        "PostId": {
          "full_column_name": "Post Id",
          "column_desc": "the unique id of the post",
          "ctype": "INTEGER",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "",
          "value_desc": ""
        },
        "Score": {
          "full_column_name": "Score",
          "column_desc": "rating score",
          "ctype": "INTEGER",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "",
          "value_desc": "commonsense evidence:\nThe score is from 0 to 100. The score more than 60 refers that the comment is a positive comment. The score less than 60 refers that the comment is a negative comment."
        },
        "Text": {
          "full_column_name": "Text",
          "column_desc": "the detailed content of the comment",
          "ctype": "TEXT",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "",
          "value_desc": ""
        },
        "CreationDate": {
          "full_column_name": "Creation Date",
          "column_desc": "the creation date of the comment",
          "ctype": "DATETIME",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "['2014-09-09 18:33:18.0']",
          "value_desc": ""
        },
        "UserId": {
          "full_column_name": "User Id",
          "column_desc": "the id of the user who post the comment",
          "ctype": "INTEGER",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "",
          "value_desc": ""
        },
        "UserDisplayName": {
          "full_column_name": "User Display Name",
          "column_desc": "user's display name",
          "ctype": "TEXT",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "[None, 'user10525', 'user28', 'user25658', 'user13253', 'user5644']",
          "value_desc": ""
        }
      },
      "postHistory": {
        "Id": {
          "full_column_name": "Id",
          "column_desc": "the post history id",
          "ctype": "INTEGER",
          "notnull": 1,
          "dflt_value": null,
          "primary_key": 1,
          "examples": "",
          "value_desc": ""
        },
        "PostHistoryTypeId": {
          "full_column_name": "Post History Type Id",
          "column_desc": "the id of the post history type",
          "ctype": "INTEGER",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "",
          "value_desc": ""
        },
        "PostId": {
          "full_column_name": "Post Id",
          "column_desc": "the unique id of the post",
          "ctype": "INTEGER",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "",
          "value_desc": ""
        },
        "RevisionGUID": {
          "full_column_name": "Revision GUID",
          "column_desc": "the revision globally unique id of the post",
          "ctype": "TEXT",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "['00000000-0000-0000-0000-000000000000', '6887d756-76f7-4279-bd02-adccbc90ac17', '49d80dfa-80ed-46f8-8352-0c96493db975', 'fc7b351f-7a5f-49f2-b150-95f5587f4775', 'f558ad75-493e-4d4c-aad1-f6c930bf27bb']",
          "value_desc": ""
        },
        "CreationDate": {
          "full_column_name": "Creation Date",
          "column_desc": "the creation date of the post",
          "ctype": "DATETIME",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "['2012-02-22 19:46:04.0']",
          "value_desc": ""
        },
        "UserId": {
          "full_column_name": "User Id",
          "column_desc": "the user who post the post",
          "ctype": "INTEGER",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "",
          "value_desc": ""
        },
        "Text": {
          "full_column_name": "Text",
          "column_desc": "the detailed content of the post",
          "ctype": "TEXT",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "",
          "value_desc": ""
        },
        "Comment": {
          "full_column_name": "Comment",
          "column_desc": "comments of the post",
          "ctype": "TEXT",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "",
          "value_desc": ""
        },
        "UserDisplayName": {
          "full_column_name": "User Display Name",
          "column_desc": "user's display name",
          "ctype": "TEXT",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "['user10525', 'user28', 'user25658', 'user5644', 'user13253']",
          "value_desc": ""
        }
      },
      "postLinks": {
        "Id": {
          "full_column_name": "Id",
          "column_desc": "the post link id",
          "ctype": "INTEGER",
          "notnull": 1,
          "dflt_value": null,
          "primary_key": 1,
          "examples": "",
          "value_desc": ""
        },
        "CreationDate": {
          "full_column_name": "Creation Date",
          "column_desc": "the creation date of the post link",
          "ctype": "DATETIME",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "['2013-02-18 03:03:17.0']",
          "value_desc": ""
        },
        "PostId": {
          "full_column_name": "Post Id",
          "column_desc": "the post id",
          "ctype": "INTEGER",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "",
          "value_desc": ""
        },
        "RelatedPostId": {
          "full_column_name": "Related Post Id",
          "column_desc": "the id of the related post",
          "ctype": "INTEGER",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "",
          "value_desc": ""
        },
        "LinkTypeId": {
          "full_column_name": "Link Type Id",
          "column_desc": "the id of the link type",
          "ctype": "INTEGER",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "[1, 3]",
          "value_desc": ""
        }
      },
      "posts": {
        "Id": {
          "full_column_name": "Id",
          "column_desc": "the post id",
          "ctype": "INTEGER",
          "notnull": 1,
          "dflt_value": null,
          "primary_key": 1,
          "examples": "",
          "value_desc": ""
        },
        "PostTypeId": {
          "full_column_name": "Post Type Id",
          "column_desc": "the id of the post type",
          "ctype": "INTEGER",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "[2, 1, 5, 4, 6]",
          "value_desc": ""
        },
        "AcceptedAnswerId": {
          "full_column_name": "Accepted Answer Id",
          "column_desc": "the accepted answer id of the post",
          "ctype": "INTEGER",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "",
          "value_desc": ""
        },
        "CreaionDate": {
          "full_column_name": "Creation Date",
          "column_desc": "the creation date of the post",
          "ctype": "DATETIME",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "['2013-08-11 17:01:04.0']",
          "value_desc": ""
        },
        "Score": {
          "full_column_name": "Score",
          "column_desc": "the score of the post",
          "ctype": "INTEGER",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "",
          "value_desc": ""
        },
        "ViewCount": {
          "full_column_name": "View Count",
          "column_desc": "the view count of the post",
          "ctype": "INTEGER",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "",
          "value_desc": "commonsense evidence:\nHigher view count means the post has higher popularity"
        },
        "Body": {
          "full_column_name": "Body",
          "column_desc": "the body of the post",
          "ctype": "TEXT",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "",
          "value_desc": ""
        },
        "OwnerUserId": {
          "full_column_name": "Owner User Id",
          "column_desc": "the id of the owner user",
          "ctype": "INTEGER",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "",
          "value_desc": ""
        },
        "LasActivityDate": {
          "full_column_name": "Last Activity Date",
          "column_desc": "the last activity date",
          "ctype": "DATETIME",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "['2011-01-03 11:13:42.0']",
          "value_desc": ""
        },
        "Title": {
          "full_column_name": "Title",
          "column_desc": "the title of the post",
          "ctype": "TEXT",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "",
          "value_desc": ""
        },
        "Tags": {
          "full_column_name": "Tags",
          "column_desc": "the tag of the post",
          "ctype": "TEXT",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "",
          "value_desc": ""
        },
        "AnswerCount": {
          "full_column_name": "Answer Count",
          "column_desc": "the total number of answers of the post",
          "ctype": "INTEGER",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "",
          "value_desc": ""
        },
        "CommentCount": {
          "full_column_name": "Comment Count",
          "column_desc": "the total number of comments of the post",
          "ctype": "INTEGER",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "",
          "value_desc": ""
        },
        "FavoriteCount": {
          "full_column_name": "Favorite Count",
          "column_desc": "the total number of favorites of the post",
          "ctype": "INTEGER",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "",
          "value_desc": "commonsense evidence:\nmore favorite count refers to more valuable posts."
        },
        "LastEditorUserId": {
          "full_column_name": "Last Editor User Id",
          "column_desc": "the id of the last editor",
          "ctype": "INTEGER",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "",
          "value_desc": ""
        },
        "LastEditDate": {
          "full_column_name": "Last Edit Date",
          "column_desc": "the last edit date",
          "ctype": "DATETIME",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "[None, '2014-04-23 13:43:43.0']",
          "value_desc": ""
        },
        "CommunityOwnedDate": {
          "full_column_name": "Community Owned Date",
          "column_desc": "the community owned date",
          "ctype": "DATETIME",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "[None, '2010-08-01 18:56:25.0']",
          "value_desc": ""
        },
        "ParentId": {
          "full_column_name": "ParentId",
          "column_desc": "the id of the parent post",
          "ctype": "INTEGER",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "",
          "value_desc": "commonsense evidence:\nIf the parent id is null, the post is the root post. Otherwise, the post is the child post of other post."
        },
        "ClosedDate": {
          "full_column_name": "Closed Date",
          "column_desc": "the closed date of the post",
          "ctype": "DATETIME",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "[None, '2014-09-13 19:29:33.0']",
          "value_desc": "commonsense evidence:\nif ClosedDate is null or empty, it means this post is not well-finished\nif CloseDate is not null or empty, it means this post has well-finished."
        },
        "OwnerDisplayName": {
          "full_column_name": "Owner Display Name",
          "column_desc": "the display name of the post owner",
          "ctype": "TEXT",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "[None, 'user28', 'user25658', 'user5644', 'user10525', 'tdc']",
          "value_desc": ""
        },
        "LastEditorDisplayName": {
          "full_column_name": "Last Editor Display Name",
          "column_desc": "the display name of the last editor",
          "ctype": "TEXT",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "[None, 'user10525', 'user28', 'user5644', 'user25658', 'user7997']",
          "value_desc": ""
        }
      },
      "tags": {
        "Id": {
          "full_column_name": "Id",
          "column_desc": "the tag id",
          "ctype": "INTEGER",
          "notnull": 1,
          "dflt_value": null,
          "primary_key": 1,
          "examples": "",
          "value_desc": ""
        },
        "TagName": {
          "full_column_name": "Tag Name",
          "column_desc": "the name of the tag",
          "ctype": "TEXT",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "['zipf', 'zero-inflation', 'zero-inflated', 'z-test', 'z-statistic']",
          "value_desc": ""
        },
        "Count": {
          "full_column_name": "Count",
          "column_desc": "the count of posts that contain this tag",
          "ctype": "INTEGER",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "",
          "value_desc": "more counts --> this tag is more popular"
        },
        "ExcerptPostId": {
          "full_column_name": "Excerpt Post Id",
          "column_desc": "the excerpt post id of the tag",
          "ctype": "INTEGER",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "",
          "value_desc": ""
        },
        "WikiPostId": {
          "full_column_name": "Wiki Post Id",
          "column_desc": "the wiki post id of the tag",
          "ctype": "INTEGER",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "",
          "value_desc": ""
        }
      },
      "users": {
        "Id": {
          "full_column_name": "Id",
          "column_desc": "the user id",
          "ctype": "INTEGER",
          "notnull": 1,
          "dflt_value": null,
          "primary_key": 1,
          "examples": "",
          "value_desc": ""
        },
        "Reputation": {
          "full_column_name": "Reputation",
          "column_desc": "the user's reputation",
          "ctype": "INTEGER",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "",
          "value_desc": "commonsense evidence:\nThe user with higher reputation has more influence."
        },
        "CreationDate": {
          "full_column_name": "Creation Date",
          "column_desc": "the creation date of the user account",
          "ctype": "DATETIME",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "['2014-04-25 07:44:31.0']",
          "value_desc": ""
        },
        "DisplayName": {
          "full_column_name": "Display Name",
          "column_desc": "the user's display name",
          "ctype": "TEXT",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "['Chris', 'John', 'Alex', 'Tom', 'Michael']",
          "value_desc": ""
        },
        "LastAccessDate": {
          "full_column_name": "Last Access Date",
          "column_desc": "the last access date of the user account",
          "ctype": "DATETIME",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "['2014-09-08 15:53:04.0']",
          "value_desc": ""
        },
        "WebsiteUrl": {
          "full_column_name": "Website Url",
          "column_desc": "the website url of the user account",
          "ctype": "TEXT",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "",
          "value_desc": ""
        },
        "Location": {
          "full_column_name": "Location",
          "column_desc": "user's location",
          "ctype": "TEXT",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "",
          "value_desc": ""
        },
        "AboutMe": {
          "full_column_name": "About Me",
          "column_desc": "the self introduction of the user",
          "ctype": "TEXT",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "",
          "value_desc": ""
        },
        "Views": {
          "full_column_name": "Views",
          "column_desc": "the number of views",
          "ctype": "INTEGER",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "",
          "value_desc": ""
        },
        "UpVotes": {
          "full_column_name": "UpVotes",
          "column_desc": "the number of upvotes",
          "ctype": "INTEGER",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "",
          "value_desc": ""
        },
        "DownVotes": {
          "full_column_name": "DownVotes",
          "column_desc": "the number of downvotes",
          "ctype": "INTEGER",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "",
          "value_desc": ""
        },
        "AccountId": {
          "full_column_name": "Account Id",
          "column_desc": "the unique id of the account",
          "ctype": "INTEGER",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "",
          "value_desc": ""
        },
        "Age": {
          "full_column_name": "Age",
          "column_desc": "user's age",
          "ctype": "INTEGER",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "",
          "value_desc": " teenager: 13-18\n adult: 19-65\n elder: > 65"
        },
        "ProfileImageUrl": {
          "full_column_name": "Profile Image Url",
          "column_desc": "the profile image url",
          "ctype": "TEXT",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "",
          "value_desc": ""
        }
      },
      "votes": {
        "Id": {
          "full_column_name": "Id",
          "column_desc": "the vote id",
          "ctype": "INTEGER",
          "notnull": 1,
          "dflt_value": null,
          "primary_key": 1,
          "examples": "",
          "value_desc": ""
        },
        "PostId": {
          "full_column_name": "Post Id",
          "column_desc": "the id of the post that is voted",
          "ctype": "INTEGER",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "",
          "value_desc": ""
        },
        "VoteTypeId": {
          "full_column_name": "Vote Type Id",
          "column_desc": "the id of the vote type",
          "ctype": "INTEGER",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "[2, 5, 1, 3, 16]",
          "value_desc": ""
        },
        "CreationDate": {
          "full_column_name": "Creation Date",
          "column_desc": "the creation date of the vote",
          "ctype": "DATE",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "['2010-07-20']",
          "value_desc": ""
        },
        "UserId": {
          "full_column_name": "User Id",
          "column_desc": "the id of the voter",
          "ctype": "INTEGER",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "",
          "value_desc": ""
        },
        "BountyAmount": {
          "full_column_name": "Bounty Amount",
          "column_desc": "the amount of bounty",
          "ctype": "INTEGER",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "[None, 50, 100, 25, 150, 0]",
          "value_desc": ""
        }
      }
    },
    "foreign_keys": [
      "badges.UserId=users.Id",
      "comments.UserId=users.Id",
      "comments.PostId=posts.Id",
      "postHistory.UserId=users.Id",
      "postHistory.PostId=posts.Id",
      "postLinks.RelatedPostId=posts.Id",
      "postLinks.PostId=posts.Id",
      "posts.ParentId=posts.Id",
      "posts.OwnerUserId=users.Id",
      "posts.LastEditorUserId=users.Id",
      "tags.ExcerptPostId=posts.Id",
      "votes.UserId=users.Id",
      "votes.PostId=posts.Id"
    ]
  },
  "superhero": {
    "tables": {
      "alignment": {
        "id": {
          "full_column_name": "id",
          "column_desc": "the unique identifier of the alignment",
          "ctype": "INTEGER",
          "notnull": 1,
          "dflt_value": null,
          "primary_key": 1,
          "examples": "[1, 2, 3, 4]",
          "value_desc": ""
        },
        "alignment": {
          "full_column_name": "alignment",
          "column_desc": "the alignment of the superhero",
          "ctype": "TEXT",
          "notnull": 0,
          "dflt_value": "NULL",
          "primary_key": 0,
          "examples": "['Neutral', 'N/A', 'Good', 'Bad']",
          "value_desc": "commonsense evidence:\nAlignment refers to a character's moral and ethical stance and can be used to describe the overall attitude or behavior of a superhero. Some common alignments for superheroes include:\nGood: These superheroes are typically kind, selfless, and dedicated to protecting others and upholding justice. Examples of good alignments include Superman, Wonder Woman, and Spider-Man.\nNeutral: These superheroes may not always prioritize the greater good, but they are not necessarily evil either. They may act in their own self-interest or make decisions based on their own moral code. Examples of neutral alignments include the Hulk and Deadpool.\n\tBad: These superheroes are typically selfish, manipulative, and willing to harm others in pursuit of their own goals. Examples of evil alignments include Lex Luthor and the Joker."
        }
      },
      "attribute": {
        "id": {
          "full_column_name": "id",
          "column_desc": "the unique identifier of the attribute",
          "ctype": "INTEGER",
          "notnull": 1,
          "dflt_value": null,
          "primary_key": 1,
          "examples": "[1, 2, 3, 4, 5]",
          "value_desc": ""
        },
        "attribute_name": {
          "full_column_name": "attribute name",
          "column_desc": "the attribute",
          "ctype": "TEXT",
          "notnull": 0,
          "dflt_value": "NULL",
          "primary_key": 0,
          "examples": "['Strength', 'Speed', 'Power', 'Intelligence', 'Durability']",
          "value_desc": "commonsense evidence:\nA superhero's attribute is a characteristic or quality that defines who they are and what they are capable of. This could be a physical trait, such as superhuman strength or the ability to fly, or a personal trait, such as extraordinary intelligence or exceptional bravery."
        }
      },
      "colour": {
        "id": {
          "full_column_name": "id",
          "column_desc": "the unique identifier of the color",
          "ctype": "INTEGER",
          "notnull": 1,
          "dflt_value": null,
          "primary_key": 1,
          "examples": "",
          "value_desc": ""
        },
        "colour": {
          "full_column_name": "colour",
          "column_desc": "the color of the superhero's skin/eye/hair/etc",
          "ctype": "TEXT",
          "notnull": 0,
          "dflt_value": "NULL",
          "primary_key": 0,
          "examples": "['Yellow/Red', 'Yellow/Blue', 'Yellow', 'White/Red', 'White']",
          "value_desc": ""
        }
      },
      "gender": {
        "id": {
          "full_column_name": "id",
          "column_desc": "the unique identifier of the gender",
          "ctype": "INTEGER",
          "notnull": 1,
          "dflt_value": null,
          "primary_key": 1,
          "examples": "[1, 2, 3]",
          "value_desc": ""
        },
        "gender": {
          "full_column_name": "gender",
          "column_desc": "the gender of the superhero",
          "ctype": "TEXT",
          "notnull": 0,
          "dflt_value": "NULL",
          "primary_key": 0,
          "examples": "['N/A', 'Male', 'Female']",
          "value_desc": ""
        }
      },
      "publisher": {
        "id": {
          "full_column_name": "id",
          "column_desc": "the unique identifier of the publisher",
          "ctype": "INTEGER",
          "notnull": 1,
          "dflt_value": null,
          "primary_key": 1,
          "examples": "",
          "value_desc": ""
        },
        "publisher_name": {
          "full_column_name": "publisher name",
          "column_desc": "the name of the publisher",
          "ctype": "TEXT",
          "notnull": 0,
          "dflt_value": "NULL",
          "primary_key": 0,
          "examples": "['Wildstorm', 'Universal Studios', 'Titan Books', 'Team Epic TV', 'SyFy']",
          "value_desc": ""
        }
      },
      "race": {
        "id": {
          "full_column_name": "id",
          "column_desc": "the unique identifier of the race",
          "ctype": "INTEGER",
          "notnull": 1,
          "dflt_value": null,
          "primary_key": 1,
          "examples": "",
          "value_desc": ""
        },
        "race": {
          "full_column_name": "race",
          "column_desc": "the race of the superhero",
          "ctype": "TEXT",
          "notnull": 0,
          "dflt_value": "NULL",
          "primary_key": 0,
          "examples": "['Zombie', 'Zen-Whoberian', \"Yoda's species\", 'Yautja', 'Xenomorph XX121']",
          "value_desc": "commonsense evidence:\nIn the context of superheroes, a superhero's race would refer to the particular group of people that the superhero belongs to base on these physical characteristics"
        }
      },
      "superhero": {
        "id": {
          "full_column_name": "id",
          "column_desc": "the unique identifier of the superhero",
          "ctype": "INTEGER",
          "notnull": 1,
          "dflt_value": null,
          "primary_key": 1,
          "examples": "",
          "value_desc": ""
        },
        "superhero_name": {
          "full_column_name": "superhero name",
          "column_desc": "the name of the superhero",
          "ctype": "TEXT",
          "notnull": 0,
          "dflt_value": "NULL",
          "primary_key": 0,
          "examples": "['Atlas', 'Chameleon', 'Captain Marvel', 'Ares', 'Angel']",
          "value_desc": ""
        },
        "full_name": {
          "full_column_name": "full name",
          "column_desc": "the full name of the superhero",
          "ctype": "TEXT",
          "notnull": 0,
          "dflt_value": "NULL",
          "primary_key": 0,
          "examples": "[None, '-', 'Richard John Grayson', 'Bartholomew Allen II', 'Wallace Rudolph West', 'Timothy Jackson Drake']",
          "value_desc": "commonsense evidence:\nThe full name of a person typically consists of their given name, also known as their first name or personal name, and their surname, also known as their last name or family name. For example, if someone's given name is \"John\" and their surname is \"Smith,\" their full name would be \"John Smith.\""
        },
        "gender_id": {
          "full_column_name": "gender id",
          "column_desc": "the id of the superhero's gender",
          "ctype": "INTEGER",
          "notnull": 0,
          "dflt_value": "NULL",
          "primary_key": 0,
          "examples": "[1, 2, 3]",
          "value_desc": ""
        },
        "eye_colour_id": {
          "full_column_name": "eye colour id",
          "column_desc": "the id of the superhero's eye color",
          "ctype": "INTEGER",
          "notnull": 0,
          "dflt_value": "NULL",
          "primary_key": 0,
          "examples": "",
          "value_desc": ""
        },
        "hair_colour_id": {
          "full_column_name": "hair colour id",
          "column_desc": "the id of the superhero's hair color",
          "ctype": "INTEGER",
          "notnull": 0,
          "dflt_value": "NULL",
          "primary_key": 0,
          "examples": "",
          "value_desc": ""
        },
        "skin_colour_id": {
          "full_column_name": "skin colour id",
          "column_desc": "the id of the superhero's skin color",
          "ctype": "INTEGER",
          "notnull": 0,
          "dflt_value": "NULL",
          "primary_key": 0,
          "examples": "",
          "value_desc": ""
        },
        "race_id": {
          "full_column_name": "race id",
          "column_desc": "the id of the superhero's race",
          "ctype": "INTEGER",
          "notnull": 0,
          "dflt_value": "NULL",
          "primary_key": 0,
          "examples": "",
          "value_desc": ""
        },
        "publisher_id": {
          "full_column_name": "publisher id",
          "column_desc": "the id of the publisher",
          "ctype": "INTEGER",
          "notnull": 0,
          "dflt_value": "NULL",
          "primary_key": 0,
          "examples": "",
          "value_desc": ""
        },
        "alignment_id": {
          "full_column_name": "alignment id",
          "column_desc": "the id of the superhero's alignment",
          "ctype": "INTEGER",
          "notnull": 0,
          "dflt_value": "NULL",
          "primary_key": 0,
          "examples": "[None, 1, 2, 3]",
          "value_desc": ""
        },
        "height_cm": {
          "full_column_name": "height cm",
          "column_desc": "the height of the superhero",
          "ctype": "INTEGER",
          "notnull": 0,
          "dflt_value": "NULL",
          "primary_key": 0,
          "examples": "",
          "value_desc": "commonsense evidence:\nThe unit of height is centimeter. If the height_cm is NULL or 0, it means the height of the superhero is missing."
        },
        "weight_kg": {
          "full_column_name": "weight kg",
          "column_desc": "the weight of the superhero",
          "ctype": "INTEGER",
          "notnull": 0,
          "dflt_value": "NULL",
          "primary_key": 0,
          "examples": "",
          "value_desc": "commonsense evidence:\nThe unit of weight is kilogram. If the weight_kg is NULL or 0, it means the weight of the superhero is missing."
        }
      },
      "hero_attribute": {
        "hero_id": {
          "full_column_name": "hero id",
          "column_desc": "the id of the hero\nMaps to superhero(id)",
          "ctype": "INTEGER",
          "notnull": 0,
          "dflt_value": "NULL",
          "primary_key": 0,
          "examples": "",
          "value_desc": ""
        },
        "attribute_id": {
          "full_column_name": "attribute id",
          "column_desc": "the id of the attribute\nMaps to attribute(id)",
          "ctype": "INTEGER",
          "notnull": 0,
          "dflt_value": "NULL",
          "primary_key": 0,
          "examples": "[6, 5, 4, 3, 2]",
          "value_desc": ""
        },
        "attribute_value": {
          "full_column_name": "attribute value",
          "column_desc": "the attribute value",
          "ctype": "INTEGER",
          "notnull": 0,
          "dflt_value": "NULL",
          "primary_key": 0,
          "examples": "",
          "value_desc": "commonsense evidence:\nIf a superhero has a higher attribute value on a particular attribute, it means that they are more skilled or powerful in that area compared to other superheroes. For example, if a superhero has a higher attribute value for strength, they may be able to lift heavier objects or deliver more powerful punches than other superheroes."
        }
      },
      "superpower": {
        "id": {
          "full_column_name": "id",
          "column_desc": "the unique identifier of the superpower",
          "ctype": "INTEGER",
          "notnull": 1,
          "dflt_value": null,
          "primary_key": 1,
          "examples": "",
          "value_desc": ""
        },
        "power_name": {
          "full_column_name": "power name",
          "column_desc": "the superpower name",
          "ctype": "TEXT",
          "notnull": 0,
          "dflt_value": "NULL",
          "primary_key": 0,
          "examples": "['Wind Control', 'Web Creation', 'Weather Control', 'Weapons Master', 'Weapon-based Powers']",
          "value_desc": ""
        }
      },
      "hero_power": {
        "hero_id": {
          "full_column_name": "hero id",
          "column_desc": "the id of the hero\nMaps to superhero(id)",
          "ctype": "INTEGER",
          "notnull": 0,
          "dflt_value": "NULL",
          "primary_key": 0,
          "examples": "",
          "value_desc": ""
        },
        "power_id": {
          "full_column_name": "power id",
          "column_desc": "the id of the power\nMaps to superpower(id)",
          "ctype": "INTEGER",
          "notnull": 0,
          "dflt_value": "NULL",
          "primary_key": 0,
          "examples": "",
          "value_desc": "commonsense evidence:\nIn general, a superhero's attributes provide the foundation for their abilities and help to define who they are, while their powers are the specific abilities that they use to fight crime and protect others."
        }
      }
    },
    "foreign_keys": [
      "superhero.skin_colour_id=colour.id",
      "superhero.race_id=race.id",
      "superhero.publisher_id=publisher.id",
      "superhero.hair_colour_id=colour.id",
      "superhero.gender_id=gender.id",
      "superhero.eye_colour_id=colour.id",
      "superhero.alignment_id=alignment.id",
      "hero_attribute.hero_id=superhero.id",
      "hero_attribute.attribute_id=attribute.id",
      "hero_power.power_id=superpower.id",
      "hero_power.hero_id=superhero.id"
    ]
  },
  "formula_1": {
    "tables": {
      "circuits": {
        "circuitId": {
          "full_column_name": "circuit Id",
          "column_desc": "unique identification number of the circuit",
          "ctype": "INTEGER",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 1,
          "examples": "",
          "value_desc": ""
        },
        "circuitRef": {
          "full_column_name": "circuit reference name",
          "column_desc": "circuit reference name",
          "ctype": "TEXT",
          "notnull": 1,
          "dflt_value": "''",
          "primary_key": 0,
          "examples": "['zolder', 'zeltweg', 'zandvoort', 'yeongam', 'yas_marina']",
          "value_desc": ""
        },
        "name": {
          "full_column_name": "name",
          "column_desc": "full name of circuit",
          "ctype": "TEXT",
          "notnull": 1,
          "dflt_value": "''",
          "primary_key": 0,
          "examples": "['Zolder', 'Zeltweg', 'Yas Marina Circuit', 'Watkins Glen', 'Valencia Street Circuit']",
          "value_desc": ""
        },
        "location": {
          "full_column_name": "location",
          "column_desc": "location of circuit",
          "ctype": "TEXT",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "['Spielburg', 'California', 'Barcelona', 'Zandvoort', 'Yeongam County']",
          "value_desc": ""
        },
        "country": {
          "full_column_name": "country",
          "column_desc": "country of circuit",
          "ctype": "TEXT",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "['USA', 'France', 'Spain', 'UK', 'Portugal']",
          "value_desc": ""
        },
        "lat": {
          "full_column_name": "latitude",
          "column_desc": "latitude of location of circuit",
          "ctype": "REAL",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "",
          "value_desc": ""
        },
        "lng": {
          "full_column_name": "longitude",
          "column_desc": "longitude of location of circuit",
          "ctype": "REAL",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "",
          "value_desc": "commonsense evidence: \nLocation coordinates: (lat, lng)"
        },
        "alt": {
          "full_column_name": "alt",
          "column_desc": "",
          "ctype": "INTEGER",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "",
          "value_desc": "not useful"
        },
        "url": {
          "full_column_name": "url",
          "column_desc": "url",
          "ctype": "TEXT",
          "notnull": 1,
          "dflt_value": "''",
          "primary_key": 0,
          "examples": "",
          "value_desc": ""
        }
      },
      "constructors": {
        "constructorId": {
          "full_column_name": "constructor Id",
          "column_desc": "the unique identification number identifying constructors",
          "ctype": "INTEGER",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 1,
          "examples": "",
          "value_desc": ""
        },
        "constructorRef": {
          "full_column_name": "Constructor Reference name",
          "column_desc": "Constructor Reference name",
          "ctype": "TEXT",
          "notnull": 1,
          "dflt_value": "''",
          "primary_key": 0,
          "examples": "['zakspeed', 'wolf', 'williams', 'wetteroth', 'watson']",
          "value_desc": ""
        },
        "name": {
          "full_column_name": "name",
          "column_desc": "full name of the constructor",
          "ctype": "TEXT",
          "notnull": 1,
          "dflt_value": "''",
          "primary_key": 0,
          "examples": "['AFM', 'AGS', 'ATS', 'Adams', 'Alfa Romeo']",
          "value_desc": ""
        },
        "nationality": {
          "full_column_name": "nationality",
          "column_desc": "nationality of the constructor",
          "ctype": "TEXT",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "['British', 'American', 'Italian', 'French', 'German']",
          "value_desc": ""
        },
        "url": {
          "full_column_name": "url",
          "column_desc": "the introduction website of the constructor",
          "ctype": "TEXT",
          "notnull": 1,
          "dflt_value": "''",
          "primary_key": 0,
          "examples": "",
          "value_desc": "commonsense evidence: \nHow to find out the detailed introduction of the constructor: through its url"
        }
      },
      "drivers": {
        "driverId": {
          "full_column_name": "driver ID",
          "column_desc": "the unique identification number identifying each driver",
          "ctype": "INTEGER",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 1,
          "examples": "",
          "value_desc": ""
        },
        "driverRef": {
          "full_column_name": "driver reference name",
          "column_desc": "driver reference name",
          "ctype": "TEXT",
          "notnull": 1,
          "dflt_value": "''",
          "primary_key": 0,
          "examples": "['zunino', 'zorzi', 'zonta', 'zapico', 'zanardi']",
          "value_desc": ""
        },
        "number": {
          "full_column_name": "number",
          "column_desc": "number",
          "ctype": "INTEGER",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "",
          "value_desc": ""
        },
        "code": {
          "full_column_name": "code",
          "column_desc": "abbreviated code for drivers",
          "ctype": "TEXT",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "[None, 'VER', 'MAG', 'BIA', 'ZON', 'YAM']",
          "value_desc": "if \"null\" or empty, it means it doesn't have code"
        },
        "forename": {
          "full_column_name": "forename",
          "column_desc": "forename",
          "ctype": "TEXT",
          "notnull": 1,
          "dflt_value": "''",
          "primary_key": 0,
          "examples": "['Mike', 'John', 'Peter', 'Tony', 'Bill']",
          "value_desc": ""
        },
        "surname": {
          "full_column_name": "surname",
          "column_desc": "surname",
          "ctype": "TEXT",
          "notnull": 1,
          "dflt_value": "''",
          "primary_key": 0,
          "examples": "['Taylor', 'Wilson', 'Winkelhock', 'Stewart', 'Russo']",
          "value_desc": ""
        },
        "dob": {
          "full_column_name": "date of birth",
          "column_desc": "date of birth",
          "ctype": "DATE",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "[None, '1950-01-18']",
          "value_desc": ""
        },
        "nationality": {
          "full_column_name": "nationality",
          "column_desc": "nationality of drivers",
          "ctype": "TEXT",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "['British', 'American', 'Italian', 'French', 'German']",
          "value_desc": ""
        },
        "url": {
          "full_column_name": "url",
          "column_desc": "the introduction website of the drivers",
          "ctype": "TEXT",
          "notnull": 1,
          "dflt_value": "''",
          "primary_key": 0,
          "examples": "",
          "value_desc": ""
        }
      },
      "seasons": {
        "year": {
          "full_column_name": "race ID",
          "column_desc": "the unique identification number identifying the race",
          "ctype": "INTEGER",
          "notnull": 1,
          "dflt_value": "0",
          "primary_key": 1,
          "examples": "",
          "value_desc": ""
        },
        "url": {
          "full_column_name": "url",
          "column_desc": "website link of season race introduction",
          "ctype": "TEXT",
          "notnull": 1,
          "dflt_value": "''",
          "primary_key": 0,
          "examples": "",
          "value_desc": ""
        }
      },
      "races": {
        "raceId": {
          "full_column_name": "race ID",
          "column_desc": "the unique identification number identifying the race",
          "ctype": "INTEGER",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 1,
          "examples": "",
          "value_desc": ""
        },
        "year": {
          "full_column_name": "year",
          "column_desc": "year",
          "ctype": "INTEGER",
          "notnull": 1,
          "dflt_value": "0",
          "primary_key": 0,
          "examples": "",
          "value_desc": ""
        },
        "round": {
          "full_column_name": "round",
          "column_desc": "round",
          "ctype": "INTEGER",
          "notnull": 1,
          "dflt_value": "0",
          "primary_key": 0,
          "examples": "",
          "value_desc": ""
        },
        "circuitId": {
          "full_column_name": "Circuit Id",
          "column_desc": "circuit Id",
          "ctype": "INTEGER",
          "notnull": 1,
          "dflt_value": "0",
          "primary_key": 0,
          "examples": "",
          "value_desc": ""
        },
        "name": {
          "full_column_name": "name",
          "column_desc": "name of the race",
          "ctype": "TEXT",
          "notnull": 1,
          "dflt_value": "''",
          "primary_key": 0,
          "examples": "['Italian Grand Prix', 'British Grand Prix', 'Monaco Grand Prix', 'German Grand Prix', 'Belgian Grand Prix']",
          "value_desc": ""
        },
        "date": {
          "full_column_name": "date",
          "column_desc": "duration time",
          "ctype": "DATE",
          "notnull": 1,
          "dflt_value": "'0000-00-00'",
          "primary_key": 0,
          "examples": "['2017-11-26']",
          "value_desc": ""
        },
        "time": {
          "full_column_name": "time",
          "column_desc": "time of the location",
          "ctype": "TEXT",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "[None, '12:00:00', '14:00:00', '06:00:00', '16:00:00', '13:00:00']",
          "value_desc": ""
        },
        "url": {
          "full_column_name": "url",
          "column_desc": "introduction of races",
          "ctype": "TEXT",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "",
          "value_desc": ""
        }
      },
      "constructorResults": {
        "constructorResultsId": {
          "full_column_name": "constructor Results Id",
          "column_desc": "constructor Results Id",
          "ctype": "INTEGER",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 1,
          "examples": "",
          "value_desc": ""
        },
        "raceId": {
          "full_column_name": "race Id",
          "column_desc": "race id",
          "ctype": "INTEGER",
          "notnull": 1,
          "dflt_value": "0",
          "primary_key": 0,
          "examples": "",
          "value_desc": ""
        },
        "constructorId": {
          "full_column_name": "constructor Id",
          "column_desc": "constructor id",
          "ctype": "INTEGER",
          "notnull": 1,
          "dflt_value": "0",
          "primary_key": 0,
          "examples": "",
          "value_desc": ""
        },
        "points": {
          "full_column_name": "points",
          "column_desc": "points",
          "ctype": "REAL",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "",
          "value_desc": ""
        },
        "status": {
          "full_column_name": "status",
          "column_desc": "status",
          "ctype": "TEXT",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "[None, 'D']",
          "value_desc": ""
        }
      },
      "constructorStandings": {
        "constructorStandingsId": {
          "full_column_name": "constructor Standings Id",
          "column_desc": "unique identification of the constructor standing records",
          "ctype": "INTEGER",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 1,
          "examples": "",
          "value_desc": ""
        },
        "raceId": {
          "full_column_name": "race id",
          "column_desc": "id number identifying which races",
          "ctype": "INTEGER",
          "notnull": 1,
          "dflt_value": "0",
          "primary_key": 0,
          "examples": "",
          "value_desc": ""
        },
        "constructorId": {
          "full_column_name": "constructor id",
          "column_desc": "id number identifying which id",
          "ctype": "INTEGER",
          "notnull": 1,
          "dflt_value": "0",
          "primary_key": 0,
          "examples": "",
          "value_desc": ""
        },
        "points": {
          "full_column_name": "points",
          "column_desc": "how many points acquired in each race",
          "ctype": "REAL",
          "notnull": 1,
          "dflt_value": "0",
          "primary_key": 0,
          "examples": "",
          "value_desc": ""
        },
        "position": {
          "full_column_name": "position",
          "column_desc": "position or track of circuits",
          "ctype": "INTEGER",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "",
          "value_desc": ""
        },
        "positionText": {
          "full_column_name": "position text",
          "column_desc": "",
          "ctype": "TEXT",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "['3', '2', '1', '6', '5']",
          "value_desc": "same with position, not quite useful"
        },
        "wins": {
          "full_column_name": "wins",
          "column_desc": "wins",
          "ctype": "INTEGER",
          "notnull": 1,
          "dflt_value": "0",
          "primary_key": 0,
          "examples": "",
          "value_desc": ""
        }
      },
      "driverStandings": {
        "driverStandingsId": {
          "full_column_name": "driver Standings Id",
          "column_desc": "the unique identification number identifying driver standing records",
          "ctype": "INTEGER",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 1,
          "examples": "",
          "value_desc": ""
        },
        "raceId": {
          "full_column_name": "constructor Reference name",
          "column_desc": "id number identifying which races",
          "ctype": "INTEGER",
          "notnull": 1,
          "dflt_value": "0",
          "primary_key": 0,
          "examples": "",
          "value_desc": ""
        },
        "driverId": {
          "full_column_name": "driverId",
          "column_desc": "id number identifying which drivers",
          "ctype": "INTEGER",
          "notnull": 1,
          "dflt_value": "0",
          "primary_key": 0,
          "examples": "",
          "value_desc": ""
        },
        "points": {
          "full_column_name": "points",
          "column_desc": "how many points acquired in each race",
          "ctype": "REAL",
          "notnull": 1,
          "dflt_value": "0",
          "primary_key": 0,
          "examples": "",
          "value_desc": ""
        },
        "position": {
          "full_column_name": "position",
          "column_desc": "position or track of circuits",
          "ctype": "INTEGER",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "",
          "value_desc": ""
        },
        "positionText": {
          "full_column_name": "position text",
          "column_desc": "",
          "ctype": "TEXT",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "['7', '6', '5', '4', '3']",
          "value_desc": "same with position, not quite useful"
        },
        "wins": {
          "full_column_name": "wins",
          "column_desc": "wins",
          "ctype": "INTEGER",
          "notnull": 1,
          "dflt_value": "0",
          "primary_key": 0,
          "examples": "",
          "value_desc": ""
        }
      },
      "lapTimes": {
        "raceId": {
          "full_column_name": "race ID",
          "column_desc": "the identification number identifying race",
          "ctype": "INTEGER",
          "notnull": 1,
          "dflt_value": null,
          "primary_key": 1,
          "examples": "",
          "value_desc": ""
        },
        "driverId": {
          "full_column_name": "driver ID",
          "column_desc": "the identification number identifying each driver",
          "ctype": "INTEGER",
          "notnull": 1,
          "dflt_value": null,
          "primary_key": 2,
          "examples": "",
          "value_desc": ""
        },
        "lap": {
          "full_column_name": "lap",
          "column_desc": "lap number",
          "ctype": "INTEGER",
          "notnull": 1,
          "dflt_value": null,
          "primary_key": 3,
          "examples": "",
          "value_desc": ""
        },
        "position": {
          "full_column_name": "position",
          "column_desc": "position or track of circuits",
          "ctype": "INTEGER",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "",
          "value_desc": ""
        },
        "time": {
          "full_column_name": "time",
          "column_desc": "lap time",
          "ctype": "TEXT",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "['1:23.794', '1:21.571', '1:20.450', '1:20.329', '1:19.613']",
          "value_desc": "in minutes / seconds / ..."
        },
        "milliseconds": {
          "full_column_name": "milliseconds",
          "column_desc": "milliseconds",
          "ctype": "INTEGER",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "",
          "value_desc": ""
        }
      },
      "pitStops": {
        "raceId": {
          "full_column_name": "race ID",
          "column_desc": "the identification number identifying race",
          "ctype": "INTEGER",
          "notnull": 1,
          "dflt_value": null,
          "primary_key": 1,
          "examples": "",
          "value_desc": ""
        },
        "driverId": {
          "full_column_name": "driver ID",
          "column_desc": "the identification number identifying each driver",
          "ctype": "INTEGER",
          "notnull": 1,
          "dflt_value": null,
          "primary_key": 2,
          "examples": "",
          "value_desc": ""
        },
        "stop": {
          "full_column_name": "stop",
          "column_desc": "stop number",
          "ctype": "INTEGER",
          "notnull": 1,
          "dflt_value": null,
          "primary_key": 3,
          "examples": "[1, 2, 3, 4, 5]",
          "value_desc": ""
        },
        "lap": {
          "full_column_name": "lap",
          "column_desc": "lap number",
          "ctype": "INTEGER",
          "notnull": 1,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "",
          "value_desc": ""
        },
        "time": {
          "full_column_name": "time",
          "column_desc": "time",
          "ctype": "TEXT",
          "notnull": 1,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "['14:56:46', '16:07:01', '15:26:26', '15:21:45', '15:20:50']",
          "value_desc": "exact time"
        },
        "duration": {
          "full_column_name": "duration",
          "column_desc": "duration time",
          "ctype": "TEXT",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "['22.838', '22.303', '24.757', '24.083', '23.732']",
          "value_desc": "seconds/"
        },
        "milliseconds": {
          "full_column_name": "milliseconds",
          "column_desc": "milliseconds",
          "ctype": "INTEGER",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "",
          "value_desc": ""
        }
      },
      "qualifying": {
        "qualifyId": {
          "full_column_name": "qualify Id",
          "column_desc": "the unique identification number identifying qualifying",
          "ctype": "INTEGER",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 1,
          "examples": "",
          "value_desc": "How does F1 Sprint qualifying work? Sprint qualifying is essentially a short-form Grand Prix  a race that is one-third the number of laps of the main event on Sunday. However, the drivers are battling for positions on the grid for the start of Sunday's race."
        },
        "raceId": {
          "full_column_name": "race Id",
          "column_desc": "the identification number identifying each race",
          "ctype": "INTEGER",
          "notnull": 1,
          "dflt_value": "0",
          "primary_key": 0,
          "examples": "",
          "value_desc": ""
        },
        "driverId": {
          "full_column_name": "driver Id",
          "column_desc": "the identification number identifying each driver",
          "ctype": "INTEGER",
          "notnull": 1,
          "dflt_value": "0",
          "primary_key": 0,
          "examples": "",
          "value_desc": ""
        },
        "constructorId": {
          "full_column_name": "constructor id",
          "column_desc": "constructor Id",
          "ctype": "INTEGER",
          "notnull": 1,
          "dflt_value": "0",
          "primary_key": 0,
          "examples": "",
          "value_desc": ""
        },
        "number": {
          "full_column_name": "number",
          "column_desc": "number",
          "ctype": "INTEGER",
          "notnull": 1,
          "dflt_value": "0",
          "primary_key": 0,
          "examples": "",
          "value_desc": ""
        },
        "position": {
          "full_column_name": "position",
          "column_desc": "position or track of circuit",
          "ctype": "INTEGER",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "",
          "value_desc": ""
        },
        "q1": {
          "full_column_name": "qualifying 1",
          "column_desc": "time in qualifying 1",
          "ctype": "TEXT",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "[None, '1:20.888', '1:46.960', '1:39.250', '1:38.141', '1:36.198']",
          "value_desc": "in minutes / seconds / ... \ncommonsense evidence: \nQ1 lap times determine pole position and the order of the front 10 positions on the grid. The slowest driver in Q1 starts 10th, the next starts ninth and so on. \nAll 20 F1 drivers participate in the first period, called Q1, with each trying to set the fastest time possible. Those in the top 15 move on to the next period of qualifying, called Q2. The five slowest drivers are eliminated and will start the race in the last five positions on the grid."
        },
        "q2": {
          "full_column_name": "qualifying 2",
          "column_desc": "time in qualifying 2",
          "ctype": "TEXT",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "[None, '1:46.328', '1:38.417', '1:37.347', '1:33.416', '1:31.010']",
          "value_desc": "in minutes / seconds / ... \ncommonsense evidence: \nonly top 15 in the q1 has the record of q2 \nQ2 is slightly shorter but follows the same format. Drivers try to put down their best times to move on to Q1 as one of the 10 fastest cars. The five outside of the top 10 are eliminated and start the race from 11th to 15th based on their best lap time."
        },
        "q3": {
          "full_column_name": "qualifying 3",
          "column_desc": "time in qualifying 3",
          "ctype": "TEXT",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "[None, '1:38.513', '1:35.766', '1:47.362', '1:47.216', '1:45.503']",
          "value_desc": "in minutes / seconds / ... \ncommonsense evidence: \nonly top 10 in the q2 has the record of q3"
        }
      },
      "status": {
        "statusId": {
          "full_column_name": "status ID",
          "column_desc": "the unique identification number identifying status",
          "ctype": "INTEGER",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 1,
          "examples": "",
          "value_desc": ""
        },
        "status": {
          "full_column_name": "status",
          "column_desc": "full name of status",
          "ctype": "TEXT",
          "notnull": 1,
          "dflt_value": "''",
          "primary_key": 0,
          "examples": "['Withdrew', 'Wheel rim', 'Wheel nut', 'Wheel bearing', 'Wheel']",
          "value_desc": ""
        }
      },
      "results": {
        "resultId": {
          "full_column_name": "Result ID",
          "column_desc": "the unique identification number identifying race result",
          "ctype": "INTEGER",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 1,
          "examples": "",
          "value_desc": ""
        },
        "raceId": {
          "full_column_name": "race ID",
          "column_desc": "the identification number identifying the race",
          "ctype": "INTEGER",
          "notnull": 1,
          "dflt_value": "0",
          "primary_key": 0,
          "examples": "",
          "value_desc": ""
        },
        "driverId": {
          "full_column_name": "driver ID",
          "column_desc": "the identification number identifying the driver",
          "ctype": "INTEGER",
          "notnull": 1,
          "dflt_value": "0",
          "primary_key": 0,
          "examples": "",
          "value_desc": ""
        },
        "constructorId": {
          "full_column_name": "constructor Id",
          "column_desc": "the identification number identifying which constructors",
          "ctype": "INTEGER",
          "notnull": 1,
          "dflt_value": "0",
          "primary_key": 0,
          "examples": "",
          "value_desc": ""
        },
        "number": {
          "full_column_name": "number",
          "column_desc": "number",
          "ctype": "INTEGER",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "",
          "value_desc": ""
        },
        "grid": {
          "full_column_name": "grid",
          "column_desc": "the number identifying the area where cars are set into a grid formation in order to start the race.",
          "ctype": "INTEGER",
          "notnull": 1,
          "dflt_value": "0",
          "primary_key": 0,
          "examples": "",
          "value_desc": ""
        },
        "position": {
          "full_column_name": "position",
          "column_desc": "The finishing position or track of circuits",
          "ctype": "INTEGER",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "",
          "value_desc": ""
        },
        "positionText": {
          "full_column_name": "position text",
          "column_desc": "",
          "ctype": "TEXT",
          "notnull": 1,
          "dflt_value": "''",
          "primary_key": 0,
          "examples": "['R', 'F', '4', '3', '2']",
          "value_desc": "not quite useful"
        },
        "positionOrder": {
          "full_column_name": "position order",
          "column_desc": "the finishing order of positions",
          "ctype": "INTEGER",
          "notnull": 1,
          "dflt_value": "0",
          "primary_key": 0,
          "examples": "",
          "value_desc": ""
        },
        "points": {
          "full_column_name": "points",
          "column_desc": "points",
          "ctype": "REAL",
          "notnull": 1,
          "dflt_value": "0",
          "primary_key": 0,
          "examples": "",
          "value_desc": ""
        },
        "laps": {
          "full_column_name": "laps",
          "column_desc": "lap number",
          "ctype": "INTEGER",
          "notnull": 1,
          "dflt_value": "0",
          "primary_key": 0,
          "examples": "",
          "value_desc": ""
        },
        "time": {
          "full_column_name": "time",
          "column_desc": "finish time",
          "ctype": "TEXT",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "[None, '+8:22.19', '+5.7', '+46.2', '+1:29.6', '+0.7']",
          "value_desc": "commonsense evidence: \n1. if the value exists, it means the driver finished the race. \n2. Only the time of the champion shows in the format of \"minutes: seconds.millionsecond\", the time of the other drivers shows as \"seconds.millionsecond\" , which means their actual time is the time of the champion adding the value in this cell."
        },
        "milliseconds": {
          "full_column_name": "milliseconds",
          "column_desc": "the actual finishing time of drivers in milliseconds",
          "ctype": "INTEGER",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "",
          "value_desc": "the actual finishing time of drivers"
        },
        "fastestLap": {
          "full_column_name": "fastest lap",
          "column_desc": "fastest lap number",
          "ctype": "INTEGER",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "",
          "value_desc": ""
        },
        "rank": {
          "full_column_name": "rank",
          "column_desc": "starting rank positioned by fastest lap speed",
          "ctype": "INTEGER",
          "notnull": 0,
          "dflt_value": "0",
          "primary_key": 0,
          "examples": "",
          "value_desc": ""
        },
        "fastestLapTime": {
          "full_column_name": "fastest Lap Time",
          "column_desc": "fastest Lap Time",
          "ctype": "TEXT",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "[None, '1:47.736', '1:42.660', '1:37.036', '1:35.816', '1:29.230']",
          "value_desc": "faster (smaller in the value) \"fastestLapTime\" leads to higher rank (smaller is higher rank)"
        },
        "fastestLapSpeed": {
          "full_column_name": "fastest Lap Speed",
          "column_desc": "fastest Lap Speed",
          "ctype": "TEXT",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "[None, '222.592', '220.611', '201.478', '201.330', '200.091']",
          "value_desc": "(km / h)"
        },
        "statusId": {
          "full_column_name": "status Id",
          "column_desc": "status ID",
          "ctype": "INTEGER",
          "notnull": 1,
          "dflt_value": "0",
          "primary_key": 0,
          "examples": "",
          "value_desc": "its category description appear in the table status"
        }
      }
    },
    "foreign_keys": [
      "races.circuitId=circuits.circuitId",
      "races.year=seasons.year",
      "constructorResults.constructorId=constructors.constructorId",
      "constructorResults.raceId=races.raceId",
      "constructorStandings.constructorId=constructors.constructorId",
      "constructorStandings.raceId=races.raceId",
      "driverStandings.driverId=drivers.driverId",
      "driverStandings.raceId=races.raceId",
      "lapTimes.driverId=drivers.driverId",
      "lapTimes.raceId=races.raceId",
      "pitStops.driverId=drivers.driverId",
      "pitStops.raceId=races.raceId",
      "qualifying.constructorId=constructors.constructorId",
      "qualifying.driverId=drivers.driverId",
      "qualifying.raceId=races.raceId",
      "results.statusId=status.statusId",
      "results.constructorId=constructors.constructorId",
      "results.driverId=drivers.driverId",
      "results.raceId=races.raceId"
    ]
  },
  "european_football_2": {
    "tables": {
      "Player_Attributes": {
        "id": {
          "full_column_name": "id",
          "column_desc": "the unique id for players",
          "ctype": "INTEGER",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 1,
          "examples": "",
          "value_desc": ""
        },
        "player_fifa_api_id": {
          "full_column_name": "player federation international football association api id",
          "column_desc": "the id of the player fifa api",
          "ctype": "INTEGER",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "",
          "value_desc": ""
        },
        "player_api_id": {
          "full_column_name": "player api id",
          "column_desc": "the id of the player api",
          "ctype": "INTEGER",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "",
          "value_desc": ""
        },
        "date": {
          "full_column_name": "date",
          "column_desc": "date",
          "ctype": "TEXT",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "['2007-02-22 00:00:00']",
          "value_desc": "e.g. 2016-02-18 00:00:00"
        },
        "overall_rating": {
          "full_column_name": "overall rating",
          "column_desc": "the overall rating of the player",
          "ctype": "INTEGER",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "",
          "value_desc": "commonsense reasoning: \nThe rating is between 0-100 which is calculated by FIFA.\n Higher overall rating means the player has a stronger overall strength."
        },
        "potential": {
          "full_column_name": "potential",
          "column_desc": "potential of the player",
          "ctype": "INTEGER",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "",
          "value_desc": "commonsense reasoning: \nThe potential score is between 0-100 which is calculated by FIFA.\n Higher potential score means that the player has more potential"
        },
        "preferred_foot": {
          "full_column_name": "preferred foot",
          "column_desc": "the player's preferred foot when attacking",
          "ctype": "TEXT",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "[None, 'right', 'left']",
          "value_desc": "right/ left"
        },
        "attacking_work_rate": {
          "full_column_name": "attacking work rate",
          "column_desc": "the player's attacking work rate",
          "ctype": "TEXT",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "[None, 'medium', 'high', 'low', 'None', 'norm']",
          "value_desc": "commonsense reasoning: \n high: implies that the player is going to be in all of your attack moves\n medium: implies that the player will select the attack actions he will join in\n low: remain in his position while the team attacks"
        },
        "defensive_work_rate": {
          "full_column_name": "defensive work rate",
          "column_desc": "the player's defensive work rate",
          "ctype": "TEXT",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "[None, 'medium', 'high', 'low', '_0', 'o']",
          "value_desc": "commonsense reasoning: \n high: remain in his position and defense while the team attacks \n medium: implies that the player will select the defensive actions he will join in\n low: implies that the player is going to be in all of your attack moves instead of defensing"
        },
        "crossing": {
          "full_column_name": "crossing",
          "column_desc": "the player's crossing score",
          "ctype": "INTEGER",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "",
          "value_desc": "commonsense reasoning: \nCross is a long pass into the opponent's goal towards the header of sixth-yard teammate.\n The crossing score is between 0-100 which measures the tendency/frequency of crosses in the box.\n Higher potential score means that the player performs better in crossing actions."
        },
        "finishing": {
          "full_column_name": "finishing",
          "column_desc": "the player's finishing rate",
          "ctype": "INTEGER",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "",
          "value_desc": "0-100 which is calculated by FIFA"
        },
        "heading_accuracy": {
          "full_column_name": "heading accuracy",
          "column_desc": "the player's heading accuracy",
          "ctype": "INTEGER",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "",
          "value_desc": "0-100 which is calculated by FIFA"
        },
        "short_passing": {
          "full_column_name": "short passing",
          "column_desc": "the player's short passing score",
          "ctype": "INTEGER",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "",
          "value_desc": "0-100 which is calculated by FIFA"
        },
        "volleys": {
          "full_column_name": "volleys",
          "column_desc": "the player's volley score",
          "ctype": "INTEGER",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "",
          "value_desc": "0-100 which is calculated by FIFA"
        },
        "dribbling": {
          "full_column_name": "dribbling",
          "column_desc": "the player's dribbling score",
          "ctype": "INTEGER",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "",
          "value_desc": "0-100 which is calculated by FIFA"
        },
        "curve": {
          "full_column_name": "curve",
          "column_desc": "the player's curve score",
          "ctype": "INTEGER",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "",
          "value_desc": "0-100 which is calculated by FIFA"
        },
        "free_kick_accuracy": {
          "full_column_name": "free kick accuracy",
          "column_desc": "the player's free kick accuracy",
          "ctype": "INTEGER",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "",
          "value_desc": "0-100 which is calculated by FIFA"
        },
        "long_passing": {
          "full_column_name": "long passing",
          "column_desc": "the player's long passing score",
          "ctype": "INTEGER",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "",
          "value_desc": "0-100 which is calculated by FIFA"
        },
        "ball_control": {
          "full_column_name": "ball control",
          "column_desc": "the player's ball control score",
          "ctype": "INTEGER",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "",
          "value_desc": "0-100 which is calculated by FIFA"
        },
        "acceleration": {
          "full_column_name": "acceleration",
          "column_desc": "the player's acceleration score",
          "ctype": "INTEGER",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "",
          "value_desc": "0-100 which is calculated by FIFA"
        },
        "sprint_speed": {
          "full_column_name": "sprint speed",
          "column_desc": "the player's sprint speed",
          "ctype": "INTEGER",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "",
          "value_desc": "0-100 which is calculated by FIFA"
        },
        "agility": {
          "full_column_name": "agility",
          "column_desc": "the player's agility",
          "ctype": "INTEGER",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "",
          "value_desc": "0-100 which is calculated by FIFA"
        },
        "reactions": {
          "full_column_name": "reactions",
          "column_desc": "the player's reactions score",
          "ctype": "INTEGER",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "",
          "value_desc": "0-100 which is calculated by FIFA"
        },
        "balance": {
          "full_column_name": "balance",
          "column_desc": "the player's balance score",
          "ctype": "INTEGER",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "",
          "value_desc": "0-100 which is calculated by FIFA"
        },
        "shot_power": {
          "full_column_name": "shot power",
          "column_desc": "the player's shot power",
          "ctype": "INTEGER",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "",
          "value_desc": "0-100 which is calculated by FIFA"
        },
        "jumping": {
          "full_column_name": "jumping",
          "column_desc": "the player's jumping score",
          "ctype": "INTEGER",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "",
          "value_desc": "0-100 which is calculated by FIFA"
        },
        "stamina": {
          "full_column_name": "stamina",
          "column_desc": "the player's stamina score",
          "ctype": "INTEGER",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "",
          "value_desc": "0-100 which is calculated by FIFA"
        },
        "strength": {
          "full_column_name": "strength",
          "column_desc": "the player's strength score",
          "ctype": "INTEGER",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "",
          "value_desc": "0-100 which is calculated by FIFA"
        },
        "long_shots": {
          "full_column_name": "long shots",
          "column_desc": "the player's long shots score",
          "ctype": "INTEGER",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "",
          "value_desc": "0-100 which is calculated by FIFA"
        },
        "aggression": {
          "full_column_name": "aggression",
          "column_desc": "the player's aggression score",
          "ctype": "INTEGER",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "",
          "value_desc": "0-100 which is calculated by FIFA"
        },
        "interceptions": {
          "full_column_name": "interceptions",
          "column_desc": "the player's interceptions score",
          "ctype": "INTEGER",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "",
          "value_desc": "0-100 which is calculated by FIFA"
        },
        "positioning": {
          "full_column_name": "positioning",
          "column_desc": "the player's \npositioning score",
          "ctype": "INTEGER",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "",
          "value_desc": "0-100 which is calculated by FIFA"
        },
        "vision": {
          "full_column_name": "vision",
          "column_desc": "the player's vision score",
          "ctype": "INTEGER",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "",
          "value_desc": "0-100 which is calculated by FIFA"
        },
        "penalties": {
          "full_column_name": "penalties",
          "column_desc": "the player's penalties score",
          "ctype": "INTEGER",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "",
          "value_desc": "0-100 which is calculated by FIFA"
        },
        "marking": {
          "full_column_name": "marking",
          "column_desc": "the player's markingscore",
          "ctype": "INTEGER",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "",
          "value_desc": "0-100 which is calculated by FIFA"
        },
        "standing_tackle": {
          "full_column_name": "standing tackle",
          "column_desc": "the player's standing tackle score",
          "ctype": "INTEGER",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "",
          "value_desc": "0-100 which is calculated by FIFA"
        },
        "sliding_tackle": {
          "full_column_name": "sliding tackle",
          "column_desc": "the player's sliding tackle score",
          "ctype": "INTEGER",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "",
          "value_desc": "0-100 which is calculated by FIFA"
        },
        "gk_diving": {
          "full_column_name": "goalkeep diving",
          "column_desc": "the player's goalkeep diving score",
          "ctype": "INTEGER",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "",
          "value_desc": "0-100 which is calculated by FIFA"
        },
        "gk_handling": {
          "full_column_name": "goalkeep handling",
          "column_desc": "the player's goalkeep diving score",
          "ctype": "INTEGER",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "",
          "value_desc": "0-100 which is calculated by FIFA"
        },
        "gk_kicking": {
          "full_column_name": "goalkeep kicking",
          "column_desc": "the player's goalkeep kicking score",
          "ctype": "INTEGER",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "",
          "value_desc": "0-100 which is calculated by FIFA"
        },
        "gk_positioning": {
          "full_column_name": "goalkeep positioning",
          "column_desc": "the player's goalkeep positioning score",
          "ctype": "INTEGER",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "",
          "value_desc": "0-100 which is calculated by FIFA"
        },
        "gk_reflexes": {
          "full_column_name": "goalkeep reflexes",
          "column_desc": "the player's goalkeep reflexes score",
          "ctype": "INTEGER",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "",
          "value_desc": "0-100 which is calculated by FIFA"
        }
      },
      "Player": {
        "id": {
          "full_column_name": "id",
          "column_desc": "the unique id for players",
          "ctype": "INTEGER",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 1,
          "examples": "",
          "value_desc": ""
        },
        "player_api_id": {
          "full_column_name": "player api id",
          "column_desc": "the id of the player api",
          "ctype": "INTEGER",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "",
          "value_desc": ""
        },
        "player_name": {
          "full_column_name": "player name",
          "column_desc": "player name",
          "ctype": "TEXT",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "['Danilo', 'Paulinho', 'Ricardo', 'Roberto', 'Rafael']",
          "value_desc": ""
        },
        "player_fifa_api_id": {
          "full_column_name": "player federation international football association api id",
          "column_desc": "the id of the player fifa api",
          "ctype": "INTEGER",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "",
          "value_desc": ""
        },
        "birthday": {
          "full_column_name": "birthday",
          "column_desc": "the player's birthday",
          "ctype": "TEXT",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "['1989-03-02 00:00:00']",
          "value_desc": "e.g. 1992-02-29 00:00:00 \ncommonsense reasoning: \nPlayer A is older than player B means that A's birthday is earlier than B's"
        },
        "height": {
          "full_column_name": "height",
          "column_desc": "the player's height",
          "ctype": "INTEGER",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "",
          "value_desc": ""
        },
        "weight": {
          "full_column_name": "weight",
          "column_desc": "the player's weight",
          "ctype": "INTEGER",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "",
          "value_desc": ""
        }
      },
      "League": {
        "id": {
          "full_column_name": "id",
          "column_desc": "the unique id for leagues",
          "ctype": "INTEGER",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 1,
          "examples": "",
          "value_desc": ""
        },
        "country_id": {
          "full_column_name": "country id",
          "column_desc": "the unique id for countries",
          "ctype": "INTEGER",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "",
          "value_desc": ""
        },
        "name": {
          "full_column_name": "name",
          "column_desc": "league name",
          "ctype": "TEXT",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "['Belgium Jupiler League', 'England Premier League', 'France Ligue 1', 'Germany 1. Bundesliga', 'Italy Serie A']",
          "value_desc": ""
        }
      },
      "Country": {
        "id": {
          "full_column_name": "id",
          "column_desc": "",
          "ctype": "INTEGER",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 1,
          "examples": "",
          "value_desc": ""
        },
        "name": {
          "full_column_name": "name",
          "column_desc": "",
          "ctype": "TEXT",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "['Belgium', 'England', 'France', 'Germany', 'Italy']",
          "value_desc": ""
        }
      },
      "Team": {
        "id": {
          "full_column_name": "id",
          "column_desc": "the unique id for teams",
          "ctype": "INTEGER",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 1,
          "examples": "",
          "value_desc": ""
        },
        "team_api_id": {
          "full_column_name": "team api id",
          "column_desc": "the id of the team api",
          "ctype": "INTEGER",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "",
          "value_desc": ""
        },
        "team_fifa_api_id": {
          "full_column_name": "team federation international football association api id",
          "column_desc": "the id of the team fifa api",
          "ctype": "INTEGER",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "",
          "value_desc": ""
        },
        "team_long_name": {
          "full_column_name": "team long name",
          "column_desc": "the team's long name",
          "ctype": "TEXT",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "['Widzew Łódź', 'Royal Excel Mouscron', 'Polonia Bytom', 'Śląsk Wrocław', 'Évian Thonon Gaillard FC']",
          "value_desc": ""
        },
        "team_short_name": {
          "full_column_name": "team short name",
          "column_desc": "the team's short name",
          "ctype": "TEXT",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "['VAL', 'POR', 'MON', 'GRA', 'GEN']",
          "value_desc": ""
        }
      },
      "Team_Attributes": {
        "id": {
          "full_column_name": "id",
          "column_desc": "the unique id for teams",
          "ctype": "INTEGER",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 1,
          "examples": "",
          "value_desc": ""
        },
        "team_fifa_api_id": {
          "full_column_name": "team federation international football association api id",
          "column_desc": "the id of the team fifa api",
          "ctype": "INTEGER",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "",
          "value_desc": ""
        },
        "team_api_id": {
          "full_column_name": "team api id",
          "column_desc": "the id of the team api",
          "ctype": "INTEGER",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "",
          "value_desc": ""
        },
        "date": {
          "full_column_name": "date",
          "column_desc": "Date",
          "ctype": "TEXT",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "['2015-09-10 00:00:00']",
          "value_desc": "e.g. 2010-02-22 00:00:00"
        },
        "buildUpPlaySpeed": {
          "full_column_name": "build Up Play Speed",
          "column_desc": "the speed in which attacks are put together",
          "ctype": "INTEGER",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "",
          "value_desc": "the score which is between 1-00 to measure the team's attack speed"
        },
        "buildUpPlaySpeedClass": {
          "full_column_name": "build Up Play Speed Class",
          "column_desc": "the speed class",
          "ctype": "TEXT",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "['Balanced', 'Fast', 'Slow']",
          "value_desc": "commonsense reasoning: \n Slow: 1-33\n Balanced: 34-66\n Fast: 66-100"
        },
        "buildUpPlayDribbling": {
          "full_column_name": "build Up Play Dribbling",
          "column_desc": "the tendency/ frequency of dribbling",
          "ctype": "INTEGER",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "",
          "value_desc": ""
        },
        "buildUpPlayDribblingClass": {
          "full_column_name": "build Up Play Dribbling Class",
          "column_desc": "the dribbling class",
          "ctype": "TEXT",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "['Little', 'Normal', 'Lots']",
          "value_desc": "commonsense reasoning: \n Little: 1-33\n Normal: 34-66\n Lots: 66-100"
        },
        "buildUpPlayPassing": {
          "full_column_name": "build Up Play Passing",
          "column_desc": "affects passing distance and support from teammates",
          "ctype": "INTEGER",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "",
          "value_desc": ""
        },
        "buildUpPlayPassingClass": {
          "full_column_name": "build Up Play Passing Class",
          "column_desc": "the passing class",
          "ctype": "TEXT",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "['Mixed', 'Short', 'Long']",
          "value_desc": "commonsense reasoning: \n Short: 1-33\n Mixed: 34-66\n Long: 66-100"
        },
        "buildUpPlayPositioningClass": {
          "full_column_name": "build Up Play Positioning Class",
          "column_desc": "A team's freedom of movement in the 1st two thirds of the pitch",
          "ctype": "TEXT",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "['Organised', 'Free Form']",
          "value_desc": "Organised / Free Form"
        },
        "chanceCreationPassing": {
          "full_column_name": "chance Creation Passing",
          "column_desc": "Amount of risk in pass decision and run support",
          "ctype": "INTEGER",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "",
          "value_desc": ""
        },
        "chanceCreationPassingClass": {
          "full_column_name": "chance Creation Passing Class",
          "column_desc": "the chance creation passing class",
          "ctype": "TEXT",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "['Normal', 'Risky', 'Safe']",
          "value_desc": "commonsense reasoning: \n Safe: 1-33\n Normal: 34-66\n Risky: 66-100"
        },
        "chanceCreationCrossing": {
          "full_column_name": "chance Creation Crossing",
          "column_desc": "The tendency / frequency of crosses into the box",
          "ctype": "INTEGER",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "",
          "value_desc": ""
        },
        "chanceCreationCrossingClass": {
          "full_column_name": "chance Creation Crossing Class",
          "column_desc": "the chance creation crossing class",
          "ctype": "TEXT",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "['Normal', 'Lots', 'Little']",
          "value_desc": "commonsense reasoning: \n Little: 1-33\n Normal: 34-66\n Lots: 66-100"
        },
        "chanceCreationShooting": {
          "full_column_name": "chance Creation Shooting",
          "column_desc": "The tendency / frequency of shots taken",
          "ctype": "INTEGER",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "",
          "value_desc": ""
        },
        "chanceCreationShootingClass": {
          "full_column_name": "chance Creation Shooting Class",
          "column_desc": "the chance creation shooting class",
          "ctype": "TEXT",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "['Normal', 'Lots', 'Little']",
          "value_desc": "commonsense reasoning: \n Little: 1-33\n Normal: 34-66\n Lots: 66-100"
        },
        "chanceCreationPositioningClass": {
          "full_column_name": "chance Creation Positioning Class",
          "column_desc": "A teams freedom of movement in the final third of the pitch",
          "ctype": "TEXT",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "['Organised', 'Free Form']",
          "value_desc": "Organised / Free Form"
        },
        "defencePressure": {
          "full_column_name": "defence Pressure",
          "column_desc": "Affects how high up the pitch the team will start pressuring",
          "ctype": "INTEGER",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "",
          "value_desc": ""
        },
        "defencePressureClass": {
          "full_column_name": "defence Pressure Class",
          "column_desc": "the defence pressure class",
          "ctype": "TEXT",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "['Medium', 'Deep', 'High']",
          "value_desc": "commonsense reasoning: \n Deep: 1-33\n Medium: 34-66\n High: 66-100"
        },
        "defenceAggression": {
          "full_column_name": "defence Aggression",
          "column_desc": "Affect the teams approach to tackling the ball possessor",
          "ctype": "INTEGER",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "",
          "value_desc": ""
        },
        "defenceAggressionClass": {
          "full_column_name": "defence Aggression Class",
          "column_desc": "the defence aggression class",
          "ctype": "TEXT",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "['Press', 'Double', 'Contain']",
          "value_desc": "commonsense reasoning: \n Contain: 1-33\n Press: 34-66\n Double: 66-100"
        },
        "defenceTeamWidth": {
          "full_column_name": "defence Team Width",
          "column_desc": "Affects how much the team will shift to the ball side",
          "ctype": "INTEGER",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "",
          "value_desc": ""
        },
        "defenceTeamWidthClass": {
          "full_column_name": "defence Team Width Class",
          "column_desc": "the defence team width class",
          "ctype": "TEXT",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "['Normal', 'Wide', 'Narrow']",
          "value_desc": "commonsense reasoning: \n Narrow: 1-33\n Normal: 34-66\n Wide: 66-100"
        },
        "defenceDefenderLineClass": {
          "full_column_name": "defence Defender Line Class",
          "column_desc": "Affects the shape and strategy of the defence",
          "ctype": "TEXT",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "['Cover', 'Offside Trap']",
          "value_desc": "Cover/ Offside Trap"
        }
      },
      "Match": {
        "id": {
          "full_column_name": "id",
          "column_desc": "the unique id for matches",
          "ctype": "INTEGER",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 1,
          "examples": "",
          "value_desc": ""
        },
        "country_id": {
          "full_column_name": "country id",
          "column_desc": "country id",
          "ctype": "INTEGER",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "",
          "value_desc": ""
        },
        "league_id": {
          "full_column_name": "league id",
          "column_desc": "league id",
          "ctype": "INTEGER",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "",
          "value_desc": ""
        },
        "season": {
          "full_column_name": "season",
          "column_desc": "the season of the match",
          "ctype": "TEXT",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "['2015/2016', '2008/2009', '2014/2015', '2012/2013', '2010/2011']",
          "value_desc": ""
        },
        "stage": {
          "full_column_name": "stage",
          "column_desc": "the stage of the match",
          "ctype": "INTEGER",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "",
          "value_desc": ""
        },
        "date": {
          "full_column_name": "date",
          "column_desc": "the date of the match",
          "ctype": "TEXT",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "['2009-04-11 00:00:00']",
          "value_desc": "e.g. 2008-08-17 00:00:00"
        },
        "match_api_id": {
          "full_column_name": "match api id",
          "column_desc": "the id of the match api",
          "ctype": "INTEGER",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "",
          "value_desc": ""
        },
        "home_team_api_id": {
          "full_column_name": "home team api id",
          "column_desc": "the id of the home team api",
          "ctype": "INTEGER",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "",
          "value_desc": ""
        },
        "away_team_api_id": {
          "full_column_name": "away team api id",
          "column_desc": "the id of the away team api",
          "ctype": "INTEGER",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "",
          "value_desc": ""
        },
        "home_team_goal": {
          "full_column_name": "home team goal",
          "column_desc": "the goal of the home team",
          "ctype": "INTEGER",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "",
          "value_desc": ""
        },
        "away_team_goal": {
          "full_column_name": "away team goal",
          "column_desc": "the goal of the away team",
          "ctype": "INTEGER",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "[1, 0, 2, 3, 4]",
          "value_desc": ""
        },
        "home_player_X1": {
          "full_column_name": "home player X1",
          "column_desc": "",
          "ctype": "INTEGER",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "[None, 1, 0, 2]",
          "value_desc": ""
        },
        "home_player_X2": {
          "full_column_name": "home player X2",
          "column_desc": "",
          "ctype": "INTEGER",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "[None, 2, 3, 1, 4, 6]",
          "value_desc": ""
        },
        "home_player_X3": {
          "full_column_name": "home player X3",
          "column_desc": "",
          "ctype": "INTEGER",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "[None, 4, 5, 6, 3, 8]",
          "value_desc": ""
        },
        "home_player_X4": {
          "full_column_name": "home player X4",
          "column_desc": "",
          "ctype": "INTEGER",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "[None, 6, 7, 8, 5, 2]",
          "value_desc": ""
        },
        "home_player_X5": {
          "full_column_name": "home player X5",
          "column_desc": "",
          "ctype": "INTEGER",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "[None, 8, 1, 2, 7, 6]",
          "value_desc": ""
        },
        "home_player_X6": {
          "full_column_name": "home player X6",
          "column_desc": "",
          "ctype": "INTEGER",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "[None, 4, 2, 3, 5, 1]",
          "value_desc": ""
        },
        "home_player_X7": {
          "full_column_name": "home player X7",
          "column_desc": "",
          "ctype": "INTEGER",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "[None, 4, 6, 5, 3, 2]",
          "value_desc": ""
        },
        "home_player_X8": {
          "full_column_name": "home player X8",
          "column_desc": "",
          "ctype": "INTEGER",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "[None, 6, 3, 7, 5, 8]",
          "value_desc": ""
        },
        "home_player_X9": {
          "full_column_name": "home player X9",
          "column_desc": "",
          "ctype": "INTEGER",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "[None, 8, 5, 3, 7, 4]",
          "value_desc": ""
        },
        "home_player_X10": {
          "full_column_name": "home player X10",
          "column_desc": "",
          "ctype": "INTEGER",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "[None, 4, 7, 5, 9, 6]",
          "value_desc": ""
        },
        "home_player_X11": {
          "full_column_name": "home player X11",
          "column_desc": "",
          "ctype": "INTEGER",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "[None, 6, 5, 7, 4, 3]",
          "value_desc": ""
        },
        "away_player_X1": {
          "full_column_name": "away player X1",
          "column_desc": "",
          "ctype": "INTEGER",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "[None, 1, 2, 6]",
          "value_desc": ""
        },
        "away_player_X2": {
          "full_column_name": "away player X2",
          "column_desc": "",
          "ctype": "INTEGER",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "[None, 2, 3, 1, 4, 8]",
          "value_desc": ""
        },
        "away_player_X3": {
          "full_column_name": "away player X3",
          "column_desc": "",
          "ctype": "INTEGER",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "[None, 4, 5, 3, 6, 8]",
          "value_desc": ""
        },
        "away_player_X4": {
          "full_column_name": "away player X4",
          "column_desc": "",
          "ctype": "INTEGER",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "[None, 6, 7, 5, 8, 2]",
          "value_desc": ""
        },
        "away_player_X5": {
          "full_column_name": "away player X5",
          "column_desc": "",
          "ctype": "INTEGER",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "[None, 8, 1, 2, 7, 6]",
          "value_desc": ""
        },
        "away_player_X6": {
          "full_column_name": "away player X6",
          "column_desc": "",
          "ctype": "INTEGER",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "[None, 4, 2, 3, 5, 1]",
          "value_desc": ""
        },
        "away_player_X7": {
          "full_column_name": "away player X7",
          "column_desc": "",
          "ctype": "INTEGER",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "[None, 4, 6, 5, 3, 2]",
          "value_desc": ""
        },
        "away_player_X8": {
          "full_column_name": "away player X8",
          "column_desc": "",
          "ctype": "INTEGER",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "[None, 6, 3, 7, 5, 4]",
          "value_desc": ""
        },
        "away_player_X9": {
          "full_column_name": "away player X9",
          "column_desc": "",
          "ctype": "INTEGER",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "[None, 5, 8, 3, 7, 6]",
          "value_desc": ""
        },
        "away_player_X10": {
          "full_column_name": "away player X10",
          "column_desc": "",
          "ctype": "INTEGER",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "[None, 4, 7, 5, 9, 6]",
          "value_desc": ""
        },
        "away_player_X11": {
          "full_column_name": "away player X11",
          "column_desc": "",
          "ctype": "INTEGER",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "[None, 5, 6, 7, 4, 3]",
          "value_desc": ""
        },
        "home_player_Y1": {
          "full_column_name": "home player Y1",
          "column_desc": "",
          "ctype": "INTEGER",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "[None, 1, 0, 3]",
          "value_desc": ""
        },
        "home_player_Y2": {
          "full_column_name": "home player Y2",
          "column_desc": "",
          "ctype": "INTEGER",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "[None, 3, 0]",
          "value_desc": ""
        },
        "home_player_Y3": {
          "full_column_name": "home player Y3",
          "column_desc": "",
          "ctype": "INTEGER",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "[None, 3, 5]",
          "value_desc": ""
        },
        "home_player_Y4": {
          "full_column_name": "home player Y4",
          "column_desc": "",
          "ctype": "INTEGER",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "[None, 3, 5]",
          "value_desc": ""
        },
        "home_player_Y5": {
          "full_column_name": "home player Y5",
          "column_desc": "",
          "ctype": "INTEGER",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "[None, 3, 7, 5, 6, 8]",
          "value_desc": ""
        },
        "home_player_Y6": {
          "full_column_name": "home player Y6",
          "column_desc": "",
          "ctype": "INTEGER",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "[None, 7, 6, 5, 3, 8]",
          "value_desc": ""
        },
        "home_player_Y7": {
          "full_column_name": "home player Y7",
          "column_desc": "",
          "ctype": "INTEGER",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "[None, 7, 6, 5, 8, 9]",
          "value_desc": ""
        },
        "home_player_Y8": {
          "full_column_name": "home player Y8",
          "column_desc": "",
          "ctype": "INTEGER",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "[None, 7, 8, 6, 5, 9]",
          "value_desc": ""
        },
        "home_player_Y9": {
          "full_column_name": "home player Y9",
          "column_desc": "",
          "ctype": "INTEGER",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "[None, 7, 8, 10, 9, 6]",
          "value_desc": ""
        },
        "home_player_Y10": {
          "full_column_name": "home player Y10",
          "column_desc": "",
          "ctype": "INTEGER",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "[None, 10, 8, 9, 7, 11]",
          "value_desc": ""
        },
        "home_player_Y11": {
          "full_column_name": "home player Y11",
          "column_desc": "",
          "ctype": "INTEGER",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "[None, 10, 11, 1, 3]",
          "value_desc": ""
        },
        "away_player_Y1": {
          "full_column_name": "away player Y1",
          "column_desc": "",
          "ctype": "INTEGER",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "[None, 1, 3]",
          "value_desc": ""
        },
        "away_player_Y2": {
          "full_column_name": "away player Y2",
          "column_desc": "",
          "ctype": "INTEGER",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "[None, 3]",
          "value_desc": ""
        },
        "away_player_Y3": {
          "full_column_name": "away player Y3",
          "column_desc": "",
          "ctype": "INTEGER",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "[None, 3, 7]",
          "value_desc": ""
        },
        "away_player_Y4": {
          "full_column_name": "away player Y4",
          "column_desc": "",
          "ctype": "INTEGER",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "[None, 3, 7, 5]",
          "value_desc": ""
        },
        "away_player_Y5": {
          "full_column_name": "away player Y5",
          "column_desc": "",
          "ctype": "INTEGER",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "[None, 3, 7, 5, 6, 9]",
          "value_desc": ""
        },
        "away_player_Y6": {
          "full_column_name": "away player Y6",
          "column_desc": "",
          "ctype": "INTEGER",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "[None, 7, 6, 5, 3, 8]",
          "value_desc": ""
        },
        "away_player_Y7": {
          "full_column_name": "away player Y7",
          "column_desc": "",
          "ctype": "INTEGER",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "[None, 7, 6, 8, 5, 3]",
          "value_desc": ""
        },
        "away_player_Y8": {
          "full_column_name": "away player Y8",
          "column_desc": "",
          "ctype": "INTEGER",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "[None, 7, 8, 6, 5, 9]",
          "value_desc": ""
        },
        "away_player_Y9": {
          "full_column_name": "away player Y9",
          "column_desc": "",
          "ctype": "INTEGER",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "[None, 7, 8, 10, 9, 6]",
          "value_desc": ""
        },
        "away_player_Y10": {
          "full_column_name": "away player Y10",
          "column_desc": "",
          "ctype": "INTEGER",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "[None, 10, 8, 7, 9, 11]",
          "value_desc": ""
        },
        "away_player_Y11": {
          "full_column_name": "away player Y11",
          "column_desc": "",
          "ctype": "INTEGER",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "[None, 10, 11, 8, 7]",
          "value_desc": ""
        },
        "home_player_1": {
          "full_column_name": "home player 1",
          "column_desc": "",
          "ctype": "INTEGER",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "",
          "value_desc": ""
        },
        "home_player_2": {
          "full_column_name": "home player 2",
          "column_desc": "",
          "ctype": "INTEGER",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "",
          "value_desc": ""
        },
        "home_player_3": {
          "full_column_name": "home player 3",
          "column_desc": "",
          "ctype": "INTEGER",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "",
          "value_desc": ""
        },
        "home_player_4": {
          "full_column_name": "home player 4",
          "column_desc": "",
          "ctype": "INTEGER",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "",
          "value_desc": ""
        },
        "home_player_5": {
          "full_column_name": "home player 5",
          "column_desc": "",
          "ctype": "INTEGER",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "",
          "value_desc": ""
        },
        "home_player_6": {
          "full_column_name": "home player 6",
          "column_desc": "",
          "ctype": "INTEGER",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "",
          "value_desc": ""
        },
        "home_player_7": {
          "full_column_name": "home player 7",
          "column_desc": "",
          "ctype": "INTEGER",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "",
          "value_desc": ""
        },
        "home_player_8": {
          "full_column_name": "home player 8",
          "column_desc": "",
          "ctype": "INTEGER",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "",
          "value_desc": ""
        },
        "home_player_9": {
          "full_column_name": "home player 9",
          "column_desc": "",
          "ctype": "INTEGER",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "",
          "value_desc": ""
        },
        "home_player_10": {
          "full_column_name": "home player 10",
          "column_desc": "",
          "ctype": "INTEGER",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "",
          "value_desc": ""
        },
        "home_player_11": {
          "full_column_name": "home player 11",
          "column_desc": "",
          "ctype": "INTEGER",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "",
          "value_desc": ""
        },
        "away_player_1": {
          "full_column_name": "away player 1",
          "column_desc": "",
          "ctype": "INTEGER",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "",
          "value_desc": ""
        },
        "away_player_2": {
          "full_column_name": "away player 2",
          "column_desc": "",
          "ctype": "INTEGER",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "",
          "value_desc": ""
        },
        "away_player_3": {
          "full_column_name": "away player 3",
          "column_desc": "",
          "ctype": "INTEGER",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "",
          "value_desc": ""
        },
        "away_player_4": {
          "full_column_name": "away player 4",
          "column_desc": "",
          "ctype": "INTEGER",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "",
          "value_desc": ""
        },
        "away_player_5": {
          "full_column_name": "away player 5",
          "column_desc": "",
          "ctype": "INTEGER",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "",
          "value_desc": ""
        },
        "away_player_6": {
          "full_column_name": "away player 6",
          "column_desc": "",
          "ctype": "INTEGER",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "",
          "value_desc": ""
        },
        "away_player_7": {
          "full_column_name": "away player 7",
          "column_desc": "",
          "ctype": "INTEGER",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "",
          "value_desc": ""
        },
        "away_player_8": {
          "full_column_name": "away player 8",
          "column_desc": "",
          "ctype": "INTEGER",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "",
          "value_desc": ""
        },
        "away_player_9": {
          "full_column_name": "away player 9",
          "column_desc": "",
          "ctype": "INTEGER",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "",
          "value_desc": ""
        },
        "away_player_10": {
          "full_column_name": "away player 10",
          "column_desc": "",
          "ctype": "INTEGER",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "",
          "value_desc": ""
        },
        "away_player_11": {
          "full_column_name": "away player 11",
          "column_desc": "",
          "ctype": "INTEGER",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "",
          "value_desc": ""
        },
        "goal": {
          "full_column_name": "goal",
          "column_desc": "the goal of the match",
          "ctype": "TEXT",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "",
          "value_desc": ""
        },
        "shoton": {
          "full_column_name": "shot on",
          "column_desc": "the shot on goal of the match",
          "ctype": "TEXT",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "",
          "value_desc": "commonsense reasoning: \nA shot on goal is a shot that enters the goal or would have entered the goal if it had not been blocked by the goalkeeper or another defensive player."
        },
        "shotoff": {
          "full_column_name": "shot off",
          "column_desc": "the shot off goal of the match, which is the opposite of shot on",
          "ctype": "TEXT",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "",
          "value_desc": ""
        },
        "foulcommit": {
          "full_column_name": "foul commit",
          "column_desc": "the fouls occurred in the match",
          "ctype": "TEXT",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "",
          "value_desc": ""
        },
        "card": {
          "full_column_name": "card",
          "column_desc": "the cards given in the match",
          "ctype": "TEXT",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "",
          "value_desc": ""
        },
        "cross": {
          "full_column_name": "cross",
          "column_desc": "Balls sent into the opposition team's area from a wide position in the match",
          "ctype": "TEXT",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "",
          "value_desc": ""
        },
        "corner": {
          "full_column_name": "corner",
          "column_desc": "Ball goes out of play for a corner kick in the match",
          "ctype": "TEXT",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "",
          "value_desc": ""
        },
        "possession": {
          "full_column_name": "possession",
          "column_desc": "The duration from a player taking over the ball in the match",
          "ctype": "TEXT",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "",
          "value_desc": ""
        },
        "B365H": {
          "full_column_name": "B365H",
          "column_desc": "",
          "ctype": "REAL",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "",
          "value_desc": ""
        },
        "B365D": {
          "full_column_name": "B365D",
          "column_desc": "",
          "ctype": "REAL",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "",
          "value_desc": ""
        },
        "B365A": {
          "full_column_name": "B365A",
          "column_desc": "",
          "ctype": "REAL",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "",
          "value_desc": ""
        },
        "BWH": {
          "full_column_name": "BWH",
          "column_desc": "",
          "ctype": "REAL",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "",
          "value_desc": ""
        },
        "BWD": {
          "full_column_name": "BWD",
          "column_desc": "",
          "ctype": "REAL",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "",
          "value_desc": ""
        },
        "BWA": {
          "full_column_name": "BWA",
          "column_desc": "",
          "ctype": "REAL",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "",
          "value_desc": ""
        },
        "IWH": {
          "full_column_name": "IWH",
          "column_desc": "",
          "ctype": "REAL",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "",
          "value_desc": ""
        },
        "IWD": {
          "full_column_name": "IWD",
          "column_desc": "",
          "ctype": "REAL",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "",
          "value_desc": ""
        },
        "IWA": {
          "full_column_name": "IWA",
          "column_desc": "",
          "ctype": "REAL",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "",
          "value_desc": ""
        },
        "LBH": {
          "full_column_name": "LBH",
          "column_desc": "",
          "ctype": "REAL",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "",
          "value_desc": ""
        },
        "LBD": {
          "full_column_name": "LBD",
          "column_desc": "",
          "ctype": "REAL",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "",
          "value_desc": ""
        },
        "LBA": {
          "full_column_name": "LBA",
          "column_desc": "",
          "ctype": "REAL",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "",
          "value_desc": ""
        },
        "PSH": {
          "full_column_name": "PSH",
          "column_desc": "",
          "ctype": "REAL",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "",
          "value_desc": ""
        },
        "PSD": {
          "full_column_name": "PSD",
          "column_desc": "",
          "ctype": "REAL",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "",
          "value_desc": ""
        },
        "PSA": {
          "full_column_name": "PSA",
          "column_desc": "",
          "ctype": "REAL",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "",
          "value_desc": ""
        },
        "WHH": {
          "full_column_name": "WHH",
          "column_desc": "",
          "ctype": "REAL",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "",
          "value_desc": ""
        },
        "WHD": {
          "full_column_name": "WHD",
          "column_desc": "",
          "ctype": "REAL",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "",
          "value_desc": ""
        },
        "WHA": {
          "full_column_name": "WHA",
          "column_desc": "",
          "ctype": "REAL",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "",
          "value_desc": ""
        },
        "SJH": {
          "full_column_name": "SJH",
          "column_desc": "",
          "ctype": "REAL",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "",
          "value_desc": ""
        },
        "SJD": {
          "full_column_name": "SJD",
          "column_desc": "",
          "ctype": "REAL",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "",
          "value_desc": ""
        },
        "SJA": {
          "full_column_name": "SJA",
          "column_desc": "",
          "ctype": "REAL",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "",
          "value_desc": ""
        },
        "VCH": {
          "full_column_name": "VCH",
          "column_desc": "",
          "ctype": "REAL",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "",
          "value_desc": ""
        },
        "VCD": {
          "full_column_name": "VCD",
          "column_desc": "",
          "ctype": "REAL",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "",
          "value_desc": ""
        },
        "VCA": {
          "full_column_name": "VCA",
          "column_desc": "",
          "ctype": "REAL",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "",
          "value_desc": ""
        },
        "GBH": {
          "full_column_name": "GBH",
          "column_desc": "",
          "ctype": "REAL",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "",
          "value_desc": ""
        },
        "GBD": {
          "full_column_name": "GBD",
          "column_desc": "",
          "ctype": "REAL",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "",
          "value_desc": ""
        },
        "GBA": {
          "full_column_name": "GBA",
          "column_desc": "",
          "ctype": "REAL",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "",
          "value_desc": ""
        },
        "BSH": {
          "full_column_name": "BSH",
          "column_desc": "",
          "ctype": "REAL",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "",
          "value_desc": ""
        },
        "BSD": {
          "full_column_name": "BSD",
          "column_desc": "",
          "ctype": "REAL",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "",
          "value_desc": ""
        },
        "BSA": {
          "full_column_name": "BSA",
          "column_desc": "",
          "ctype": "REAL",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "",
          "value_desc": ""
        }
      }
    },
    "foreign_keys": [
      "Player_Attributes.player_api_id=Player.player_api_id",
      "Player_Attributes.player_fifa_api_id=Player.player_fifa_api_id",
      "League.country_id=Country.id",
      "Team_Attributes.team_api_id=Team.team_api_id",
      "Team_Attributes.team_fifa_api_id=Team.team_fifa_api_id",
      "Match.away_player_11=Player.player_api_id",
      "Match.away_player_10=Player.player_api_id",
      "Match.away_player_9=Player.player_api_id",
      "Match.away_player_8=Player.player_api_id",
      "Match.away_player_7=Player.player_api_id",
      "Match.away_player_6=Player.player_api_id",
      "Match.away_player_5=Player.player_api_id",
      "Match.away_player_4=Player.player_api_id",
      "Match.away_player_3=Player.player_api_id",
      "Match.away_player_2=Player.player_api_id",
      "Match.away_player_1=Player.player_api_id",
      "Match.home_player_11=Player.player_api_id",
      "Match.home_player_10=Player.player_api_id",
      "Match.home_player_9=Player.player_api_id",
      "Match.home_player_8=Player.player_api_id",
      "Match.home_player_7=Player.player_api_id",
      "Match.home_player_6=Player.player_api_id",
      "Match.home_player_5=Player.player_api_id",
      "Match.home_player_4=Player.player_api_id",
      "Match.home_player_3=Player.player_api_id",
      "Match.home_player_2=Player.player_api_id",
      "Match.home_player_1=Player.player_api_id",
      "Match.away_team_api_id=Team.team_api_id",
      "Match.home_team_api_id=Team.team_api_id"
    ]
  },
  "thrombosis_prediction": {
    "tables": {
      "Examination": {
        "ID": {
          "full_column_name": "ID",
          "column_desc": "identification of the patient",
          "ctype": "INTEGER",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "",
          "value_desc": ""
        },
        "Examination Date": {
          "full_column_name": "Examination Date",
          "column_desc": "Examination Date",
          "ctype": "DATE",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "[None, '1995-09-04']",
          "value_desc": ""
        },
        "aCL IgG": {
          "full_column_name": "anti-Cardiolipin antibody (IgG)",
          "column_desc": "anti-Cardiolipin antibody (IgG) concentration",
          "ctype": "REAL",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "",
          "value_desc": ""
        },
        "aCL IgM": {
          "full_column_name": "anti-Cardiolipin antibody (IgM)",
          "column_desc": "anti-Cardiolipin antibody (IgM) concentration",
          "ctype": "REAL",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "",
          "value_desc": ""
        },
        "ANA": {
          "full_column_name": "anti-nucleus antibody",
          "column_desc": "anti-nucleus antibody concentration",
          "ctype": "INTEGER",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "[None, 0, 16, 64, 4, 256]",
          "value_desc": ""
        },
        "ANA Pattern": {
          "full_column_name": "pattern observed in the sheet of ANA examination",
          "column_desc": "pattern observed in the sheet of ANA examination",
          "ctype": "TEXT",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "[None, 'S', 'P', 'P,S', 'S,P', 'p']",
          "value_desc": ""
        },
        "aCL IgA": {
          "full_column_name": "anti-Cardiolipin antibody (IgA) concentration",
          "column_desc": "anti-Cardiolipin antibody (IgA) concentration",
          "ctype": "INTEGER",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "",
          "value_desc": ""
        },
        "Diagnosis": {
          "full_column_name": "Diagnosis",
          "column_desc": "disease names",
          "ctype": "TEXT",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "[None, 'SLE', 'SjS', 'RA', 'SLE, SjS', 'MCTD']",
          "value_desc": ""
        },
        "KCT": {
          "full_column_name": "measure of degree of coagulation",
          "column_desc": "measure of degree of coagulation",
          "ctype": "TEXT",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "[None, '-', '+']",
          "value_desc": "+: positive\n\n-: negative"
        },
        "RVVT": {
          "full_column_name": "measure of degree of coagulation",
          "column_desc": "measure of degree of coagulation",
          "ctype": "TEXT",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "[None, '-', '+']",
          "value_desc": "+: positive\n\n-: negative"
        },
        "LAC": {
          "full_column_name": "measure of degree of coagulation",
          "column_desc": "measure of degree of coagulation",
          "ctype": "TEXT",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "[None, '-', '+']",
          "value_desc": "+: positive\n\n-: negative"
        },
        "Symptoms": {
          "full_column_name": "Symptoms",
          "column_desc": "other symptoms observed",
          "ctype": "TEXT",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "[None, 'CNS lupus', 'brain infarction', 'thrombophlebitis', 'thrombocytopenia', 'PH']",
          "value_desc": ""
        },
        "Thrombosis": {
          "full_column_name": "Thrombosis",
          "column_desc": "degree of thrombosis",
          "ctype": "INTEGER",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "[0, 1, 2, 3]",
          "value_desc": "0: negative (no thrombosis)\n1: positive (the most severe one)\n2: positive (severe)3: positive (mild)"
        }
      },
      "Patient": {
        "ID": {
          "full_column_name": "ID",
          "column_desc": "identification of the patient",
          "ctype": "INTEGER",
          "notnull": 1,
          "dflt_value": "0",
          "primary_key": 1,
          "examples": "",
          "value_desc": ""
        },
        "SEX": {
          "full_column_name": "SEX",
          "column_desc": "Sex",
          "ctype": "TEXT",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "['F', 'M']",
          "value_desc": "F: female; M: male"
        },
        "Birthday": {
          "full_column_name": "Birthday",
          "column_desc": "Birthday",
          "ctype": "DATE",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "[None, '1968-05-21']",
          "value_desc": ""
        },
        "Description": {
          "full_column_name": "Description",
          "column_desc": "the first date when a patient data was recorded",
          "ctype": "DATE",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "[None, '1996-12-03']",
          "value_desc": "null or empty: not recorded"
        },
        "First Date": {
          "full_column_name": "First Date",
          "column_desc": "the date when a patient came to the hospital",
          "ctype": "DATE",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "[None, '1998-05-25']",
          "value_desc": ""
        },
        "Admission": {
          "full_column_name": "Admission",
          "column_desc": "patient was admitted to the hospital (+) or followed at the outpatient clinic (-)",
          "ctype": "TEXT",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "['-', '+', '+(']",
          "value_desc": "patient was admitted to the hospital (+) or followed at the outpatient clinic (-)"
        },
        "Diagnosis": {
          "full_column_name": "Diagnosis",
          "column_desc": "disease names",
          "ctype": "TEXT",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "['SLE', 'SJS', 'RA', 'BEHCET', 'PSS']",
          "value_desc": ""
        }
      },
      "Laboratory": {
        "ID": {
          "full_column_name": "ID",
          "column_desc": "identification of the patient",
          "ctype": "INTEGER",
          "notnull": 1,
          "dflt_value": "0",
          "primary_key": 1,
          "examples": "",
          "value_desc": ""
        },
        "Date": {
          "full_column_name": "Date",
          "column_desc": "Date of the laboratory tests (YYMMDD)",
          "ctype": "DATE",
          "notnull": 1,
          "dflt_value": "'0000-00-00'",
          "primary_key": 2,
          "examples": "['1985-11-11']",
          "value_desc": ""
        },
        "GOT": {
          "full_column_name": "AST glutamic oxaloacetic transaminase",
          "column_desc": "AST glutamic oxaloacetic transaminase",
          "ctype": "INTEGER",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "",
          "value_desc": "Commonsense evidence:\n\nNormal range: N < 60"
        },
        "GPT": {
          "full_column_name": "ALT glutamic pyruvic transaminase",
          "column_desc": "ALT glutamic pyruvic transaminase",
          "ctype": "INTEGER",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "",
          "value_desc": "Commonsense evidence:\n\nNormal range: N < 60"
        },
        "LDH": {
          "full_column_name": "lactate dehydrogenase",
          "column_desc": "lactate dehydrogenase",
          "ctype": "INTEGER",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "",
          "value_desc": "Commonsense evidence:\n\nNormal range: N < 500"
        },
        "ALP": {
          "full_column_name": "alkaliphophatase",
          "column_desc": "alkaliphophatase",
          "ctype": "INTEGER",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "",
          "value_desc": "Commonsense evidence:\n\nNormal range: N < 300"
        },
        "TP": {
          "full_column_name": "total protein",
          "column_desc": "total protein",
          "ctype": "REAL",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "",
          "value_desc": "Commonsense evidence:\n\nNormal range: 6.0 < N < 8.5"
        },
        "ALB": {
          "full_column_name": "albumin",
          "column_desc": "albumin",
          "ctype": "REAL",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "",
          "value_desc": "Commonsense evidence:\n\nNormal range: 3.5 < N < 5.5"
        },
        "UA": {
          "full_column_name": "uric acid",
          "column_desc": "uric acid",
          "ctype": "REAL",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "",
          "value_desc": "Commonsense evidence:\n\nNormal range: N > 8.0 (Male)N > 6.5 (Female)"
        },
        "UN": {
          "full_column_name": "urea nitrogen",
          "column_desc": "urea nitrogen",
          "ctype": "INTEGER",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "",
          "value_desc": "Commonsense evidence:\n\nNormal range: N < 30"
        },
        "CRE": {
          "full_column_name": "creatinine",
          "column_desc": "creatinine",
          "ctype": "REAL",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "",
          "value_desc": "Commonsense evidence:\n\nNormal range: N < 1.5"
        },
        "T-BIL": {
          "full_column_name": "total bilirubin",
          "column_desc": "total bilirubin",
          "ctype": "REAL",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "",
          "value_desc": "Commonsense evidence:\n\nNormal range: N < 2.0"
        },
        "T-CHO": {
          "full_column_name": "total cholesterol",
          "column_desc": "total cholesterol",
          "ctype": "INTEGER",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "",
          "value_desc": "Commonsense evidence:\nNormal range: N < 250"
        },
        "TG": {
          "full_column_name": "triglyceride",
          "column_desc": "triglyceride",
          "ctype": "INTEGER",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "",
          "value_desc": "Commonsense evidence:\n\nNormal range: N < 200"
        },
        "CPK": {
          "full_column_name": "creatinine phosphokinase",
          "column_desc": "creatinine phosphokinase",
          "ctype": "INTEGER",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "",
          "value_desc": "Commonsense evidence:\nNormal range: N < 250"
        },
        "GLU": {
          "full_column_name": "blood glucose",
          "column_desc": "blood glucose",
          "ctype": "INTEGER",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "",
          "value_desc": "Commonsense evidence:\nNormal range: N < 180"
        },
        "WBC": {
          "full_column_name": "White blood cell",
          "column_desc": "White blood cell",
          "ctype": "REAL",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "",
          "value_desc": "Commonsense evidence:\nNormal range: 3.5 < N < 9.0"
        },
        "RBC": {
          "full_column_name": "Red blood cell",
          "column_desc": "Red blood cell",
          "ctype": "REAL",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "",
          "value_desc": "Commonsense evidence:\n\nNormal range: 3.5 < N < 6.0"
        },
        "HGB": {
          "full_column_name": "Hemoglobin",
          "column_desc": "Hemoglobin",
          "ctype": "REAL",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "",
          "value_desc": "Commonsense evidence:\n\nNormal range: 10 < N < 17"
        },
        "HCT": {
          "full_column_name": "Hematoclit",
          "column_desc": "Hematoclit",
          "ctype": "REAL",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "",
          "value_desc": "Commonsense evidence:\nNormal range: 29 < N < 52"
        },
        "PLT": {
          "full_column_name": "platelet",
          "column_desc": "platelet",
          "ctype": "INTEGER",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "",
          "value_desc": "Commonsense evidence:\n\nNormal range: 100 < N < 400"
        },
        "PT": {
          "full_column_name": "prothrombin time",
          "column_desc": "prothrombin time",
          "ctype": "REAL",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "",
          "value_desc": "Commonsense evidence:\n\nNormal range: N < 14"
        },
        "APTT": {
          "full_column_name": "activated partial prothrombin time",
          "column_desc": "activated partial prothrombin time",
          "ctype": "INTEGER",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "",
          "value_desc": "Commonsense evidence:\n\nNormal range: N < 45"
        },
        "FG": {
          "full_column_name": "fibrinogen",
          "column_desc": "fibrinogen",
          "ctype": "REAL",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "",
          "value_desc": "Commonsense evidence:\n\nNormal range: 150 < N < 450"
        },
        "PIC": {
          "full_column_name": "PIC",
          "column_desc": "",
          "ctype": "INTEGER",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "",
          "value_desc": ""
        },
        "TAT": {
          "full_column_name": "TAT",
          "column_desc": "",
          "ctype": "INTEGER",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "",
          "value_desc": ""
        },
        "TAT2": {
          "full_column_name": "TAT2",
          "column_desc": "",
          "ctype": "INTEGER",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "",
          "value_desc": ""
        },
        "U-PRO": {
          "full_column_name": "proteinuria",
          "column_desc": "proteinuria",
          "ctype": "TEXT",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "[None, '-', '0', 'TR', '30', '1']",
          "value_desc": "Commonsense evidence:\n\nNormal range: 0 < N < 30"
        },
        "IGG": {
          "full_column_name": "Ig G",
          "column_desc": "Ig G",
          "ctype": "INTEGER",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "",
          "value_desc": "Commonsense evidence:\n\nNormal range: 900 < N < 2000"
        },
        "IGA": {
          "full_column_name": "Ig A",
          "column_desc": "Ig A",
          "ctype": "INTEGER",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "",
          "value_desc": "Commonsense evidence:\n\nNormal range: 80 < N < 500"
        },
        "IGM": {
          "full_column_name": "Ig M",
          "column_desc": "Ig M",
          "ctype": "INTEGER",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "",
          "value_desc": "Commonsense evidence:\n\nNormal range: 40 < N < 400"
        },
        "CRP": {
          "full_column_name": "C-reactive protein",
          "column_desc": "C-reactive protein",
          "ctype": "TEXT",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "[None, '-', '<0.3', '<0.2', '+', '2+']",
          "value_desc": "Commonsense evidence:\n\nNormal range: N= -, +-, or N < 1.0"
        },
        "RA": {
          "full_column_name": "Rhuematoid Factor",
          "column_desc": "Rhuematoid Factor",
          "ctype": "TEXT",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "[None, '-', '+', '2+', '+-', '7-']",
          "value_desc": "Commonsense evidence:\n\nNormal range: N= -, +-"
        },
        "RF": {
          "full_column_name": "RAHA",
          "column_desc": "RAHA",
          "ctype": "TEXT",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "[None, '<40', '<20.5', '<19.5', '<20.0', '<10']",
          "value_desc": "Commonsense evidence:\n\nNormal range: N < 20"
        },
        "C3": {
          "full_column_name": "complement 3",
          "column_desc": "complement 3",
          "ctype": "INTEGER",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "",
          "value_desc": "Commonsense evidence:\n\nNormal range: N > 35"
        },
        "C4": {
          "full_column_name": "complement 4",
          "column_desc": "complement 4",
          "ctype": "INTEGER",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "",
          "value_desc": "Commonsense evidence:\n\nNormal range: N > 10"
        },
        "RNP": {
          "full_column_name": "anti-ribonuclear protein",
          "column_desc": "anti-ribonuclear protein",
          "ctype": "TEXT",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "[None, '0', 'negative', '4', '16', '1']",
          "value_desc": "Commonsense evidence:\n\nNormal range: N= -, +-"
        },
        "SM": {
          "full_column_name": "anti-SM",
          "column_desc": "anti-SM",
          "ctype": "TEXT",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "[None, '0', 'negative', '1', '8', '2']",
          "value_desc": "Commonsense evidence:\n\nNormal range: N= -, +-"
        },
        "SC170": {
          "full_column_name": "anti-scl70",
          "column_desc": "anti-scl70",
          "ctype": "TEXT",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "[None, 'negative', '0', '4', '16', '1']",
          "value_desc": "Commonsense evidence:\n\nNormal range: N= -, +-"
        },
        "SSA": {
          "full_column_name": "anti-SSA",
          "column_desc": "anti-SSA",
          "ctype": "TEXT",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "[None, '0', 'negative', '16', '64', '4']",
          "value_desc": "Commonsense evidence:\n\nNormal range: N= -, +-"
        },
        "SSB": {
          "full_column_name": "anti-SSB",
          "column_desc": "anti-SSB",
          "ctype": "TEXT",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "[None, '0', 'negative', '32', '8', '2']",
          "value_desc": "Commonsense evidence:\n\nNormal range: N= -, +-"
        },
        "CENTROMEA": {
          "full_column_name": "anti-centromere",
          "column_desc": "anti-centromere",
          "ctype": "TEXT",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "[None, '0', 'negative']",
          "value_desc": "Commonsense evidence:\n\nNormal range: N= -, +-"
        },
        "DNA": {
          "full_column_name": "anti-DNA",
          "column_desc": "anti-DNA",
          "ctype": "TEXT",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "[None, '30.3', '18.2', '18', '95.5', '9.88']",
          "value_desc": "Commonsense evidence:\n\nNormal range: N < 8"
        },
        "DNA-II": {
          "full_column_name": "anti-DNA",
          "column_desc": "anti-DNA",
          "ctype": "INTEGER",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "",
          "value_desc": "Commonsense evidence:\n\nNormal range: N < 8"
        }
      }
    },
    "foreign_keys": [
      "Examination.ID=Patient.ID",
      "Laboratory.ID=Patient.ID"
    ]
  },
  "student_club": {
    "tables": {
      "event": {
        "event_id": {
          "full_column_name": "event id",
          "column_desc": "",
          "ctype": "TEXT",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 1,
          "examples": "['rec0Si5cQ4rJRVzd6', 'rec0akZnLLpGUloLH', 'rec0dZPcWXF0QjNnE', 'rec180D2MI4EpckHy', 'rec2N69DMcrqN9PJC']",
          "value_desc": ""
        },
        "event_name": {
          "full_column_name": "event name",
          "column_desc": "",
          "ctype": "TEXT",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "['Laugh Out Loud', 'Football game', 'Community Theater', 'Yearly Wrap-up', 'Yearly Kickoff']",
          "value_desc": ""
        },
        "event_date": {
          "full_column_name": "event date",
          "column_desc": "",
          "ctype": "TEXT",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "['2020-03-10T12:00:00', '2020-05-05T12:00:00', '2020-04-26T09:00:00', '2020-04-23T13:00:00', '2020-04-21T12:00:00']",
          "value_desc": ""
        },
        "type": {
          "full_column_name": "type",
          "column_desc": "",
          "ctype": "TEXT",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "['Meeting', 'Guest Speaker', 'Game', 'Social', 'Community Service']",
          "value_desc": ""
        },
        "notes": {
          "full_column_name": "notes",
          "column_desc": "",
          "ctype": "TEXT",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "",
          "value_desc": ""
        },
        "location": {
          "full_column_name": "location",
          "column_desc": "",
          "ctype": "TEXT",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "[None, 'MU 215', 'Campus Soccer/Lacrosse stadium', 'Conference Room BA 452', 'Campus Football stadium', '900 E. Washington St.']",
          "value_desc": ""
        },
        "status": {
          "full_column_name": "status",
          "column_desc": "",
          "ctype": "TEXT",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "['Closed', 'Open', 'Planning']",
          "value_desc": ""
        }
      },
      "major": {
        "major_id": {
          "full_column_name": "major id",
          "column_desc": "",
          "ctype": "TEXT",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 1,
          "examples": "['rec06DF6vZ1CyPKpc', 'rec09LedkREyskCNv', 'rec0Eanv576RhQllI', 'rec0xRZtkzxrg8kj2', 'rec1N0upiVLy5esTO']",
          "value_desc": ""
        },
        "major_name": {
          "full_column_name": "major name",
          "column_desc": "",
          "ctype": "TEXT",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "",
          "value_desc": ""
        },
        "department": {
          "full_column_name": "department",
          "column_desc": "",
          "ctype": "TEXT",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "",
          "value_desc": ""
        },
        "college": {
          "full_column_name": "college",
          "column_desc": "",
          "ctype": "TEXT",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "['College of Agriculture and Applied Sciences', 'College of Humanities and Social Sciences', 'College of Education & Human Services', 'College of Science', 'College of Natural Resources']",
          "value_desc": ""
        }
      },
      "zip_code": {
        "zip_code": {
          "full_column_name": "zip code",
          "column_desc": "",
          "ctype": "INTEGER",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 1,
          "examples": "",
          "value_desc": ""
        },
        "type": {
          "full_column_name": "type",
          "column_desc": "",
          "ctype": "TEXT",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "['Standard', 'PO Box', 'Unique']",
          "value_desc": ""
        },
        "city": {
          "full_column_name": "city",
          "column_desc": "",
          "ctype": "TEXT",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "['Washington', 'Houston', 'New York', 'El Paso', 'Dallas']",
          "value_desc": ""
        },
        "county": {
          "full_column_name": "county",
          "column_desc": "",
          "ctype": "TEXT",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "[None, 'Los Angeles County', 'Jefferson County', 'Washington County', 'Montgomery County', 'Orange County']",
          "value_desc": ""
        },
        "state": {
          "full_column_name": "state",
          "column_desc": "",
          "ctype": "TEXT",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "['Texas', 'California', 'Pennsylvania', 'New York', 'Illinois']",
          "value_desc": ""
        },
        "short_state": {
          "full_column_name": "short state",
          "column_desc": "",
          "ctype": "TEXT",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "['TX', 'CA', 'PA', 'NY', 'IL']",
          "value_desc": ""
        }
      },
      "attendance": {
        "link_to_event": {
          "full_column_name": "link to event",
          "column_desc": "",
          "ctype": "TEXT",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 1,
          "examples": "['recLKj8BbTNqxFbTb', 'recykdvf4LgsyA3wZ', 'recEVTik3MlqbvLFi', 'recI43CzsZ0Q625ma', 'reciRZdAqNIKuMC96']",
          "value_desc": ""
        },
        "link_to_member": {
          "full_column_name": "link to member",
          "column_desc": "",
          "ctype": "TEXT",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 2,
          "examples": "['recro8T1MPMwRadVH', 'recD078PnS3x2doBe', 'recZ4PkGERzl9ziHO', 'recTjHY5xXhvkCdVT', 'recEFd8s6pkrTt4Pz']",
          "value_desc": ""
        }
      },
      "budget": {
        "budget_id": {
          "full_column_name": "budget id",
          "column_desc": "",
          "ctype": "TEXT",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 1,
          "examples": "['rec0QmEc3cSQFQ6V2', 'rec1bG6HSft7XIvTP', 'rec1z6ISJU2HdIsVm', 'rec33PFqxLtnp80RJ', 'rec4DYUKBHMPZXWB2']",
          "value_desc": ""
        },
        "category": {
          "full_column_name": "category",
          "column_desc": "",
          "ctype": "TEXT",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "['Food', 'Advertisement', 'Speaker Gifts', 'Parking', 'Club T-Shirts']",
          "value_desc": ""
        },
        "spent": {
          "full_column_name": "spent",
          "column_desc": "",
          "ctype": "REAL",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "",
          "value_desc": ""
        },
        "remaining": {
          "full_column_name": "remaining",
          "column_desc": "",
          "ctype": "REAL",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "",
          "value_desc": ""
        },
        "amount": {
          "full_column_name": "amount",
          "column_desc": "",
          "ctype": "INTEGER",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "[150, 75, 55, 25, 20]",
          "value_desc": ""
        },
        "event_status": {
          "full_column_name": "event status",
          "column_desc": "",
          "ctype": "TEXT",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "['Open', 'Closed', 'Planning']",
          "value_desc": ""
        },
        "link_to_event": {
          "full_column_name": "link to event",
          "column_desc": "",
          "ctype": "TEXT",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "['recs4x1BYWAsU2SKg', 'reciRZdAqNIKuMC96', 'recI43CzsZ0Q625ma', 'recHaMmaKyfktt5fW', 'recEVTik3MlqbvLFi']",
          "value_desc": ""
        }
      },
      "expense": {
        "expense_id": {
          "full_column_name": "expense id",
          "column_desc": "",
          "ctype": "TEXT",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 1,
          "examples": "['rec017x6R3hQqkLAo', 'rec1nIjoZKTYayqZ6', 'rec1oMgNFt7Y0G40x', 'rec4Zg7WEmfiHXcnC', 'rec7gUiykKKW4RaJS']",
          "value_desc": ""
        },
        "expense_description": {
          "full_column_name": "expense description",
          "column_desc": "",
          "ctype": "TEXT",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "['Pizza', 'Posters', 'Water, chips, cookies', 'Water, Cookies', 'Parking']",
          "value_desc": ""
        },
        "expense_date": {
          "full_column_name": "expense date",
          "column_desc": "",
          "ctype": "TEXT",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "['2019-11-19']",
          "value_desc": ""
        },
        "cost": {
          "full_column_name": "cost",
          "column_desc": "",
          "ctype": "REAL",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "",
          "value_desc": ""
        },
        "approved": {
          "full_column_name": "approved",
          "column_desc": "",
          "ctype": "TEXT",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "[None, 'true']",
          "value_desc": ""
        },
        "link_to_member": {
          "full_column_name": "link to member",
          "column_desc": "",
          "ctype": "TEXT",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "['rec4BLdZHS2Blfp4v', 'recD078PnS3x2doBe', 'recro8T1MPMwRadVH']",
          "value_desc": ""
        },
        "link_to_budget": {
          "full_column_name": "link to budget",
          "column_desc": "",
          "ctype": "TEXT",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "['recca5tkvdQgoLKZz', 'reczf4LoOK6z7oOec', 'recwXIiKoBMjXJsGZ', 'recr60T1tLsfdICV8', 'recexNBMuCY9emh6y']",
          "value_desc": ""
        }
      },
      "income": {
        "income_id": {
          "full_column_name": "income id",
          "column_desc": "",
          "ctype": "TEXT",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 1,
          "examples": "['rec0s9ZrO15zhzUeE', 'rec7f5XMQZexgtQJo', 'rec8BUJa8GXUjiglg', 'rec8V9BPNIoewWt2z', 'recCRWMfFqifuKMc6']",
          "value_desc": ""
        },
        "date_received": {
          "full_column_name": "date received",
          "column_desc": "",
          "ctype": "TEXT",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "['2019-09-25']",
          "value_desc": ""
        },
        "amount": {
          "full_column_name": "amount",
          "column_desc": "",
          "ctype": "INTEGER",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "[50, 3000, 1000, 200]",
          "value_desc": ""
        },
        "source": {
          "full_column_name": "source",
          "column_desc": "",
          "ctype": "TEXT",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "['Dues', 'Sponsorship', 'School Appropration', 'Fundraising']",
          "value_desc": ""
        },
        "notes": {
          "full_column_name": "notes",
          "column_desc": "",
          "ctype": "TEXT",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "",
          "value_desc": ""
        },
        "link_to_member": {
          "full_column_name": "link to member",
          "column_desc": "",
          "ctype": "TEXT",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "[None, 'rec4BLdZHS2Blfp4v', 'rec3pH4DxMcWHMRB7', 'recxBj3tjKTGHqucS', 'recuSfhAZIlKba4s2', 'recttfySfQnYb68u3']",
          "value_desc": ""
        }
      },
      "member": {
        "member_id": {
          "full_column_name": "member id",
          "column_desc": "",
          "ctype": "TEXT",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 1,
          "examples": "['rec1x5zBFIqoOuPW8', 'rec280Sk7o31iG0Tx', 'rec28ORZgcm1dtqBZ', 'rec2a03QXbFQAUZ7X', 'rec3pH4DxMcWHMRB7']",
          "value_desc": ""
        },
        "first_name": {
          "full_column_name": "first name",
          "column_desc": "",
          "ctype": "TEXT",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "['Vincent', 'Tyler', 'Trent', 'Sherri', 'Sacha']",
          "value_desc": ""
        },
        "last_name": {
          "full_column_name": "last name",
          "column_desc": "",
          "ctype": "TEXT",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "['Woodard', 'Warren', 'Thomason', 'Snay', 'Smith']",
          "value_desc": ""
        },
        "email": {
          "full_column_name": "email",
          "column_desc": "",
          "ctype": "TEXT",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "",
          "value_desc": ""
        },
        "position": {
          "full_column_name": "position",
          "column_desc": "",
          "ctype": "TEXT",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "['Member', 'Inactive', 'Vice President', 'Treasurer', 'Secretary']",
          "value_desc": ""
        },
        "t_shirt_size": {
          "full_column_name": "t shirt size",
          "column_desc": "",
          "ctype": "TEXT",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "['Large', 'Medium', 'X-Large', 'Small']",
          "value_desc": ""
        },
        "phone": {
          "full_column_name": "phone",
          "column_desc": "",
          "ctype": "TEXT",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "['954-555-6240', '951-555-6777', '942-555-1132', '933-555-4147', '928-555-2577']",
          "value_desc": ""
        },
        "zip": {
          "full_column_name": "zip",
          "column_desc": "",
          "ctype": "INTEGER",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "",
          "value_desc": ""
        },
        "link_to_major": {
          "full_column_name": "link to major",
          "column_desc": "",
          "ctype": "TEXT",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "[None, 'recKJHO1P6ZC5m567', 'recxRBSgVYeSEGvyo', 'reclQ8BVvj2w4cQ4V', 'recdIBgeU38UbV2sy', 'recObV24Ass2ouQHK']",
          "value_desc": ""
        }
      }
    },
    "foreign_keys": [
      "Attendance.link_to_member=Member.member_id",
      "Attendance.link_to_event=Event.event_id",
      "Budget.link_to_event=Event.event_id",
      "Expense.link_to_member=Member.member_id",
      "Expense.link_to_budget=Budget.budget_id",
      "Income.link_to_member=Member.member_id",
      "Member.zip=Zip_Code.zip_code",
      "Member.link_to_major=Major.major_id"
    ]
  },
  "debit_card_specializing": {
    "tables": {
      "customers": {
        "CustomerID": {
          "full_column_name": "CustomerID",
          "column_desc": "identification of the customer",
          "ctype": "INTEGER",
          "notnull": 1,
          "dflt_value": null,
          "primary_key": 1,
          "examples": "",
          "value_desc": ""
        },
        "Segment": {
          "full_column_name": "client segment",
          "column_desc": "client segment",
          "ctype": "TEXT",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "['SME', 'LAM', 'KAM']",
          "value_desc": ""
        },
        "Currency": {
          "full_column_name": "Currency",
          "column_desc": "Currency",
          "ctype": "TEXT",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "['CZK', 'EUR']",
          "value_desc": ""
        }
      },
      "gasstations": {
        "GasStationID": {
          "full_column_name": "Gas Station ID",
          "column_desc": "Gas Station ID",
          "ctype": "INTEGER",
          "notnull": 1,
          "dflt_value": null,
          "primary_key": 1,
          "examples": "",
          "value_desc": ""
        },
        "ChainID": {
          "full_column_name": "Chain ID",
          "column_desc": "Chain ID",
          "ctype": "INTEGER",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "",
          "value_desc": ""
        },
        "Country": {
          "full_column_name": "Country",
          "column_desc": "",
          "ctype": "TEXT",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "['CZE', 'SVK']",
          "value_desc": ""
        },
        "Segment": {
          "full_column_name": "chain segment",
          "column_desc": "chain segment",
          "ctype": "TEXT",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "['Other', 'Premium', 'Noname', 'Value for money', 'Discount']",
          "value_desc": ""
        }
      },
      "products": {
        "ProductID": {
          "full_column_name": "Product ID",
          "column_desc": "Product ID",
          "ctype": "INTEGER",
          "notnull": 1,
          "dflt_value": null,
          "primary_key": 1,
          "examples": "",
          "value_desc": ""
        },
        "Description": {
          "full_column_name": "Description",
          "column_desc": "Description",
          "ctype": "TEXT",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "['Servisní poplatek', 'Ostatni zbozi', 'Vratné obaly', 'Tisk reportu', 'Service charge']",
          "value_desc": ""
        }
      },
      "transactions_1k": {
        "TransactionID": {
          "full_column_name": "Transaction ID",
          "column_desc": "Transaction ID",
          "ctype": "INTEGER",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 1,
          "examples": "",
          "value_desc": ""
        },
        "Date": {
          "full_column_name": "Date",
          "column_desc": "Date",
          "ctype": "DATE",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "['2012-08-24']",
          "value_desc": ""
        },
        "Time": {
          "full_column_name": "Time",
          "column_desc": "Time",
          "ctype": "TEXT",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "['08:57:00', '16:20:00', '16:04:00', '15:23:00', '11:55:00']",
          "value_desc": ""
        },
        "CustomerID": {
          "full_column_name": "Customer ID",
          "column_desc": "Customer ID",
          "ctype": "INTEGER",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "",
          "value_desc": ""
        },
        "CardID": {
          "full_column_name": "Card ID",
          "column_desc": "Card ID",
          "ctype": "INTEGER",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "",
          "value_desc": ""
        },
        "GasStationID": {
          "full_column_name": "Gas Station ID",
          "column_desc": "Gas Station ID",
          "ctype": "INTEGER",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "",
          "value_desc": ""
        },
        "ProductID": {
          "full_column_name": "Product ID",
          "column_desc": "Product ID",
          "ctype": "INTEGER",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "",
          "value_desc": ""
        },
        "Amount": {
          "full_column_name": "Amount",
          "column_desc": "Amount",
          "ctype": "INTEGER",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "",
          "value_desc": ""
        },
        "Price": {
          "full_column_name": "Price",
          "column_desc": "Price",
          "ctype": "REAL",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "",
          "value_desc": "commonsense evidence:\n\ntotal price = Amount x Price"
        }
      },
      "yearmonth": {
        "CustomerID": {
          "full_column_name": "Customer ID",
          "column_desc": "Customer ID",
          "ctype": "INTEGER",
          "notnull": 1,
          "dflt_value": null,
          "primary_key": 2,
          "examples": "",
          "value_desc": ""
        },
        "Date": {
          "full_column_name": "Date",
          "column_desc": "Date",
          "ctype": "TEXT",
          "notnull": 1,
          "dflt_value": null,
          "primary_key": 1,
          "examples": "['201305', '201304', '201306', '201307', '201303']",
          "value_desc": ""
        },
        "Consumption": {
          "full_column_name": "Consumption",
          "column_desc": "consumption",
          "ctype": "REAL",
          "notnull": 0,
          "dflt_value": null,
          "primary_key": 0,
          "examples": "",
          "value_desc": ""
        }
      }
    },
    "foreign_keys": [
      "yearmonth.CustomerID=customers.CustomerID"
    ]
  }
}